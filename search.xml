<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>windows十个实用的小技巧</title>
      <link href="/posts/98ea8151/"/>
      <url>/posts/98ea8151/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>window好用但不出名的快捷键</title>
      <link href="/posts/3ed280dd/"/>
      <url>/posts/3ed280dd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>相信大家在日常使用的操作系统都是windows吧，今天我们就来介绍以下windows十个十分实用的快捷键吧，记得做好笔记哦!(๑╹◡╹)ﾉ"""</p><h5 id="1、快捷锁屏">1、快捷锁屏</h5><p>win+L</p><p>2、快捷显示桌面</p><p>win+D</p><p>3、屏幕放大</p><p>win++</p><p>4、新建文件夹</p><p>Ctrl+Shift+N</p><p>5、</p><p>6、</p><p>7、</p><p>8、</p><p>9、</p><p>10、</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkdownEmoji表情语法速查表</title>
      <link href="/posts/e34c7eb2/"/>
      <url>/posts/e34c7eb2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是一篇关于markdown中快速插入Emoji表情的语法速查表，以后写markdown想要插入emoji表情忘记语法了，可以快速查看，挺方便的。</p><h3 id="People">People</h3><hr><table><thead><tr><th style="text-align:left">ico</th><th style="text-align:left">emoji</th><th style="text-align:left">ico</th><th style="text-align:left">emoji</th></tr></thead><tbody><tr><td style="text-align:left">🤣</td><td style="text-align:left"><code>:rofl:</code></td><td style="text-align:left">😄</td><td style="text-align:left"><code>:smile:</code></td></tr><tr><td style="text-align:left">😆</td><td style="text-align:left"><code>:laughing:</code></td><td style="text-align:left">😊</td><td style="text-align:left"><code>:blush:</code></td></tr><tr><td style="text-align:left">😃</td><td style="text-align:left"><code>:smiley:</code></td><td style="text-align:left">☺</td><td style="text-align:left"><code>:relaxed:</code></td></tr><tr><td style="text-align:left">😏</td><td style="text-align:left"><code>:smirk:</code></td><td style="text-align:left">😍</td><td style="text-align:left"><code>:heart_eyes:</code></td></tr><tr><td style="text-align:left">😘</td><td style="text-align:left"><code>:kissing_heart:</code></td><td style="text-align:left">😚</td><td style="text-align:left"><code>:kissing_closed_eyes:</code></td></tr><tr><td style="text-align:left">😳</td><td style="text-align:left"><code>:flushed:</code></td><td style="text-align:left">😌</td><td style="text-align:left"><code>:relieved:</code></td></tr><tr><td style="text-align:left">🙄</td><td style="text-align:left"><code>:roll_eyes:</code></td><td style="text-align:left">🙃</td><td style="text-align:left"><code>:upside_down_face:</code></td></tr><tr><td style="text-align:left">😆</td><td style="text-align:left"><code>:satisfied:</code></td><td style="text-align:left">😁</td><td style="text-align:left"><code>:grin:</code></td></tr><tr><td style="text-align:left">😉</td><td style="text-align:left"><code>:wink:</code></td><td style="text-align:left">😜</td><td style="text-align:left"><code>:stuck_out_tongue_winking_eye:</code></td></tr><tr><td style="text-align:left">😝</td><td style="text-align:left"><code>:stuck_out_tongue_closed_eyes:</code></td><td style="text-align:left">😀</td><td style="text-align:left"><code>:grinning:</code></td></tr><tr><td style="text-align:left">🙁</td><td style="text-align:left"><code>:slightly_frowning_face:</code></td><td style="text-align:left">🙂</td><td style="text-align:left"><code>:slightly_smiling_face:</code></td></tr><tr><td style="text-align:left">😗</td><td style="text-align:left"><code>:kissing:</code></td><td style="text-align:left">😙</td><td style="text-align:left"><code>:kissing_smiling_eyes:</code></td></tr><tr><td style="text-align:left">😛</td><td style="text-align:left"><code>:stuck_out_tongue:</code></td><td style="text-align:left">😴</td><td style="text-align:left"><code>:sleeping:</code></td></tr><tr><td style="text-align:left">😟</td><td style="text-align:left"><code>:worried:</code></td><td style="text-align:left">😦</td><td style="text-align:left"><code>:frowning:</code></td></tr><tr><td style="text-align:left">😧</td><td style="text-align:left"><code>:anguished:</code></td><td style="text-align:left">😮</td><td style="text-align:left"><code>:open_mouth:</code></td></tr><tr><td style="text-align:left">😬</td><td style="text-align:left"><code>:grimacing:</code></td><td style="text-align:left">😕</td><td style="text-align:left"><code>:confused:</code></td></tr><tr><td style="text-align:left">😯</td><td style="text-align:left"><code>:hushed:</code></td><td style="text-align:left">😑</td><td style="text-align:left"><code>:expressionless:</code></td></tr><tr><td style="text-align:left">😒</td><td style="text-align:left"><code>:unamused:</code></td><td style="text-align:left">😅</td><td style="text-align:left"><code>:sweat_smile:</code></td></tr><tr><td style="text-align:left">😓</td><td style="text-align:left"><code>:sweat:</code></td><td style="text-align:left">😥</td><td style="text-align:left"><code>:disappointed_relieved:</code></td></tr><tr><td style="text-align:left">😩</td><td style="text-align:left"><code>:weary:</code></td><td style="text-align:left">😔</td><td style="text-align:left"><code>:pensive:</code></td></tr><tr><td style="text-align:left">😞</td><td style="text-align:left"><code>:disappointed:</code></td><td style="text-align:left">😖</td><td style="text-align:left"><code>:confounded:</code></td></tr><tr><td style="text-align:left">😨</td><td style="text-align:left"><code>:fearful:</code></td><td style="text-align:left">😰</td><td style="text-align:left"><code>:cold_sweat:</code></td></tr><tr><td style="text-align:left">😣</td><td style="text-align:left"><code>:persevere:</code></td><td style="text-align:left">😢</td><td style="text-align:left"><code>:cry:</code></td></tr><tr><td style="text-align:left">😭</td><td style="text-align:left"><code>:sob:</code></td><td style="text-align:left">😂</td><td style="text-align:left"><code>:joy:</code></td></tr><tr><td style="text-align:left">😲</td><td style="text-align:left"><code>:astonished:</code></td><td style="text-align:left">😱</td><td style="text-align:left"><code>:scream:</code></td></tr><tr><td style="text-align:left"><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/neckbeard.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/neckbeard.png?v8"> </span></td><td style="text-align:left"><code>:neckbeard:</code></td><td style="text-align:left">😫</td><td style="text-align:left"><code>:tired_face:</code></td></tr><tr><td style="text-align:left">😠</td><td style="text-align:left"><code>:angry:</code></td><td style="text-align:left">😡</td><td style="text-align:left"><code>:rage:</code></td></tr><tr><td style="text-align:left">🤔</td><td style="text-align:left"><code>:thinking:</code></td><td style="text-align:left">🤐</td><td style="text-align:left"><code>:zipper_mouth_face:</code></td></tr><tr><td style="text-align:left">😤</td><td style="text-align:left"><code>:triumph:</code></td><td style="text-align:left">😪</td><td style="text-align:left"><code>:sleepy:</code></td></tr><tr><td style="text-align:left">😋</td><td style="text-align:left"><code>:yum:</code></td><td style="text-align:left">😷</td><td style="text-align:left"><code>:mask:</code></td></tr><tr><td style="text-align:left">😎</td><td style="text-align:left"><code>:sunglasses:</code></td><td style="text-align:left">😵</td><td style="text-align:left"><code>:dizzy_face:</code></td></tr><tr><td style="text-align:left">👿</td><td style="text-align:left"><code>:imp:</code></td><td style="text-align:left">😈</td><td style="text-align:left"><code>:smiling_imp:</code></td></tr><tr><td style="text-align:left">😐</td><td style="text-align:left"><code>:neutral_face:</code></td><td style="text-align:left">😶</td><td style="text-align:left"><code>:no_mouth:</code></td></tr><tr><td style="text-align:left">😇</td><td style="text-align:left"><code>:innocent:</code></td><td style="text-align:left">👽</td><td style="text-align:left"><code>:alien:</code></td></tr><tr><td style="text-align:left">💛</td><td style="text-align:left"><code>:yellow_heart:</code></td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table><p>原文链接: <a href="https://sunhwee.com/posts/a927e90e.html#toc-heading-3" target="_blank" rel="noopener">https://sunhwee.com/posts/a927e90e.html#toc-heading-3</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo简明的教程</title>
      <link href="/posts/35118032/"/>
      <url>/posts/35118032/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>hexo new “name”       # 新建文章<br>hexo new page “name” # 新建页面<br>hexo g               # 生成页面<br>hexo d               # 部署<br>hexo g -d             # 生成页面并部署<br>hexo s               # 本地预览<br>hexo clean           # 清除缓存和已生成的静态文件<br>hexo help             # 帮助</p><table><thead><tr><th><code>-d</code>, <code>--deploy</code></th><th>文件生成后立即部署网站</th></tr></thead><tbody><tr><td><code>-w</code>, <code>--watch</code></td><td>监视文件变动</td></tr><tr><td><code>-b</code>, <code>--bail</code></td><td>生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td><code>-f</code>, <code>--force</code></td><td>强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr></tbody></table><h3 id="安全模式">安全模式</h3><pre><code>$ hexo --safe</code></pre><p>在安全模式下，不会载入插件和脚本。</p><h3 id="简洁模式">简洁模式</h3><pre><code>$ hexo --silent</code></pre><p>隐藏终端信息。</p><h3 id="调试模式">调试模式</h3><pre><code>$ hexo --debug</code></pre><p>在终端中显示调试信息并记录到 <code>debug.log</code></p><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><pre><code>---title: Hello Worlddate: 2013/7/13 20:46:25---</code></pre><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left"><code>layout</code></td><td style="text-align:left">布局</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>title</code></td><td style="text-align:left">标题</td><td style="text-align:left">文章的文件名</td></tr><tr><td style="text-align:left"><code>date</code></td><td style="text-align:left">建立日期</td><td style="text-align:left">文件建立日期</td></tr><tr><td style="text-align:left"><code>updated</code></td><td style="text-align:left">更新日期</td><td style="text-align:left">文件更新日期</td></tr><tr><td style="text-align:left"><code>comments</code></td><td style="text-align:left">开启文章的评论功能</td><td style="text-align:left">true</td></tr><tr><td style="text-align:left"><code>tags</code></td><td style="text-align:left">标签（不适用于分页）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>categories</code></td><td style="text-align:left">分类（不适用于分页）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>permalink</code></td><td style="text-align:left">覆盖文章网址</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>keywords</code></td><td style="text-align:left">仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td style="text-align:left"></td></tr></tbody></table><h2 id="分类和标签">分类和标签</h2><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><pre><code>categories:- Diarytags:- PS3- Games</code></pre><p>Commands:<br>clean     删除生成的文件和缓存。<br>config    获取或设置配置。<br>deploy    部署你的网站。<br>generate  生成静态文件。<br>help      得到命令的帮助。<br>init      创建一个新的Hexo文件夹。<br>list      列出网站的信息<br>migrate   将您的站点从其他系统迁移到Hexo。<br>new       创建一个新帖子。<br>publish   将草稿从_drafts移到_posts文件夹。<br>render    Render files with renderer plugins.<br>server    启动服务器。<br>version   显示版本信息。</p><p>public     #网站文件<br>themes     #主题文件夹，用来存放主题，后面在美化博客的时候经常要用<br>source     #存放用户文件，主要存放用户写的文章，图片等等。<br>_config.yml     #网站的配置信息，要跟主题里的配置信息分开，主题文件夹里也有一个同名的文件，后面配置的时候经常用它们俩。</p><p>以下命令来查看所有全局安装的模块：</p><pre><code>$ npm list -g</code></pre><p>以下命令来卸载 Node.js 模块。</p><pre><code>$ npm uninstall express</code></pre><h2 id="更新模块">更新模块</h2><p>我们可以使用以下命令更新模块：</p><pre><code>$ npm update express</code></pre><hr><h2 id="搜索模块">搜索模块</h2><p>使用以下来搜索模块：</p><pre><code>$ npm search express</code></pre><hr><h2 id="创建模块">创建模块</h2><p>创建模块，package.json 文件是必不可少的。我们可以使用 NPM 生成 package.json 文件，生成的文件包含了基本的结果。</p><pre><code>$ npm init</code></pre><ul><li>NPM提供了很多命令，例如<code>install</code>和<code>publish</code>，使用<code>npm help</code>可查看所有命令。</li><li>使用<code>npm help </code>可查看某条命令的详细帮助，例如<code>npm help install</code>。</li><li>在<code>package.json</code>所在目录下使用<code>npm install . -g</code>可先在本地安装当前命令行程序，可用于发布前的本地测试。</li><li>使用<code>npm update </code>可以把当前目录下<code>node_modules</code>子目录里边的对应模块更新至最新版本。</li><li>使用<code>npm update  -g</code>可以把全局安装的对应命令行程序更新至最新版。</li><li>使用<code>npm cache clear</code>可以清空NPM本地缓存，用于对付使用相同版本号发布新版本代码的人。</li><li>使用<code>npm unpublish @</code>可以撤销发布自己发布过的某个版本代码。</li></ul><p>npm install<br>npm install hexo-deployer-git --save//部署到git<br>（下面选择安装）<br>npm install hexo-generator-feed --save //建立RSS订阅<br>npm install hexo-generator-sitemap --save //建立站点地图<br>npm install hexo-generator-searchdb //本地搜索<br>npm install hexo-blog-encrypt --save //博文加密<br>npm install hexo-sage-posts --save //隐藏博文<br>npm install hexo-tag-aplayer //音频播放器<br>npm install hexo-tag-dplayer //视频播放器<br>npm install hexo-filter-mermaid-diagrams //mermaid<br>npm install hexo-pdf --save //pdf在线阅读<br>npm install hexo-baidu-url-submit --save //百度推送</p><h3 id="压缩：">压缩：</h3><p>生成博文是执行 <code>hexo g &amp;&amp; gulp</code> 就会根据 <code>gulpfile.js</code> 中的配置，对 public 目录中的静态资源文件进行压缩。</p><p>当你想要压缩的话执行上面命令就行，压缩后再上传部署</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python之XPath详解</title>
      <link href="/posts/c7a2ca76/"/>
      <url>/posts/c7a2ca76/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-介绍">1.介绍</h2><p>XPath是一个路径选择语言，全称 XML Path Language，支持XML和HTML的选择，类似于正则表达式，但比正则表达式简单并且方便许多！</p><p>下表为XPath的符号解释：</p><table><thead><tr><th>表　达　式</th><th>描　　述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点</td></tr><tr><td>/</td><td>从当前节点选取直接子节点</td></tr><tr><td>//</td><td>从当前节点选取子孙节点</td></tr><tr><td>.</td><td>选取当前节点</td></tr><tr><td>…</td><td>选取当前节点的父节点</td></tr><tr><td>@</td><td>选取属性</td></tr></tbody></table><p>常用匹配规则：</p><p>//name[@Attr]</p><p>解释：name为节点名</p><p>Attr：在此节点名下的属性名</p><p>//title[@lang=‘eng’]</p><p>这就是一个 XPath 规则，它代表选择所有名称为 title，同时属性 lang 的值为 eng 的节点。</p><p><img src="https://i.loli.net/2020/02/13/5TnHg4jO7R9EpAJ.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> XPATH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python之数据类型</title>
      <link href="/posts/15365e68/"/>
      <url>/posts/15365e68/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>由于老是记不住python的list，字典，元组等表示的方法及区别，经常会搞混，所以特地写了这篇文章来加强记忆和复习。</p><h3 id="list-列表">list(列表)</h3><p>符号[]，用‘’包起来，用逗号分开</p><p>例子：</p><pre><code>fish = [‘大鱼’,'鱼','小鱼']</code></pre><h3 id="tuple-元组">tuple(元组)</h3><h3 id="dictionary-字典">dictionary(字典)</h3><p>键值对应，符号{}      例：</p><p>thing = {‘1’:,}</p><h2 id="命名规范">命名规范</h2><p>模块尽量使用小写命名，首字母保持小写，尽量不要用下划线(除非多个单词，且数量不多的情况)</p><pre class=" language-language-python"><code class="language-language-python"># 正确的模块名import decoder</code></pre><p>类名使用驼峰(CamelCase)命名风格，首字母大写，私有类可用一个下划线开头</p><pre class=" language-language-Python"><code class="language-language-Python">class Farm():    pass</code></pre><p><a href="https://www.readwithu.com/Article/codeSpecification/codeSpecification_third.html" target="_blank" rel="noopener">参考链接</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python笔记之GIF的制作</title>
      <link href="/posts/d7139446/"/>
      <url>/posts/d7139446/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文使用的包为：imageio</p><p>基本用法及参数解释：</p><p>介绍完了，上代码！</p><pre><code>import imageiodef create_gif(image_list,gif_name,duration=0.5):    """    :param image_list: 原始图片，png    :param gif_name: gif的文件名    :param duration: 间隔时间    path：路径    :return:    """        frames = []    for image_name in image_list:        frames.append(imageio.imread(image_name))    #保存为GIF    imageio.mimsave(gif_name,frames,'GIF',duration = duration)    return#这个duration表示的是:def main():    image_list = ['1.png','2.png','3.png','4.png']    gif_name = 'first.gif'    duration = 1.5    create_gif(image_list,gif_name)#当前程序被当作主程序运行时， __ name__被自动赋值为固定的字符串__main__;当它被当作模块被其他文件调用时，自动被赋值为模块所在的文件名if __name__ == '__main__':    main()</code></pre><p>在这里就顺便记一下if <strong>name</strong> == '<strong>main</strong>’的具体用法及说明（其实我之前真的不是很理解这行代码）</p><p><code>__name__本身其实就是一个变量，当前程序被当作主程序运行时， __ name__被自动赋值为固定的字符串__main__;当它被当作模块被其他文件调用时，自动被赋值为模块所在的文件名</code></p><h3 id="报错解决：">报错解决：</h3><p>忽然发现是少打了一个字母，上面的代码是修改过的，请放心使用！(￣▽￣)~*</p><pre><code>import imageioimport matplotlib.pyplot as pltfrom pygifsicle import optimizen = 100gif_path = "test.gif"frames_path = "{i}.jpg"n = 100plt.figure(figsize=(4,4))for i, x in enumerate(range(n)):    plt.scatter(x/n, x/n)    plt.xlim(0, 1)    plt.ylim(0, 1)    plt.savefig("{i}.jpg".format(i=i))with imageio.get_writer(gif_path, mode='I') as writer:    for i in range(n):        writer.append_data(imageio.imread(frames_path.format(i=i)))optimize(gif_path)</code></pre><p>这是官方的GIF优化的方法！</p><p><strong>其他有趣的操作！</strong></p><h2 id="图片操作">图片操作</h2><p><strong>将指定颜色变透明 只能保存 png jpg</strong></p><pre><code>  /**     * 将指定颜色变透明 只能保存 png jpg     *     * @param imageSrc     * @param mask     * @return     */    public static BufferedImage createImageByMaskColorEx(            BufferedImage imageSrc, Color mask) {        int x, y;        x = imageSrc.getWidth(null);        y = imageSrc.getHeight(null);        BufferedImage imageDes = new BufferedImage(x, y,                BufferedImage.TYPE_4BYTE_ABGR);        WritableRaster rasterDes = imageDes.getRaster();        int[] des = new int[4];        while (--x &gt;= 0)            for (int j = 0; j &lt; y; ++j) {                int rgb = imageSrc.getRGB(x, j);                int sr, sg, sb;                sr = (rgb &amp; 0xFF0000) &gt;&gt; 16;                sg = (rgb &amp; 0xFF00) &gt;&gt; 8;                sb = rgb &amp; 0xFF;                if (sr == mask.getRed() &amp;&amp; sg == mask.getGreen()                        &amp;&amp; sb == mask.getBlue()) {                    des[3] = 0;                } else {                    des[0] = sr;                    des[1] = sg;                    des[2] = sb;                    des[3] = 255;                }                rasterDes.setPixel(x, j, des);            }        return imageDes;    }</code></pre><p><strong>按倍率缩小图片</strong></p><pre><code>  /**     * 按倍率缩小图片     *     * @param imageSrc    读取图片路径     * @param imageDest   写入图片路径     * @param widthRatio  宽度缩小比例     * @param heightRatio 高度缩小比例     */    public static void reduceImageByRatio(String imageSrc, String imageDest, int widthRatio, int heightRatio) {        FileOutputStream outputStream = null;        try {            File file = new File(imageSrc);            BufferedImage read = ImageIO.read(file);            int width = read.getWidth();            int height = read.getHeight();            /**             * 根据缩放比较 构建新的BufferImage 对象             */            BufferedImage destBufferImage = new BufferedImage(width / widthRatio, height / heightRatio, BufferedImage.TYPE_INT_RGB);            /**             * 绘制 缩小  后的图片             */            destBufferImage.getGraphics().drawImage(read, 0, 0, width / widthRatio, height / heightRatio, null);            outputStream = new FileOutputStream(imageDest);            ImageIO.write(destBufferImage, "jpg", outputStream);        } catch (IOException e) {            e.printStackTrace();        }    }</code></pre><p><strong>指定图形的长和宽</strong></p><pre><code> /**  * 指定图形的长和宽  *  * @param iamgeSrc  * @param imageDest  * @param width  * @param height  * @throws IOException  */ public static void resizeImage(String iamgeSrc, String imageDest, int width, int height) {     FileOutputStream outputStream = null;     try {         //读入文件         File file = new File(iamgeSrc);         // 构造Image对象         BufferedImage src = javax.imageio.ImageIO.read(file);         // 放大边长         BufferedImage tag = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);         //绘制放大后的图片         tag.getGraphics().drawImage(src, 0, 0, width, height, null);         outputStream = new FileOutputStream(imageDest);         outputStream = new FileOutputStream(imageDest);         ImageIO.write(tag, "jpg", outputStream);     } catch (Exception e) {         e.printStackTrace();     } }</code></pre><p>更多操作请看：<a href="https://blog.csdn.net/baidu_28665563/article/details/82887485" target="_blank" rel="noopener">https://blog.csdn.net/baidu_28665563/article/details/82887485</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> python </tag>
            
            <tag> GIF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown数学公式的使用</title>
      <link href="/posts/9bb87d2f/"/>
      <url>/posts/9bb87d2f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="常用符号">常用符号</h2><p>几乎所有数学公式有需要用$$将其包围。</p><h3 id="占位符">占位符</h3><ol><li><p>两个quad空格，符号：<code>\qquad</code>，如：$x \qquad y$</p></li><li><p>quad空格，符号：<code>\quad</code>，如：$x \quad y$</p></li><li><p>大空格，符号<code>\</code>，如：$x \  y$</p></li><li><p>中空格，符号<code>\:</code>，如：$x : y$</p></li><li><p>小空格，符号<code>\,</code>，如：$x , y$</p></li><li><p>没有空格，符号``，如：$xy$</p><h3 id="运算符">运算符</h3></li></ol><p>大于等于运算，符号：<code>\geq</code>，如：$x+y \geq z$</p><p>小于等于运算，符号：<code>\leq</code>，如：$x+y \leq z$</p><p>不等于运算，符号：<code>\neq</code>，如：$x+y \neq z$</p><p>不大于等于运算，符号：<code>\ngeq</code>，如：$x+y \ngeq z$</p><p>不大于等于运算，符号：<code>\not\geq</code>，如：$x+y \not\geq z$</p><p>不小于等于运算，符号：<code>\nleq</code>，如：$x+y \nleq z$</p><p>不小于等于运算，符号：<code>\not\leq</code>，如：$x+y \not\leq z$</p><p>约等于运算，符号：<code>\approx</code>，如：$x+y \approx z$</p><p>恒定等于运算，符号：<code>\equiv</code>，如：$x+y \equiv z$</p><h2 id="高级运算">高级运算</h2><ol><li>平均数运算（上划线），符号：<code>\overline{算式}</code>，如：$\overline{xyz}$</li><li>根号运算，符号：<code>\sqrt</code>，如：$\sqrt x$</li><li>开方运算，符号：<code>\sqrt[开方数]{被开方数}</code>，如：$\sqrt[3]{x+y}$</li><li>对数运算，符号：<code>\log</code>，如：$\log(x)$</li><li>极限运算，符号：<code>\lim</code>，如：$\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>极限运算，符号：<code>\displaystyle \lim</code>，如：$\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\sum</code>，如：$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\displaystyle \sum</code>，如：$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>积分运算，符号：<code>\int</code>，如：$\int^{\infty}_{0}{xdx}$</li><li>积分运算，符号：<code>\displaystyle \int</code>，如：$\displaystyle \int^{\infty}_{0}{xdx}$</li><li>微分运算，符号：<code>\partial</code>，如：$\frac{\partial x}{\partial y}$</li><li>矩阵表示，符号：<code>\begin{matrix} \end{matrix}</code>，如：$\left[ \begin{matrix} 1 &amp;2 &amp;\cdots &amp;4\5 &amp;6 &amp;\cdots &amp;8\vdots &amp;\vdots &amp;\ddots &amp;\vdots\13 &amp;14 &amp;\cdots &amp;16\end{matrix} \right]$</li></ol><p>13.下划线 underline ：$\underline{xy}$</p><h2 id="高难度示例">高难度示例</h2><p>大成之后，你就可以打出下面的式子了！(✪ω✪)<br>$$<br>-(\frac{\hbar^2}{2x}) \cdot  \frac{\delta \Phi ^2}{\delta x^2}+ V \Phi</p><p>= i\hbar \frac{\delta \Phi}{\delta t}<br>$$</p><p>想知道是怎么实现的吗？以下为源代码！</p><pre class=" language-language-text"><code class="language-language-text">$$-(\frac{\hbar^2}{2m}) \cdot  \frac{\delta \Phi ^2}{\delta x^2}+ V \Phi = i\hbar \frac{\delta \Phi}{\delta t}$$</code></pre><p>(σﾟ∀ﾟ)σ…:*☆哎哟不错哦</p><p>Html语法</p><div class="solid"> This is a Box<p> Math:<br>$$<br>\int_{-\infty}^{\infty} \frac{1}{x^2}dx<br>$$</p><p>（这个似乎不太行）</p><pre class=" language-language-html"><code class="language-language-html"><div class="solid">&emsp;This is a Box&emsp;Math:$$\int_{-\infty}^{\infty} \frac{1}{x^2}dx$$</div></code></pre><pre><code></code></pre><p>参考链接：</p><p><a href="https://www.jianshu.com/p/e74eb43960a1" target="_blank" rel="noopener">https://www.jianshu.com/p/e74eb43960a1</a></p><p><a href="https://zhuanlan.zhihu.com/p/84773275" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/84773275</a></p></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 数学公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020深度学习知识准备指南</title>
      <link href="/posts/f4691e0/"/>
      <url>/posts/f4691e0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="深度学习预备知识：">深度学习预备知识：</h4><h6 id="数学基础">数学基础</h6><ul><li>[ ] 线性代数</li><li>[ ] 概率统计</li><li>[ ] 优化</li></ul><p>机器学习基础</p><p>编程基础</p><h4 id="深度学习核心知识：">深度学习核心知识：</h4><p>神经网络</p><p>深度网络结构</p><p>图像分析</p><p>语音识别</p><p>自然语言处理</p><h4 id="深度学习进阶知识：">深度学习进阶知识：</h4><p>如何使用深度学习框架</p><p>完成网络的搭建、训练。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2020 </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020补番指南</title>
      <link href="/posts/7b78358a/"/>
      <url>/posts/7b78358a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>[ ] <strong>刀剑神域</strong></li><li>[ ] <strong>恋爱研究所</strong></li><li>[ ] <strong>TARI TARI</strong></li><li>[ ] 鬼灭之刃</li><li>[ ] 月影特工</li></ul><p>N = function() {    u.attr(I, “disabled”, !0),    t.loading.show(!0);    var e = AV.Object.extend(“Comment”),    n = new e;    if (v.url = decodeURI(y), v.insertedAt = new Date, R.rid) {     }</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2020 </tag>
            
            <tag> 补番 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫入门一</title>
      <link href="/posts/4b7ce70c/"/>
      <url>/posts/4b7ce70c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol><li>基本库的使用</li></ol><p>一般爬虫第一个学的库是urllib</p><p><code>urllib</code> 是一个收集了多个用到 URL 的模块的包：</p><ul><li><a href="https://docs.python.org/zh-cn/3/library/urllib.request.html#module-urllib.request" target="_blank" rel="noopener"><code>urllib.request</code></a> 打开和读取 URL</li><li><a href="https://docs.python.org/zh-cn/3/library/urllib.error.html#module-urllib.error" target="_blank" rel="noopener"><code>urllib.error</code></a> 包含 <a href="https://docs.python.org/zh-cn/3/library/urllib.request.html#module-urllib.request" target="_blank" rel="noopener"><code>urllib.request</code></a> 抛出的异常</li><li><a href="https://docs.python.org/zh-cn/3/library/urllib.parse.html#module-urllib.parse" target="_blank" rel="noopener"><code>urllib.parse</code></a> 用于解析 URL</li><li><a href="https://docs.python.org/zh-cn/3/library/urllib.robotparser.html#module-urllib.robotparser" target="_blank" rel="noopener"><code>urllib.robotparser</code></a> 用于解析 <code>robots.txt</code> 文件</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB求导方法笔记</title>
      <link href="/posts/aefaa648/"/>
      <url>/posts/aefaa648/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>matlab求导命令diff调用格式:</p><ul><li>diff(函数) ， 求的<a href="http://zhidao.baidu.com/search?word=%E4%B8%80%E9%98%B6%E5%AF%BC%E6%95%B0&amp;fr=qb_search_exp&amp;ie=utf8" target="_blank" rel="noopener">一阶导数</a>；</li><li>diff(函数， n) ，求的n阶<a href="http://zhidao.baidu.com/search?word=%E5%AF%BC%E6%95%B0&amp;fr=qb_search_exp&amp;ie=utf8" target="_blank" rel="noopener">导数</a>(n是具体整数)；</li><li>diff(函数，变量名)，求对的<a href="http://zhidao.baidu.com/search?word=%E5%81%8F%E5%AF%BC%E6%95%B0&amp;fr=qb_search_exp&amp;ie=utf8" target="_blank" rel="noopener">偏导数</a>；</li><li>diff(函数， 变量名，n)，求对的n阶<a href="http://zhidao.baidu.com/search?word=%E5%81%8F%E5%AF%BC%E6%95%B0&amp;fr=qb_search_exp&amp;ie=utf8" target="_blank" rel="noopener">偏导数</a>；</li><li>matlab求<a href="http://zhidao.baidu.com/search?word=%E9%9B%85%E5%8F%AF%E6%AF%94%E7%9F%A9%E9%98%B5&amp;fr=qb_search_exp&amp;ie=utf8" target="_blank" rel="noopener">雅可比矩阵</a>命令jacobian，调用格式:</li><li>jacobian([函数；函数； 函数]，[])给出矩阵:</li></ul><p>（1）syms x代表着声明符号变量x，只有声明了符号变量才可以进行符号运算，包括求导。</p><p>（2）f（x）=sin（x）+x^2 ，就是我们输入的要求导的函数。</p><p>（3）diff（f（x）），代表着对单变量函数求一阶导数。</p><p>（4）pretty（ans），将当前变量显示为我们常用的书面形式。</p><p>从以上结果我们可以看出，f（x）=2x+cos（x）。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 求导 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器初识</title>
      <link href="/posts/b38a6c7c/"/>
      <url>/posts/b38a6c7c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>文章目的：通过<a href="https://developer.aliyun.com/exam/intro/285?spm=a2c6h.13788107.J_6208459260.3.68e961a8Fb9IRJ" target="_blank" rel="noopener">学生成长计划领取资格考试 - 云计算及云服务器入门</a>的考试，获得12个月的云服务器。</p><p>云服务器（ECS）</p><h4 id="1-搭建个人网站">1.搭建个人网站</h4><p>已经做了很多了，就不多讲了！用宝塔+wordress</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务器 </tag>
            
            <tag> 比较 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python画图神器之--pyecharts</title>
      <link href="/posts/394f01ac/"/>
      <url>/posts/394f01ac/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>嗯，直接上代码再说明！|ू･ω･` )</p><pre><code># 导入相关包import pandas as pdfrom pyecharts.charts import *from pyecharts import options as optsfrom pyecharts.globals import *from pyecharts.faker import *</code></pre><pre><code># 读取数据data=pd.read_csv('D:/机器学习/air_quality.csv',sep=',')fun1=lambda x:x.split('-')[0]fun2=lambda x:x.split('-')[1]data['year']=data['record_date'].apply(fun1)data['month']=data['record_date'].apply(fun2)</code></pre><p><img src="https://img-blog.csdnimg.cn/20191228141537669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM0MjE2Mjk=,size_16,color_FFFFFF,t_70" alt="https://img-blog.csdnimg.cn/20191228141537669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM0MjE2Mjk=,size_16,color_FFFFFF,t_70"></p><pre><code># 成都空气质量的玫瑰花饼图df1=data.groupby(['city_name','quality_level'], as_index=False).count()df1=df1[df1['city_name']=='成都']x = list(df1['quality_level'])y = list(df1['so2_val'])pie = Pie(init_opts=opts.InitOpts(theme=ThemeType.LIGHT))pie.add("",[list(z) for z in zip(x, y)],radius=["50%", "75%"],center=["45%", "60%"],rosetype="radius",)# pie.set_colors(["blue", "green", "yellow", "red", "pink", "orange"])pie.set_series_opts(label_opts=opts.LabelOpts(is_show=True))pie.set_global_opts(title_opts=opts.TitleOpts(title="成都空气质量玫瑰花饼图",pos_left="32%"),                    legend_opts=opts.LegendOpts(orient="vertical", pos_top="15%", pos_left="5%"))pie.render_notebook()# pie.render(data_path+'成都空气质量饼图.html')</code></pre><p><img src="https://img-blog.csdnimg.cn/20191228141712934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM0MjE2Mjk=,size_16,color_FFFFFF,t_70" alt="https://img-blog.csdnimg.cn/20191228141712934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM0MjE2Mjk=,size_16,color_FFFFFF,t_70"></p><p><a href="https://pyecharts.org/#/zh-cn/rectangular_charts" target="_blank" rel="noopener">pyecharts官方文档</a></p><p>挺好看的吧！Fight!!(ｏ<sup>-</sup>)尸~’'☆ミ☆ミ</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyecharts </tag>
            
            <tag> 画图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三大深度学习框架的简单了解</title>
      <link href="/posts/509d8bd2/"/>
      <url>/posts/509d8bd2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>简要记录一下我感兴趣且也比较流行的三大深度学习框架，分别是：Pytroch，tensorflow，paddle（百度飞桨）。</p><h2 id="Pytorch">Pytorch</h2><p>官方：PyTorch是是torch的python版本，是由Facebook开源的神经网络框架，专门针对 GPU 加速的深度神经网络（DNN）编程，是使用GPU和CPU优化的深度学习张量库。</p><p>（再介绍一下Torch：一个经典的对多维矩阵数据进行操作的张量（tensor ）库）</p><h5 id="那么什么是张量呢？">那么什么是张量呢？</h5><p>张量由一组成形为任意数量的数组的原始值组成。张量的等级是其维数。</p><p>简单的理解就是：矩阵的升级版，而矩阵就是向量的升级版。那么是干什么用的呢？</p><p>举例：规模最小的张量是0阶张量，即标量，也就是一个数。</p><p>当我们把一些数有序的排列起来，就形成了1阶张量，也就是一个向量</p><p>如果我们继续把一组向量有序的排列起来，就形成了2阶张量，也就是一个矩阵</p><p>把矩阵摞起来，就是3阶张量，我们可以称为一个立方体，具有3个颜色通道的彩色图片就是一个这样的立方体</p><p>把立方体摞起来，好吧这次我们真的没有给它起别名了，就叫4阶张量了，不要去试图想像4阶张量是什么样子，它就是个数学上的概念。</p><h6 id="那张量是干什么用的呢？">那张量是干什么用的呢？</h6><p>用来表示数据的，这是我学习深度学习时感觉比较刷新三观的事，所有的数据竟然都可以用数字来表示，不管是图片，文字，还是视频，不过他背后的原理我还不清楚。张量的一部分数字就可以被称作特征，这概念以后经常用得到！</p><h4 id="示例：">示例：</h4><pre class=" language-language-swift"><code class="language-language-swift">import torch x = torch.ones(2,3,4) （两个三行四列的矩阵）print(x) </code></pre><pre class=" language-language-css"><code class="language-language-css">tensor([[[1., 1., 1., 1.],        [1., 1., 1., 1.],        [1., 1., 1., 1.]],       [[1., 1., 1., 1.],        [1., 1., 1., 1.],        [1., 1., 1., 1.]]])</code></pre><h4 id="三大特征：">三大特征：</h4><h5 id="1-简洁">1.简洁</h5><p>PyTorch 的设计遵循tensor→variable(autograd)→nn.Module 三个由低到高的抽象层次，分别代表高维数组（张量）、自动求导（变量）和神经网络（层/模块）</p><h5 id="2-易用">2.易用</h5><p>PyTorch的面向对象的接口设计来源于Torch，做调用API时比较方便！</p><h5 id="3-动态">3.动态</h5><p>pytorch的计算图是动态的，可以根据计算需要实时改变计算图。（这是与Tensorflow最大的区别）</p><h4 id="看个简单的代码！">看个简单的代码！</h4><pre class=" language-language-python"><code class="language-language-python"># -*- coding: utf-8 -*-#demo.pyimport torchimport torch.nn.functional as F  # 主要实现激活函数import matplotlib.pyplot as plt  # 绘图的工具from torch.autograd import Variable ## 生成伪数据x = torch.unsqueeze(torch.linspace(-1, 1, 100), dim=1)y = x.pow(3) + 0.2*torch.rand(x.size())    #y=x³+b# 变为Variablex, y = Variable(x), Variable(y)# 绘制数据图像plt.scatter(x.data.numpy(), y.data.numpy())plt.show()</code></pre><p>Variable：在torch中的Variable就是一个存放会变化的值的地理位置，里面的值会不断变化，就是在计算图中的坐标。（torch是用tensor计算的，tensor里面的参数都是variable的形式）</p><p>其中<code>torch.linspace</code>是为了生成连续间断的数据，第一个参数表示起点，第二个参数表示终点，第三个参数表示将这个区间分成平均几份，即生成几个数据。因为<code>torch</code>只能处理二维的数据，所以我们用<code>torch.unsqueeze</code>给伪数据添加一个维度，<code>dim</code>表示添加在第几维。<code>torch.rand</code>返回的是[0,1)之间的均匀分布。</p><p>生成：</p><p><img src="https://upload-images.jianshu.io/upload_images/6479023-7e835db421799c56.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640/format/webp" alt="https://upload-images.jianshu.io/upload_images/6479023-7e835db421799c56.png?imageMogr2/auto-orient/strip|imageView2/2/w/640/format/webp"></p><h2 id="Tensorflow">Tensorflow</h2><p>TensorFlow 是一个开源的、基于 Python 的机器学习框架，它由 Google 开发，并在图形分类、音频处理、推荐系统和自然语言处理等场景下有着丰富的应用，是目前最热门的机器学习框架。</p><p>（深度学习库能够自动求导、开源、支持多种 CPU/GPU、拥有预训练模型，并支持常用的NN架构，如递归神经网络（RNN）、卷积神经网络（CNN）和深度置信网络（DBN）。）<code>请记住缩写</code></p><h4 id="特点：">特点：</h4><ul><li><p>支持所有流行语言，如 Python、<a href="http://c.biancheng.net/cplus/" target="_blank" rel="noopener">C++</a>、<a href="http://c.biancheng.net/java/" target="_blank" rel="noopener">Java</a>、R和Go。</p></li><li><p>可以在多种平台上工作，甚至是移动平台和分布式平台。</p></li><li><p>它受到所有云服务（AWS、Google和Azure）的支持。</p></li><li><p>Keras——高级神经网络 API，已经与 TensorFlow 整合。</p></li><li><p>与 Torch/Theano 比较，TensorFlow 拥有更好的计算图表可视化。</p></li><li><p>允许模型部署到工业生产中，并且容易使用。</p></li><li><p>有非常好的社区支持。</p></li><li><p>TensorFlow 不仅仅是一个软件库，它是一套包括 TensorFlow，TensorBoard 和 TensorServing 的软件。</p><h4 id="看个简单的代码！-2">看个简单的代码！</h4><ol><li><p>导入tensorflow，这将导入 TensorFlow 库，并允许使用其精彩的功能：</p><pre><code>import tensorflow as if</code></pre></li><li><p>由于要打印的信息是一个常量字符串，因此使用 tf.constant：</p><pre><code>message = tf.constant('Welcome to the exciting world of Deep Neural Networks!')</code></pre></li><li><p>为了执行计算图，利用 with 语句定义 Session，并使用 run 来运行：</p><pre><code>with tf.Session() as sess:  print(sess.run(message).decode())</code></pre><p>4.最后是在会话中打印的信息：</p><pre><code>Welcome to the exciting world of Deep Neural Networks!</code></pre><p>其它输出的信息可以先不管。</p><h4 id="比较">比较</h4><p>PyTorch相比TensorFlow，其最大的优点是建立的神经网络是动态的，相比静态的TensorFlow，它能更加有效地去处理一些问题，比如RNN变化时间长度的输出，TensorFlow相比PyTorch的有点在于分布式训练上。</p></li></ol></li></ul><h2 id="Paddle（百度飞桨）">Paddle（百度飞桨）</h2><p>这个深度学习框架大体和上面两个差不多，但是这个是我目前正在认真学习的框架，原因无他，因为他的文档是中文的（可怜我是个英语渣渣），还有就是学习资源多且免费，非常适合学习。</p><p>详见请戳：</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习之初步入门</title>
      <link href="/posts/93f01828/"/>
      <url>/posts/93f01828/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="部分概念及专有名词">部分概念及专有名词</h3><h4 id="成本函数-个衡量模型准确率的指标，衡量依据为此模型估计X与Y间关系的能力。（来衡量AI输出与实际输出-历史数据-之间的差异，0为最好的）">成本函数:个衡量模型准确率的指标，衡量依据为此模型估计X与Y间关系的能力。（来衡量AI输出与实际输出(历史数据)之间的差异，0为最好的）</h4><h5 id="降低方法：">降低方法：</h5><p>1.梯度下降</p><p>一种求函数最小值的方法。通过每次数据集迭代之后优化模型的权重来训练模型。通过计算某一权重集下代价函数的梯度，可以看出最小值的梯度方向。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战之豆瓣电影</title>
      <link href="/posts/ddfb847b/"/>
      <url>/posts/ddfb847b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>所需包：bs4，openpyxl</p><p>上代码：</p><pre><code>def getData(baseurl):    findLink=re.compile(r'&lt;a href="(.*?)"&gt;')#找到影片详情链接    findImgSrc=re.compile(r'&lt;img.*src="(.*?)"',re.S)#找到影片图片    findTitle=re.compile(r'&lt;span class="title"&gt;(.*)&lt;/span&gt;')#找到片名    #找到评分    findRating=re.compile(r'&lt;span class="rating_num" property="v:average"&gt;(.*)&lt;/span&gt;')    #找到评价人数    findJudge=re.compile(r'&lt;span&gt;(\d*)人评价&lt;/span&gt;')    #找到概况    findInq=re.compile(r'&lt;span class="inq"&gt;(.*)&lt;/span&gt;')    #找到影片相关内容：导演，主演，年份，地区，类别    findBd=re.compile(r'&lt;p class=""&gt;(.*?)&lt;/p&gt;',re.S)    #去掉无关内容    remove=re.compile(r'                            |\n|&lt;/br&gt;|\.*')    datalist=[]</code></pre><pre><code>for i in range(0,10):    url=baseurl+str(i*25)    html=askURL(url)    soup = BeautifulSoup(html, "html.parser")    for item in soup.find_all('div',class_='item'):#找到每一个影片项        data=[]        item=str(item)#转换成字符串        # 影片详情链接        link=re.findall(findLink,item)[0]        data.append(link)#添加详情链接          imgSrc=re.findall(findImgSrc,item)[0]        data.append(imgSrc)#添加图片链接        titles=re.findall(findTitle,item)        #片名可能只有一个中文名，没有外国名        if(len(titles)==2):            ctitle=titles[0]            data.append(ctitle)#添加中文片名            otitle=titles[1].replace("/","")#去掉无关符号            data.append(otitle)#添加外国片名        else:            data.append(titles[0])#添加中文片名            data.append(' ')#留空        rating=re.findall(findRating,item)[0]        data.append(rating)#添加评分        judgeNum=re.findall(findJudge,item)[0]        data.append(judgeNum)#添加评论人数        inq=re.findall(findInq,item)                #可能没有概况        if len(inq)!=0:            inq=inq[0].replace("。","")#去掉句号            data.append(inq)#添加概况        else:            data.append(' ')#留空        bd=re.findall(findBd,item)[0]        bd=re.sub(remove,"",bd)        bd=re.sub('&lt;br(\s+)?\/?&gt;(\s+)?'," ",bd) #去掉&lt;br &gt;        bd=re.sub('/', " ",bd)#替换/        data.append(bd.strip())        datalist.append(data)        time.sleep(5)return datalist</code></pre><p>def saveData(datalist,savepath):<br>book=openpyxl.Workbook()<br>sheet = book.create_sheet(“豆瓣电影Top250”)<br>#sheet=book.add_sheet(‘豆瓣电影Top250’,cell_overwrite_ok=True)<br>col=(‘电影详情链接’,‘图片链接’,‘影片中文名’,‘影片外国名’, ‘评分’,‘评价数’,‘概况’,‘相关信息’)</p><pre><code>sheet.append(col)  #添加列头</code></pre><p>​<br>for i in range(0,250):<br>data=datalist[i]<br>for j in range(0,8):<br>sheet.cell(row = (i+2),column = (j+1),value = data[j])</p><p>#openpyxl中的单元格计数从1开始, 加上第一行是列头, 要多跳一个<br>#openpyxl中的计数和Excel内的计数方式一致, 但和常规编程从0开始的方式相左</p><pre><code>book.save(savepath) #保存</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信聊天机器人使用介绍</title>
      <link href="/posts/ebc8e568/"/>
      <url>/posts/ebc8e568/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是我github第一个认真做的一个项目，想想还有些小激动！废话不多说，介绍一下<a href="https://github.com/guhailong18/chatter" target="_blank" rel="noopener">我的第一次</a>吧！</p><p>微信聊天机器人：</p><p>依赖包：</p><pre class=" language-language-javascript"><code class="language-language-javascript">pip3 install chatterbotpip3 install chatterbot-corpus</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 聊天机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习笔记一</title>
      <link href="/posts/a6627840/"/>
      <url>/posts/a6627840/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="做出一个模型的五个步骤：">做出一个模型的五个步骤：</h6><ul><li>数据处理：从本地文件或网络地址读取数据，并做预处理操作，如校验数据的正确性等。</li><li>模型设计：完成网络结构的设计（模型要素1），相当于模型的假设空间，即模型能够表达的关系集合。</li><li>训练配置：设定模型采用的寻解算法（模型要素2），即优化器，并指定计算资源。</li><li>训练过程：循环调用训练过程，每轮均包括前向计算 、损失函数（优化目标，模型要素3）和后向传播这三个步骤。</li><li>保存模型：将训练好的模型保存，以备预测时调用。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2020 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> python </tag>
            
            <tag> 百度飞桨 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器使用笔记</title>
      <link href="/posts/1f7ef16d/"/>
      <url>/posts/1f7ef16d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>首先最好先装一个<a href="https://www.bt.cn/bbs/thread-19376-1-1.html" target="_blank" rel="noopener">宝塔面板</a>，如果已有已有WEB环境的话只能退而求其次装云助手了，如果两个都不行的话那你就太惨了，可以去国外看看有没有，对于我这种英语不好的人非常不友好，推荐的有：</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>word2vec模型</title>
      <link href="/posts/dd1038da/"/>
      <url>/posts/dd1038da/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>模型参数</strong>：</p><ul><li>window=5</li><li>min_count=10</li><li>size=128</li><li>hs=1</li><li>negative=0</li><li>iter=5</li><li>ps：其它参数见gensim库，执行代码为：gensim.models.Word2Vec(sentence, window=5, min_count=10, size=128, workers=4,hs=1, negative=0, iter=5)</li></ul><p><strong>其它相关</strong>：</p><ol><li>分词词典使用了130w+词典。分词代码：jieba.lcut(sentence)，默认使用了HMM识别新词；</li><li>剔除了所有非中文字符；</li><li>最终得到的词典大小为6115353；</li><li>模型格式有两种bin和model，使用方式：<br>a. bin模式：model = gensim.models.KeyedVectors.load_word2vec_format(model_path, binary=True)<br>b. model模式：model = gensim.models.Word2Vec.load(model_path)</li></ol><p><a href="https://www.jianshu.com/p/ae5b45e96dbf" target="_blank" rel="noopener">原文链接</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬虫环境搭建踩过的坑</title>
      <link href="/posts/9c6ca83d/"/>
      <url>/posts/9c6ca83d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>聊天机器人学习笔记(一)</title>
      <link href="/posts/10c1d492/"/>
      <url>/posts/10c1d492/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="NLTK">NLTK</h2><p>text*都是一个一个的书籍节点，直接输入text1会输出书籍标题</p><h2 id="搜索文本">搜索文本</h2><p>text1.concordance(“former”)</p><p>搜索相关词</p><pre><code>text1.similar("ship")</code></pre><p>这个倒是挺特别的</p><p>查看某个词在文章里出现的位置：</p><p>text4.dispersion_plot([“citizens”, “democracy”, “freedom”, “duties”, “America”])</p><h2 id="词统计">词统计</h2><p>len(text1)：返回总字数</p><p>set(text1)：返回文本的所有词集合</p><p>len(set(text4))：返回文本总词数</p><p>text4.count(“is”)：返回“is”这个词出现的总次数</p><p>FreqDist(text1)：统计文章的词频并按从大到小排序存到一个列表里</p><p>fdist1 = FreqDist(text1);fdist1.plot(50, cumulative=True)：统计词频，并输出累计图像</p><h4 id="NLTK的语料库：">NLTK的语料库：</h4><p>from nltk.corpus import webtext：网络文本语料库，网络和聊天文本</p><p>from nltk.corpus import brown：布朗语料库，按照文本分类好的500个不同来源的文本</p><p>from nltk.corpus import reuters：路透社语料库，1万多个新闻文档</p><p>from nltk.corpus import inaugural：就职演说语料库，55个总统的演说</p><p>组织结构：散养式（孤立的多篇文章）、分类式（按照类别组织，相互之间没有交集）、交叉式（一篇文章可能属于多个类）、渐变式（语法随着时间发生变化）</p><h2 id="语料库的通用接口">语料库的通用接口</h2><p>fileids()：返回语料库中的文件</p><p>categories()：返回语料库中的分类</p><p>raw()：返回语料库的原始内容</p><p>words()：返回语料库中的词汇</p><p>sents()：返回语料库句子</p><p>abspath()：指定文件在磁盘上的位置</p><p>open()：打开语料库的文件流</p><h2 id="加载自己的语料库">加载自己的语料库</h2><p>收集自己的语料文件（文本文件）到某路径下（比如/tmp)，然后执行：</p><pre><code>&gt;&gt;&gt; from nltk.corpus import PlaintextCorpusReader&gt;&gt;&gt; corpus_root = '/tmp'&gt;&gt;&gt; wordlists = PlaintextCorpusReader(corpus_root, '.*')&gt;&gt;&gt; wordlists.fileids()</code></pre><p>就可以列出自己语料库的各个文件了，也可以使用如wordlists.sents(‘a.txt’)和wordlists.words(‘a.txt’)等方法来获取句子和词信息</p><p><a href="http://www.shareditor.com/blogshow?blogId=64" target="_blank" rel="noopener">教程链接</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信机器人搭建笔记</title>
      <link href="/posts/9858143b/"/>
      <url>/posts/9858143b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol><li><h3 id="创建一个-Chat-Bot">创建一个 Chat Bot</h3></li></ol><pre class=" language-language-python"><code class="language-language-python">from chatterbot import ChatBotfrom chatterbot.trainers import ListTrainerchatbot = ChatBot("my chat")trainer = ListTrainer(chatbot)</code></pre><p><a href="https://github.com/codemayq/chinese_chatbot_corpus" target="_blank" rel="noopener">中文聊天语料</a></p><p>注：需要将仓库克隆下来，main.py在那里，且目录与他描述的位置不同，看下报错或源码即可。</p><p>载入语料</p><pre class=" language-language-javascript"><code class="language-language-javascript">with open('xiaohuangji.tsv', encoding='utf-8') as f:  data = f.read().replace('\t', '\n')print(data[:100])</code></pre><p>训练</p><pre class=" language-language-javascript"><code class="language-language-javascript">trainer.train(data)</code></pre><p>最后，等待训练完成之后，我们再把生成的 db.sqlite3 文件下载到本地。</p><p>注：文件目录需放置正确，同一级即可</p><p><a href="https://github.com/guhailong18/chatter" target="_blank" rel="noopener">微信公众号号聊天机器人</a>，欢迎星标，欢迎提交pr，其中的一些原理其实我也不是很懂，所以会用就拿去用吧！不会的话，那就另寻高明！</p><h3 id="后文：踩坑记录">后文：踩坑记录</h3><p>chatterbot，chatterbot-corpus使用pip安装时会出现依赖包Pyyaml所需版本不兼容的情况，这时候我真的想吐槽一下，明明是两个相互配合使用的，竟然连兼容性都有些不匹配。在<a href="https://github.com/gunthercox/chatterbot-corpus/issues/127" target="_blank" rel="noopener">issue</a>发现了问题的解决办法，但是不一定适用于所有人。</p><pre><code>pipenv install git+https://github.com/gunthercox/chatterbot-corpus.git#egg=chatterbot-corpus</code></pre><p>从源码进行安装</p><p>顺便记一下pipenv的简单使用方法:</p><ul><li><code>shell</code> 将在激活virtualenv的情况下生成一个shell。</li><li><code>run</code>将从virtualenv运行给定命令，并转发任何参数（例如<code>$ pipenv run python</code>）。</li><li><code>check</code> 声称当前环境已满足PEP 508要求。</li><li><code>graph</code> 将打印出所有已安装依赖项的漂亮图形。</li></ul><p><a href="https://github.com/pypa/pipenv" target="_blank" rel="noopener">github</a>             <a href="https://blog.csdn.net/u011054333/article/details/82891847" target="_blank" rel="noopener">中文说明</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> chatterbot </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端资源大全</title>
      <link href="/posts/aa04407b/"/>
      <url>/posts/aa04407b/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="非常抱歉, 这个密码看着不太对, 请您再试试吧." data-whm="很抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码才能查看哦." /><label>您好, 这里需要密码才能查看哦.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="8185448df1fe345de7d9d7c142fc73759a600dbce455d95d4526b5741bd143bc"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 资源 </tag>
            
            <tag> 前端 </tag>
            
            <tag> 自学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown使用流程图</title>
      <link href="/posts/4bcf2a6b/"/>
      <url>/posts/4bcf2a6b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><pre><code>该插件基于flowchart.js，因此您可以按以下方式定义图表：​```flowst=&gt;start: Start|past:&gt;http://www.google.com[blank]e=&gt;end: End:&gt;http://www.google.comop1=&gt;operation: My Operation|pastop2=&gt;operation: Stuff|currentsub1=&gt;subroutine: My Subroutine|invalidcond=&gt;condition: Yesor No?|approved:&gt;http://www.google.comc2=&gt;condition: Good idea|rejectedio=&gt;inputoutput: catch something...|requestst-&gt;op1(right)-&gt;condcond(yes, right)-&gt;c2cond(no)-&gt;sub1(left)-&gt;op1c2(yes)-&gt;io-&gt;ec2(no)-&gt;op2-&gt;e​```</code></pre><hr><pre><code>该插件基于js-sequence-diagrams，因此您可以将图表定义如下：​```sequenceAlice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks!​```</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>matery主题美化</title>
      <link href="/posts/39e2c676/"/>
      <url>/posts/39e2c676/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="修改页面配色">修改页面配色</h2><p>查找方法基本就是打开chrome浏览器的检查,选择想要查看的页面元素,然后看他的Style文件,找到关键词之后去hexo-theme-matery主题的css文件中查找后修改即可</p><p>打开 <code>matery/source/css/matery.css</code> 文件 搜索 <code>.bg-color</code> 大概在198行<br>修改<code>background-image</code>属性中<code>linear-gradient</code>内的值即可改成你自己想要的颜色。</p><h2 id="添加文章显示作者名字">添加文章显示作者名字</h2><pre><code>---------------------- layout/_partial/post-detail.ejs -----------------------&lt;div class="info-break-policy"&gt;    &lt;% if (page.author &amp;&amp; page.author.length &gt; 0) { %&gt;        &lt;i class="fa fa-pencil"&gt;&lt;/i&gt; 作者: &lt;%- page.author %&gt;     &lt;% } else { %&gt;    &lt;i class="fa fa-pencil"&gt;&lt;/i&gt; 作者: &lt;%- config.author %&gt;    &lt;% } %&gt;&lt;/div&gt;</code></pre><h2 id="添加一言">添加一言</h2><p>如果需要出处的话可以使用以下代码，不过应该有更简便的写法，不过id的参数我调了好几次都没成功。</p><pre><code>--------------------------- layout/_widget/dream.ejs ---------------------------&lt;div class="row"&gt;   &lt;div class="col l8 offset-l2 m10 offset-m1 s10 offset-s1 center-align text"&gt;&lt;div id="hitokoto"&gt;:D 获取中...&lt;/div&gt;&lt;i id="hitofrom"&gt;:D 获取中...&lt;/i&gt;&lt;script src="https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js"&gt;&lt;/script&gt;&lt;script src="https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js"&gt;&lt;/script&gt;&lt;script&gt;fetch('https://v1.hitokoto.cn').then(function (res){return res.json();}).then(function (data) {var hitokoto = document.getElementById('hitokoto');hitokoto.innerText = '\xa0\xa0\xa0\xa0\xa0\xa0\xa0' + data.hitokoto;var hitofrom = document.getElementById('hitofrom');hitofrom.innerText = "——" + "《" + data.from + "》" + '\xa0'; }).catch(function (err) {console.error(err);})&lt;/script&gt;   &lt;/div&gt; &lt;/div&gt;</code></pre><p>算了，大家直接从以下两个链接参考就行：</p><p><a href="https://chen-shang.github.io/2019/08/15/ji-zhu-zong-jie/hexo/hexo-theme-matery-zhu-ti-you-hua/#toc-heading-8" target="_blank" rel="noopener">推荐，全都可以使用</a></p><p><a href="https://www.jianshu.com/p/2e6ae2123d57" target="_blank" rel="noopener">部分过时，仅供参考</a></p><p>颜色选择可以从下面找：</p><p><a href="http://xh.5156edu.com/page/z1015m9220j18754.html" target="_blank" rel="noopener">颜色名称及色样表(HTML版)</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>text</title>
      <link href="/posts/3b8ba7c7/"/>
      <url>/posts/3b8ba7c7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS笔记之图标</title>
      <link href="/posts/c2d28339/"/>
      <url>/posts/c2d28339/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>最近心血来潮想要修改一下网站的一些图标，原本以为它们实在source里面使用图片的方式保存的，但是在source找了一圈也没有，再看看主题配置文件，在进行百度，最后发现 icon都是用CSS实现的，真实神奇，果然在hexo-theme-matery\source\libs\awesome\css里发现了网站用的所有图标都在这里了。然后你可以在里面添加你想要的图标，并且在config将图标名改成对应的就行！附上代码表。</p><table><thead><tr><th>NAME</th><th>CODE</th><th>NAME</th><th>CODE</th></tr></thead><tbody><tr><td>.fa-glass</td><td>\f000</td><td>.fa-github-alt</td><td>\f113</td></tr><tr><td>.fa-music</td><td>\f001</td><td>.fa-folder-o</td><td>\f114</td></tr><tr><td>.fa-search</td><td>\f002</td><td>.fa-folder-open-o</td><td>\f115</td></tr><tr><td>.fa-envelope-o</td><td>\f003</td><td>.fa-smile-o</td><td>\f118</td></tr><tr><td>.fa-heart</td><td>\f004</td><td>.fa-frown-o</td><td>\f119</td></tr><tr><td>.fa-star</td><td>\f005</td><td>.fa-meh-o</td><td>\f11a</td></tr><tr><td>.fa-star-o</td><td>\f006</td><td>.fa-gamepad</td><td>\f11b</td></tr><tr><td>.fa-user</td><td>\f007</td><td>.fa-keyboard-o</td><td>\f11c</td></tr><tr><td>.fa-film</td><td>\f008</td><td>.fa-flag-o</td><td>\f11d</td></tr><tr><td>.fa-th-large</td><td>\f009</td><td>.fa-flag-checkered</td><td>\f11e</td></tr><tr><td>.fa-th</td><td>\f00a</td><td>.fa-terminal</td><td>\f120</td></tr><tr><td>.fa-th-list</td><td>\f00b</td><td>.fa-code</td><td>\f121</td></tr><tr><td>.fa-check</td><td>\f00c</td><td>.fa-mail-reply-all</td><td>\f122</td></tr><tr><td>.fa-remove</td><td>\f00d</td><td>.fa-reply-all</td><td>\f122</td></tr><tr><td>.fa-close</td><td>\f00d</td><td>.fa-star-half-empty</td><td>\f123</td></tr><tr><td>.fa-times</td><td>\f00d</td><td>.fa-star-half-full</td><td>\f123</td></tr><tr><td>.fa-search-plus</td><td>\f00e</td><td>.fa-star-half-o</td><td>\f123</td></tr><tr><td>.fa-search-minus</td><td>\f010</td><td>.fa-location-arrow</td><td>\f124</td></tr><tr><td>.fa-power-off</td><td>\f011</td><td>.fa-crop</td><td>\f125</td></tr><tr><td>.fa-signal</td><td>\f012</td><td>.fa-code-fork</td><td>\f126</td></tr><tr><td>.fa-gear</td><td>\f013</td><td>.fa-unlink</td><td>\f127</td></tr><tr><td>.fa-cog</td><td>\f013</td><td>.fa-chain-broken</td><td>\f127</td></tr><tr><td>.fa-trash-o</td><td>\f014</td><td>.fa-question</td><td>\f128</td></tr><tr><td>.fa-home</td><td>\f015</td><td>.fa-info</td><td>\f129</td></tr><tr><td>.fa-file-o</td><td>\f016</td><td>.fa-exclamation</td><td>\f12a</td></tr><tr><td>.fa-clock-o</td><td>\f017</td><td>.fa-superscript</td><td>\f12b</td></tr><tr><td>.fa-road</td><td>\f018</td><td>.fa-subscript</td><td>\f12c</td></tr><tr><td>.fa-download</td><td>\f019</td><td>.fa-eraser</td><td>\f12d</td></tr><tr><td>.fa-arrow-circle-o-down</td><td>\f01a</td><td>.fa-puzzle-piece</td><td>\f12e</td></tr><tr><td>.fa-arrow-circle-o-up</td><td>\f01b</td><td>.fa-microphone</td><td>\f130</td></tr><tr><td>.fa-inbox</td><td>\f01c</td><td>.fa-microphone-slash</td><td>\f131</td></tr><tr><td>.fa-play-circle-o</td><td>\f01d</td><td>.fa-shield</td><td>\f132</td></tr><tr><td>.fa-rotate-right</td><td>\f01e</td><td>.fa-calendar-o</td><td>\f133</td></tr><tr><td>.fa-repeat</td><td>\f01e</td><td>.fa-fire-extinguisher</td><td>\f134</td></tr><tr><td>.fa-refresh</td><td>\f021</td><td>.fa-rocket</td><td>\f135</td></tr><tr><td>.fa-list-alt</td><td>\f022</td><td>.fa-maxcdn</td><td>\f136</td></tr><tr><td>.fa-lock</td><td>\f023</td><td>.fa-chevron-circle-left</td><td>\f137</td></tr><tr><td>.fa-flag</td><td>\f024</td><td>.fa-chevron-circle-right</td><td>\f138</td></tr><tr><td>.fa-headphones</td><td>\f025</td><td>.fa-chevron-circle-up</td><td>\f139</td></tr><tr><td>.fa-volume-off</td><td>\f026</td><td>.fa-chevron-circle-down</td><td>\f13a</td></tr><tr><td>.fa-volume-down</td><td>\f027</td><td>.fa-html5</td><td>\f13b</td></tr><tr><td>.fa-volume-up</td><td>\f028</td><td>.fa-css3</td><td>\f13c</td></tr><tr><td>.fa-qrcode</td><td>\f029</td><td>.fa-anchor</td><td>\f13d</td></tr><tr><td>.fa-barcode</td><td>\f02a</td><td>.fa-unlock-alt</td><td>\f13e</td></tr><tr><td>.fa-tag</td><td>\f02b</td><td>.fa-bullseye</td><td>\f140</td></tr><tr><td>.fa-tags</td><td>\f02c</td><td>.fa-ellipsis-h</td><td>\f141</td></tr><tr><td>.fa-book</td><td>\f02d</td><td>.fa-ellipsis-v</td><td>\f142</td></tr><tr><td>.fa-bookmark</td><td>\f02e</td><td>.fa-rss-square</td><td>\f143</td></tr><tr><td>.fa-print</td><td>\f02f</td><td>.fa-play-circle</td><td>\f144</td></tr><tr><td>.fa-camera</td><td>\f030</td><td>.fa-ticket</td><td>\f145</td></tr><tr><td>.fa-font</td><td>\f031</td><td>.fa-minus-square</td><td>\f146</td></tr><tr><td>.fa-bold</td><td>\f032</td><td>.fa-minus-square-o</td><td>\f147</td></tr><tr><td>.fa-italic</td><td>\f033</td><td>.fa-level-up</td><td>\f148</td></tr><tr><td>.fa-text-height</td><td>\f034</td><td>.fa-level-down</td><td>\f149</td></tr><tr><td>.fa-text-width</td><td>\f035</td><td>.fa-check-square</td><td>\f14a</td></tr><tr><td>.fa-align-left</td><td>\f036</td><td>.fa-pencil-square</td><td>\f14b</td></tr><tr><td>.fa-align-center</td><td>\f037</td><td>.fa-external-link-square</td><td>\f14c</td></tr><tr><td>.fa-align-right</td><td>\f038</td><td>.fa-share-square</td><td>\f14d</td></tr><tr><td>.fa-align-justify</td><td>\f039</td><td>.fa-compass</td><td>\f14e</td></tr><tr><td>.fa-list</td><td>\f03a</td><td>.fa-toggle-down</td><td>\f150</td></tr><tr><td>.fa-dedent</td><td>\f03b</td><td>.fa-caret-square-o-down</td><td>\f150</td></tr><tr><td>.fa-outdent</td><td>\f03b</td><td>.fa-toggle-up</td><td>\f151</td></tr><tr><td>.fa-indent</td><td>\f03c</td><td>.fa-caret-square-o-up</td><td>\f151</td></tr><tr><td>.fa-video-camera</td><td>\f03d</td><td>.fa-toggle-right</td><td>\f152</td></tr><tr><td>.fa-photo</td><td>\f03e</td><td>.fa-caret-square-o-right</td><td>\f152</td></tr><tr><td>.fa-image</td><td>\f03e</td><td>.fa-euro</td><td>\f153</td></tr><tr><td>.fa-picture-o</td><td>\f03e</td><td>.fa-eur</td><td>\f153</td></tr><tr><td>.fa-pencil</td><td>\f040</td><td>.fa-gbp</td><td>\f154</td></tr><tr><td>.fa-map-marker</td><td>\f041</td><td>.fa-dollar</td><td>\f155</td></tr><tr><td>.fa-adjust</td><td>\f042</td><td>.fa-usd</td><td>\f155</td></tr><tr><td>.fa-tint</td><td>\f043</td><td>.fa-rupee</td><td>\f156</td></tr><tr><td>.fa-edit</td><td>\f044</td><td>.fa-inr</td><td>\f156</td></tr><tr><td>.fa-pencil-square-o</td><td>\f044</td><td>.fa-cny</td><td>\f157</td></tr><tr><td>.fa-share-square-o</td><td>\f045</td><td>.fa-rmb</td><td>\f157</td></tr><tr><td>.fa-check-square-o</td><td>\f046</td><td>.fa-yen</td><td>\f157</td></tr><tr><td>.fa-arrows</td><td>\f047</td><td>.fa-jpy</td><td>\f157</td></tr><tr><td>.fa-step-backward</td><td>\f048</td><td>.fa-ruble</td><td>\f158</td></tr><tr><td>.fa-fast-backward</td><td>\f049</td><td>.fa-rouble</td><td>\f158</td></tr><tr><td>.fa-backward</td><td>\f04a</td><td>.fa-rub</td><td>\f158</td></tr><tr><td>.fa-play</td><td>\f04b</td><td>.fa-won</td><td>\f159</td></tr><tr><td>.fa-pause</td><td>\f04c</td><td>.fa-krw</td><td>\f159</td></tr><tr><td>.fa-stop</td><td>\f04d</td><td>.fa-bitcoin</td><td>\f15a</td></tr><tr><td>.fa-forward</td><td>\f04e</td><td>.fa-btc</td><td>\f15a</td></tr><tr><td>.fa-fast-forward</td><td>\f050</td><td>.fa-file</td><td>\f15b</td></tr><tr><td>.fa-step-forward</td><td>\f051</td><td>.fa-file-text</td><td>\f15c</td></tr><tr><td>.fa-eject</td><td>\f052</td><td>.fa-sort-alpha-asc</td><td>\f15d</td></tr><tr><td>.fa-chevron-left</td><td>\f053</td><td>.fa-sort-alpha-desc</td><td>\f15e</td></tr><tr><td>.fa-chevron-right</td><td>\f054</td><td>.fa-sort-amount-asc</td><td>\f160</td></tr><tr><td>.fa-plus-circle</td><td>\f055</td><td>.fa-sort-amount-desc</td><td>\f161</td></tr><tr><td>.fa-minus-circle</td><td>\f056</td><td>.fa-sort-numeric-asc</td><td>\f162</td></tr><tr><td>.fa-times-circle</td><td>\f057</td><td>.fa-sort-numeric-desc</td><td>\f163</td></tr><tr><td>.fa-check-circle</td><td>\f058</td><td>.fa-thumbs-up</td><td>\f164</td></tr><tr><td>.fa-question-circle</td><td>\f059</td><td>.fa-thumbs-down</td><td>\f165</td></tr><tr><td>.fa-info-circle</td><td>\f05a</td><td>.fa-youtube-square</td><td>\f166</td></tr><tr><td>.fa-crosshairs</td><td>\f05b</td><td>.fa-youtube</td><td>\f167</td></tr><tr><td>.fa-times-circle-o</td><td>\f05c</td><td>.fa-xing</td><td>\f168</td></tr><tr><td>.fa-check-circle-o</td><td>\f05d</td><td>.fa-xing-square</td><td>\f169</td></tr><tr><td>.fa-ban</td><td>\f05e</td><td>.fa-youtube-play</td><td>\f16a</td></tr><tr><td>.fa-arrow-left</td><td>\f060</td><td>.fa-dropbox</td><td>\f16b</td></tr><tr><td>.fa-arrow-right</td><td>\f061</td><td>.fa-stack-overflow</td><td>\f16c</td></tr><tr><td>.fa-arrow-up</td><td>\f062</td><td>.fa-instagram</td><td>\f16d</td></tr><tr><td>.fa-arrow-down</td><td>\f063</td><td>.fa-flickr</td><td>\f16e</td></tr><tr><td>.fa-mail-forward</td><td>\f064</td><td>.fa-adn</td><td>\f170</td></tr><tr><td>.fa-share</td><td>\f064</td><td>.fa-bitbucket</td><td>\f171</td></tr><tr><td>.fa-expand</td><td>\f065</td><td>.fa-bitbucket-square</td><td>\f172</td></tr><tr><td>.fa-compress</td><td>\f066</td><td>.fa-tumblr</td><td>\f173</td></tr><tr><td>.fa-plus</td><td>\f067</td><td>.fa-tumblr-square</td><td>\f174</td></tr><tr><td>.fa-minus</td><td>\f068</td><td>.fa-long-arrow-down</td><td>\f175</td></tr><tr><td>.fa-asterisk</td><td>\f069</td><td>.fa-long-arrow-up</td><td>\f176</td></tr><tr><td>.fa-exclamation-circle</td><td>\f06a</td><td>.fa-long-arrow-left</td><td>\f177</td></tr><tr><td>.fa-gift</td><td>\f06b</td><td>.fa-long-arrow-right</td><td>\f178</td></tr><tr><td>.fa-leaf</td><td>\f06c</td><td>.fa-apple</td><td>\f179</td></tr><tr><td>.fa-fire</td><td>\f06d</td><td>.fa-windows</td><td>\f17a</td></tr><tr><td>.fa-eye</td><td>\f06e</td><td>.fa-android</td><td>\f17b</td></tr><tr><td>.fa-eye-slash</td><td>\f070</td><td>.fa-linux</td><td>\f17c</td></tr><tr><td>.fa-warning</td><td>\f071</td><td>.fa-dribbble</td><td>\f17d</td></tr><tr><td>.fa-exclamation-triangle</td><td>\f071</td><td>.fa-skype</td><td>\f17e</td></tr><tr><td>.fa-plane</td><td>\f072</td><td>.fa-foursquare</td><td>\f180</td></tr><tr><td>.fa-calendar</td><td>\f073</td><td>.fa-trello</td><td>\f181</td></tr><tr><td>.fa-random</td><td>\f074</td><td>.fa-female</td><td>\f182</td></tr><tr><td>.fa-comment</td><td>\f075</td><td>.fa-male</td><td>\f183</td></tr><tr><td>.fa-magnet</td><td>\f076</td><td>.fa-gittip</td><td>\f184</td></tr><tr><td>.fa-chevron-up</td><td>\f077</td><td>.fa-sun-o</td><td>\f185</td></tr><tr><td>.fa-chevron-down</td><td>\f078</td><td>.fa-moon-o</td><td>\f186</td></tr><tr><td>.fa-retweet</td><td>\f079</td><td>.fa-archive</td><td>\f187</td></tr><tr><td>.fa-shopping-cart</td><td>\f07a</td><td>.fa-bug</td><td>\f188</td></tr><tr><td>.fa-folder</td><td>\f07b</td><td>.fa-vk</td><td>\f189</td></tr><tr><td>.fa-folder-open</td><td>\f07c</td><td>.fa-weibo</td><td>\f18a</td></tr><tr><td>.fa-arrows-v</td><td>\f07d</td><td>.fa-renren</td><td>\f18b</td></tr><tr><td>.fa-arrows-h</td><td>\f07e</td><td>.fa-pagelines</td><td>\f18c</td></tr><tr><td>.fa-bar-chart-o</td><td>\f080</td><td>.fa-stack-exchange</td><td>\f18d</td></tr><tr><td>.fa-bar-chart</td><td>\f080</td><td>.fa-arrow-circle-o-right</td><td>\f18e</td></tr><tr><td>.fa-twitter-square</td><td>\f081</td><td>.fa-arrow-circle-o-left</td><td>\f190</td></tr><tr><td>.fa-facebook-square</td><td>\f082</td><td>.fa-toggle-left</td><td>\f191</td></tr><tr><td>.fa-camera-retro</td><td>\f083</td><td>.fa-caret-square-o-left</td><td>\f191</td></tr><tr><td>.fa-key</td><td>\f084</td><td>.fa-dot-circle-o</td><td>\f192</td></tr><tr><td>.fa-gears</td><td>\f085</td><td>.fa-wheelchair</td><td>\f193</td></tr><tr><td>.fa-cogs</td><td>\f085</td><td>.fa-vimeo-square</td><td>\f194</td></tr><tr><td>.fa-comments</td><td>\f086</td><td>.fa-turkish-lira</td><td>\f195</td></tr><tr><td>.fa-thumbs-o-up</td><td>\f087</td><td>.fa-try</td><td>\f195</td></tr><tr><td>.fa-thumbs-o-down</td><td>\f088</td><td>.fa-plus-square-o</td><td>\f196</td></tr><tr><td>.fa-star-half</td><td>\f089</td><td>.fa-space-shuttle</td><td>\f197</td></tr><tr><td>.fa-heart-o</td><td>\f08a</td><td>.fa-slack</td><td>\f198</td></tr><tr><td>.fa-sign-out</td><td>\f08b</td><td>.fa-envelope-square</td><td>\f199</td></tr><tr><td>.fa-linkedin-square</td><td>\f08c</td><td>.fa-wordpress</td><td>\f19a</td></tr><tr><td>.fa-thumb-tack</td><td>\f08d</td><td>.fa-openid</td><td>\f19b</td></tr><tr><td>.fa-external-link</td><td>\f08e</td><td>.fa-institution</td><td>\f19c</td></tr><tr><td>.fa-sign-in</td><td>\f090</td><td>.fa-bank</td><td>\f19c</td></tr><tr><td>.fa-trophy</td><td>\f091</td><td>.fa-university</td><td>\f19c</td></tr><tr><td>.fa-github-square</td><td>\f092</td><td>.fa-mortar-board</td><td>\f19d</td></tr><tr><td>.fa-upload</td><td>\f093</td><td>.fa-graduation-cap</td><td>\f19d</td></tr><tr><td>.fa-lemon-o</td><td>\f094</td><td>.fa-yahoo</td><td>\f19e</td></tr><tr><td>.fa-phone</td><td>\f095</td><td>.fa-google</td><td>\f1a0</td></tr><tr><td>.fa-square-o</td><td>\f096</td><td>.fa-reddit</td><td>\f1a1</td></tr><tr><td>.fa-bookmark-o</td><td>\f097</td><td>.fa-reddit-square</td><td>\f1a2</td></tr><tr><td>.fa-phone-square</td><td>\f098</td><td>.fa-stumbleupon-circle</td><td>\f1a3</td></tr><tr><td>.fa-twitter</td><td>\f099</td><td>.fa-stumbleupon</td><td>\f1a4</td></tr><tr><td>.fa-facebook</td><td>\f09a</td><td>.fa-delicious</td><td>\f1a5</td></tr><tr><td>.fa-github</td><td>\f09b</td><td>.fa-digg</td><td>\f1a6</td></tr><tr><td>.fa-unlock</td><td>\f09c</td><td>.fa-pied-piper</td><td>\f1a7</td></tr><tr><td>.fa-credit-card</td><td>\f09d</td><td>.fa-pied-piper-alt</td><td>\f1a8</td></tr><tr><td>.fa-rss</td><td>\f09e</td><td>.fa-drupal</td><td>\f1a9</td></tr><tr><td>.fa-hdd-o</td><td>\f0a0</td><td>.fa-joomla</td><td>\f1aa</td></tr><tr><td>.fa-bullhorn</td><td>\f0a1</td><td>.fa-language</td><td>\f1ab</td></tr><tr><td>.fa-bell</td><td>\f0f3</td><td>.fa-fax</td><td>\f1ac</td></tr><tr><td>.fa-certificate</td><td>\f0a3</td><td>.fa-building</td><td>\f1ad</td></tr><tr><td>.fa-hand-o-right</td><td>\f0a4</td><td>.fa-child</td><td>\f1ae</td></tr><tr><td>.fa-hand-o-left</td><td>\f0a5</td><td>.fa-paw</td><td>\f1b0</td></tr><tr><td>.fa-hand-o-up</td><td>\f0a6</td><td>.fa-spoon</td><td>\f1b1</td></tr><tr><td>.fa-hand-o-down</td><td>\f0a7</td><td>.fa-cube</td><td>\f1b2</td></tr><tr><td>.fa-arrow-circle-left</td><td>\f0a8</td><td>.fa-cubes</td><td>\f1b3</td></tr><tr><td>.fa-arrow-circle-right</td><td>\f0a9</td><td>.fa-behance</td><td>\f1b4</td></tr><tr><td>.fa-arrow-circle-up</td><td>\f0aa</td><td>.fa-behance-square</td><td>\f1b5</td></tr><tr><td>.fa-arrow-circle-down</td><td>\f0ab</td><td>.fa-steam</td><td>\f1b6</td></tr><tr><td>.fa-globe</td><td>\f0ac</td><td>.fa-steam-square</td><td>\f1b7</td></tr><tr><td>.fa-wrench</td><td>\f0ad</td><td>.fa-recycle</td><td>\f1b8</td></tr><tr><td>.fa-tasks</td><td>\f0ae</td><td>.fa-automobile</td><td>\f1b9</td></tr><tr><td>.fa-filter</td><td>\f0b0</td><td>.fa-car</td><td>\f1b9</td></tr><tr><td>.fa-briefcase</td><td>\f0b1</td><td>.fa-cab</td><td>\f1ba</td></tr><tr><td>.fa-arrows-alt</td><td>\f0b2</td><td>.fa-taxi</td><td>\f1ba</td></tr><tr><td>.fa-group</td><td>\f0c0</td><td>.fa-tree</td><td>\f1bb</td></tr><tr><td>.fa-users</td><td>\f0c0</td><td>.fa-spotify</td><td>\f1bc</td></tr><tr><td>.fa-chain</td><td>\f0c1</td><td>.fa-deviantart</td><td>\f1bd</td></tr><tr><td>.fa-link</td><td>\f0c1</td><td>.fa-soundcloud</td><td>\f1be</td></tr><tr><td>.fa-cloud</td><td>\f0c2</td><td>.fa-database</td><td>\f1c0</td></tr><tr><td>.fa-flask</td><td>\f0c3</td><td>.fa-file-pdf-o</td><td>\f1c1</td></tr><tr><td>.fa-cut</td><td>\f0c4</td><td>.fa-file-word-o</td><td>\f1c2</td></tr><tr><td>.fa-scissors</td><td>\f0c4</td><td>.fa-file-excel-o</td><td>\f1c3</td></tr><tr><td>.fa-copy</td><td>\f0c5</td><td>.fa-file-powerpoint-o</td><td>\f1c4</td></tr><tr><td>.fa-files-o</td><td>\f0c5</td><td>.fa-file-photo-o</td><td>\f1c5</td></tr><tr><td>.fa-paperclip</td><td>\f0c6</td><td>.fa-file-picture-o</td><td>\f1c5</td></tr><tr><td>.fa-save</td><td>\f0c7</td><td>.fa-file-image-o</td><td>\f1c5</td></tr><tr><td>.fa-floppy-o</td><td>\f0c7</td><td>.fa-file-zip-o</td><td>\f1c6</td></tr><tr><td>.fa-square</td><td>\f0c8</td><td>.fa-file-archive-o</td><td>\f1c6</td></tr><tr><td>.fa-navicon</td><td>\f0c9</td><td>.fa-file-sound-o</td><td>\f1c7</td></tr><tr><td>.fa-reorder</td><td>\f0c9</td><td>.fa-file-audio-o</td><td>\f1c7</td></tr><tr><td>.fa-bars</td><td>\f0c9</td><td>.fa-file-movie-o</td><td>\f1c8</td></tr><tr><td>.fa-list-ul</td><td>\f0ca</td><td>.fa-file-video-o</td><td>\f1c8</td></tr><tr><td>.fa-list-ol</td><td>\f0cb</td><td>.fa-file-code-o</td><td>\f1c9</td></tr><tr><td>.fa-strikethrough</td><td>\f0cc</td><td>.fa-vine</td><td>\f1ca</td></tr><tr><td>.fa-underline</td><td>\f0cd</td><td>.fa-codepen</td><td>\f1cb</td></tr><tr><td>.fa-table</td><td>\f0ce</td><td>.fa-jsfiddle</td><td>\f1cc</td></tr><tr><td>.fa-magic</td><td>\f0d0</td><td>.fa-life-bouy</td><td>\f1cd</td></tr><tr><td>.fa-truck</td><td>\f0d1</td><td>.fa-life-buoy</td><td>\f1cd</td></tr><tr><td>.fa-pinterest</td><td>\f0d2</td><td>.fa-life-saver</td><td>\f1cd</td></tr><tr><td>.fa-pinterest-square</td><td>\f0d3</td><td>.fa-support</td><td>\f1cd</td></tr><tr><td>.fa-google-plus-square</td><td>\f0d4</td><td>.fa-life-ring</td><td>\f1cd</td></tr><tr><td>.fa-google-plus</td><td>\f0d5</td><td>.fa-circle-o-notch</td><td>\f1ce</td></tr><tr><td>.fa-money</td><td>\f0d6</td><td>.fa-ra</td><td>\f1d0</td></tr><tr><td>.fa-caret-down</td><td>\f0d7</td><td>.fa-rebel</td><td>\f1d0</td></tr><tr><td>.fa-caret-up</td><td>\f0d8</td><td>.fa-ge</td><td>\f1d1</td></tr><tr><td>.fa-caret-left</td><td>\f0d9</td><td>.fa-empire</td><td>\f1d1</td></tr><tr><td>.fa-caret-right</td><td>\f0da</td><td>.fa-git-square</td><td>\f1d2</td></tr><tr><td>.fa-columns</td><td>\f0db</td><td>.fa-git</td><td>\f1d3</td></tr><tr><td>.fa-unsorted</td><td>\f0dc</td><td>.fa-hacker-news</td><td>\f1d4</td></tr><tr><td>.fa-sort</td><td>\f0dc</td><td>.fa-tencent-weibo</td><td>\f1d5</td></tr><tr><td>.fa-sort-down</td><td>\f0dd</td><td>.fa-qq</td><td>\f1d6</td></tr><tr><td>.fa-sort-desc</td><td>\f0dd</td><td>.fa-wechat</td><td>\f1d7</td></tr><tr><td>.fa-sort-up</td><td>\f0de</td><td>.fa-weixin</td><td>\f1d7</td></tr><tr><td>.fa-sort-asc</td><td>\f0de</td><td>.fa-send</td><td>\f1d8</td></tr><tr><td>.fa-envelope</td><td>\f0e0</td><td>.fa-paper-plane</td><td>\f1d8</td></tr><tr><td>.fa-linkedin</td><td>\f0e1</td><td>.fa-send-o</td><td>\f1d9</td></tr><tr><td>.fa-rotate-left</td><td>\f0e2</td><td>.fa-paper-plane-o</td><td>\f1d9</td></tr><tr><td>.fa-undo</td><td>\f0e2</td><td>.fa-history</td><td>\f1da</td></tr><tr><td>.fa-legal</td><td>\f0e3</td><td>.fa-circle-thin</td><td>\f1db</td></tr><tr><td>.fa-gavel</td><td>\f0e3</td><td>.fa-header</td><td>\f1dc</td></tr><tr><td>.fa-dashboard</td><td>\f0e4</td><td>.fa-paragraph</td><td>\f1dd</td></tr><tr><td>.fa-tachometer</td><td>\f0e4</td><td>.fa-sliders</td><td>\f1de</td></tr><tr><td>.fa-comment-o</td><td>\f0e5</td><td>.fa-share-alt</td><td>\f1e0</td></tr><tr><td>.fa-comments-o</td><td>\f0e6</td><td>.fa-share-alt-square</td><td>\f1e1</td></tr><tr><td>.fa-flash</td><td>\f0e7</td><td>.fa-bomb</td><td>\f1e2</td></tr><tr><td>.fa-bolt</td><td>\f0e7</td><td>.fa-soccer-ball-o</td><td>\f1e3</td></tr><tr><td>.fa-sitemap</td><td>\f0e8</td><td>.fa-futbol-o</td><td>\f1e3</td></tr><tr><td>.fa-umbrella</td><td>\f0e9</td><td>.fa-tty</td><td>\f1e4</td></tr><tr><td>.fa-paste</td><td>\f0ea</td><td>.fa-binoculars</td><td>\f1e5</td></tr><tr><td>.fa-clipboard</td><td>\f0ea</td><td>.fa-plug</td><td>\f1e6</td></tr><tr><td>.fa-lightbulb-o</td><td>\f0eb</td><td>.fa-slideshare</td><td>\f1e7</td></tr><tr><td>.fa-exchange</td><td>\f0ec</td><td>.fa-twitch</td><td>\f1e8</td></tr><tr><td>.fa-cloud-download</td><td>\f0ed</td><td>.fa-yelp</td><td>\f1e9</td></tr><tr><td>.fa-cloud-upload</td><td>\f0ee</td><td>.fa-newspaper-o</td><td>\f1ea</td></tr><tr><td>.fa-user-md</td><td>\f0f0</td><td>.fa-wifi</td><td>\f1eb</td></tr><tr><td>.fa-stethoscope</td><td>\f0f1</td><td>.fa-calculator</td><td>\f1ec</td></tr><tr><td>.fa-suitcase</td><td>\f0f2</td><td>.fa-paypal</td><td>\f1ed</td></tr><tr><td>.fa-bell-o</td><td>\f0a2</td><td>.fa-google-wallet</td><td>\f1ee</td></tr><tr><td>.fa-coffee</td><td>\f0f4</td><td>.fa-cc-visa</td><td>\f1f0</td></tr><tr><td>.fa-cutlery</td><td>\f0f5</td><td>.fa-cc-mastercard</td><td>\f1f1</td></tr><tr><td>.fa-file-text-o</td><td>\f0f6</td><td>.fa-cc-discover</td><td>\f1f2</td></tr><tr><td>.fa-building-o</td><td>\f0f7</td><td>.fa-cc-amex</td><td>\f1f3</td></tr><tr><td>.fa-hospital-o</td><td>\f0f8</td><td>.fa-cc-paypal</td><td>\f1f4</td></tr><tr><td>.fa-ambulance</td><td>\f0f9</td><td>.fa-cc-stripe</td><td>\f1f5</td></tr><tr><td>.fa-medkit</td><td>\f0fa</td><td>.fa-bell-slash</td><td>\f1f6</td></tr><tr><td>.fa-fighter-jet</td><td>\f0fb</td><td>.fa-bell-slash-o</td><td>\f1f7</td></tr><tr><td>.fa-beer</td><td>\f0fc</td><td>.fa-trash</td><td>\f1f8</td></tr><tr><td>.fa-h-square</td><td>\f0fd</td><td>.fa-copyright</td><td>\f1f9</td></tr><tr><td>.fa-plus-square</td><td>\f0fe</td><td>.fa-at</td><td>\f1fa</td></tr><tr><td>.fa-angle-double-left</td><td>\f100</td><td>.fa-eyedropper</td><td>\f1fb</td></tr><tr><td>.fa-angle-double-right</td><td>\f101</td><td>.fa-paint-brush</td><td>\f1fc</td></tr><tr><td>.fa-angle-double-up</td><td>\f102</td><td>.fa-birthday-cake</td><td>\f1fd</td></tr><tr><td>.fa-angle-double-down</td><td>\f103</td><td>.fa-area-chart</td><td>\f1fe</td></tr><tr><td>.fa-angle-left</td><td>\f104</td><td>.fa-pie-chart</td><td>\f200</td></tr><tr><td>.fa-angle-right</td><td>\f105</td><td>.fa-line-chart</td><td>\f201</td></tr><tr><td>.fa-angle-up</td><td>\f106</td><td>.fa-lastfm</td><td>\f202</td></tr><tr><td>.fa-angle-down</td><td>\f107</td><td>.fa-lastfm-square</td><td>\f203</td></tr><tr><td>.fa-desktop</td><td>\f108</td><td>.fa-toggle-off</td><td>\f204</td></tr><tr><td>.fa-laptop</td><td>\f109</td><td>.fa-toggle-on</td><td>\f205</td></tr><tr><td>.fa-tablet</td><td>\f10a</td><td>.fa-bicycle</td><td>\f206</td></tr><tr><td>.fa-mobile-phone</td><td>\f10b</td><td>.fa-bus</td><td>\f207</td></tr><tr><td>.fa-mobile</td><td>\f10b</td><td>.fa-ioxhost</td><td>\f208</td></tr><tr><td>.fa-circle-o</td><td>\f10c</td><td>.fa-angellist</td><td>\f209</td></tr><tr><td>.fa-quote-left</td><td>\f10d</td><td>.fa-cc</td><td>\f20a</td></tr><tr><td>.fa-quote-right</td><td>\f10e</td><td>.fa-shekel</td><td>\f20b</td></tr><tr><td>.fa-spinner</td><td>\f110</td><td>.fa-sheqel</td><td>\f20b</td></tr><tr><td>.fa-circle</td><td>\f111</td><td>.fa-ils</td><td>\f20b</td></tr><tr><td>.fa-mail-reply</td><td>\f112</td><td>.fa-meanpath</td><td>\f20c</td></tr><tr><td>.fa-reply</td><td>\f112</td><td></td><td></td></tr></tbody></table><p>附：Font Awesome----一套绝佳的图标字体库和CSS框架的官网链接：<a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">http://fontawesome.dashgame.com/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 图标 </tag>
            
            <tag> 主题 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo有趣小功能之雪花飞舞</title>
      <link href="/posts/221edd67/"/>
      <url>/posts/221edd67/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在themes\hexo-theme-matery\source\js目录下新建一个 snow.js 文件，粘贴以下代码：</p><pre><code>/*样式一*/(function($){$.fn.snow = function(options){var $flake = $('&lt;div id="snowbox" /&gt;').css({'position': 'absolute','z-index':'9999', 'top': '-50px'}).html('&amp;#10052;'),documentHeight = $(document).height(),documentWidth= $(document).width(),defaults = {minSize: 10,maxSize: 20,newOn: 1000,flakeColor: "#AFDAEF" /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */},options= $.extend({}, defaults, options);var interval= setInterval( function(){var startPositionLeft = Math.random() * documentWidth - 100,startOpacity = 0.5 + Math.random(),sizeFlake = options.minSize + Math.random() * options.maxSize,endPositionTop = documentHeight - 200,endPositionLeft = startPositionLeft - 500 + Math.random() * 500,durationFall = documentHeight * 10 + Math.random() * 5000;$flake.clone().appendTo('body').css({left: startPositionLeft,opacity: startOpacity,'font-size': sizeFlake,color: options.flakeColor}).animate({top: endPositionTop,left: endPositionLeft,opacity: 0.2},durationFall,'linear',function(){$(this).remove()});}, options.newOn);    };})(jQuery);$(function(){    $.fn.snow({     minSize: 5, /* 定义雪花最小尺寸 */    maxSize: 50,/* 定义雪花最大尺寸 */    newOn: 300  /* 定义密集程度，数字越小越密集 */    });});</code></pre><pre><code>/*样式二*//* 控制下雪 */function snowFall(snow) {    /* 可配置属性 */    snow = snow || {};    this.maxFlake = snow.maxFlake || 200;   /* 最多片数 */    this.flakeSize = snow.flakeSize || 10;  /* 雪花形状 */    this.fallSpeed = snow.fallSpeed || 1;   /* 坠落速度 */}/* 兼容写法 */requestAnimationFrame = window.requestAnimationFrame ||    window.mozRequestAnimationFrame ||    window.webkitRequestAnimationFrame ||    window.msRequestAnimationFrame ||    window.oRequestAnimationFrame ||    function(callback) { setTimeout(callback, 1000 / 60); };cancelAnimationFrame = window.cancelAnimationFrame ||    window.mozCancelAnimationFrame ||    window.webkitCancelAnimationFrame ||    window.msCancelAnimationFrame ||window.oCancelAnimationFrame;/* 开始下雪 */snowFall.prototype.start = function(){    /* 创建画布 */    snowCanvas.apply(this);    /* 创建雪花形状 */    createFlakes.apply(this);    /* 画雪 */    drawSnow.apply(this)}/* 创建画布 */function snowCanvas() {    /* 添加Dom结点 */    var snowcanvas = document.createElement("canvas");    snowcanvas.id = "snowfall";    snowcanvas.width = window.innerWidth;    snowcanvas.height = document.body.clientHeight;    snowcanvas.setAttribute("style", "position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;");    document.getElementsByTagName("body")[0].appendChild(snowcanvas);    this.canvas = snowcanvas;    this.ctx = snowcanvas.getContext("2d");    /* 窗口大小改变的处理 */    window.onresize = function() {        snowcanvas.width = window.innerWidth;        /* snowcanvas.height = window.innerHeight */    }}/* 雪运动对象 */function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) {    this.x = Math.floor(Math.random() * canvasWidth);   /* x坐标 */    this.y = Math.floor(Math.random() * canvasHeight);  /* y坐标 */    this.size = Math.random() * flakeSize + 2;          /* 形状 */    this.maxSize = flakeSize;                           /* 最大形状 */    this.speed = Math.random() * 1 + fallSpeed;         /* 坠落速度 */    this.fallSpeed = fallSpeed;                         /* 坠落速度 */    this.velY = this.speed;                             /* Y方向速度 */    this.velX = 0;                                      /* X方向速度 */    this.stepSize = Math.random() / 30;                 /* 步长 */    this.step = 0                                       /* 步数 */}flakeMove.prototype.update = function() {    var x = this.x,        y = this.y;    /* 左右摆动(余弦) */    this.velX *= 0.98;    if (this.velY &lt;= this.speed) {        this.velY = this.speed    }    this.velX += Math.cos(this.step += .05) * this.stepSize;    this.y += this.velY;    this.x += this.velX;    /* 飞出边界的处理 */    if (this.x &gt;= canvas.width || this.x &lt;= 0 || this.y &gt;= canvas.height || this.y &lt;= 0) {        this.reset(canvas.width, canvas.height)    }};/* 飞出边界-放置最顶端继续坠落 */flakeMove.prototype.reset = function(width, height) {    this.x = Math.floor(Math.random() * width);    this.y = 0;    this.size = Math.random() * this.maxSize + 2;    this.speed = Math.random() * 1 + this.fallSpeed;    this.velY = this.speed;    this.velX = 0;};// 渲染雪花-随机形状（此处可修改雪花颜色！！！）flakeMove.prototype.render = function(ctx) {    var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);    snowFlake.addColorStop(0, "rgba(255, 255, 255, 0.9)");  /* 此处是雪花颜色，默认是白色 */    snowFlake.addColorStop(.5, "rgba(255, 255, 255, 0.5)"); /* 若要改为其他颜色，请自行查 */    snowFlake.addColorStop(1, "rgba(255, 255, 255, 0)");    /* 找16进制的RGB 颜色代码。 */    ctx.save();    ctx.fillStyle = snowFlake;    ctx.beginPath();    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);    ctx.fill();    ctx.restore();};/* 创建雪花-定义形状 */function createFlakes() {    var maxFlake = this.maxFlake,        flakes = this.flakes = [],        canvas = this.canvas;    for (var i = 0; i &lt; maxFlake; i++) {        flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))    }}/* 画雪 */function drawSnow() {    var maxFlake = this.maxFlake,        flakes = this.flakes;    ctx = this.ctx, canvas = this.canvas, that = this;    /* 清空雪花 */    ctx.clearRect(0, 0, canvas.width, canvas.height);    for (var e = 0; e &lt; maxFlake; e++) {        flakes[e].update();        flakes[e].render(ctx);    }    /*  一帧一帧的画 */    this.loop = requestAnimationFrame(function() {        drawSnow.apply(that);    });}/* 调用及控制方法 */var snow = new snowFall({maxFlake:60});snow.start();</code></pre><p>在hexo-theme-matery\layout\layout.ejs 文件里引用即可：在body前面</p><pre><code>&lt;!-- 雪花特效 --&gt;&lt;script type="text/javascript" src="\js\snow.js"&gt;&lt;/script&gt;</code></pre><p>例：</p>&lt;%- partial('_partial head') %&gt;<!-- 雪花特效 --><script type="text/javascript" src="\js\snow.js"></script><meta name="google-site-verification" content="02_7KMvaA5QhtHqwZspLnRdeSfrDbpKwMfS9ILtMms8"><hr><p>if (<em>condition</em>)<br>{<br><em>当条件为 true 时执行的代码</em><br>}</p><p>添加以上代码可以在config控制是否下雪。</p><p>如果没效果，请确认网页是否已载入JQurey，如果没有请在下雪代码之前引入JQ即可：</p><pre><code>&lt;script type="text/javascript" src="http://libs.baidu.com/jquery/1.8.3/jquery.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="http://libs.baidu.com/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt;</code></pre><p>这个不清楚，可以试一下。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> hexo </tag>
            
            <tag> 小功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo有趣的小功能之樱花飘落</title>
      <link href="/posts/fd68ee7e/"/>
      <url>/posts/fd68ee7e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://yremp.live/wp-content/uploads/resource/js/sakura.js" target="_blank" rel="noopener">地址1</a><br><a href="https://cdn.jsdelivr.net/gh/yremp/yremp-js@1.5/sakura.js" target="_blank" rel="noopener">地址2</a></p><p>在</p><meta charset="utf-8"><title></title><meta name="generator" content="Hexo 4.2.0"><link rel="alternate" href="/atom.xml" title="古客" type="application/atom+xml"><link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"model":{"jsonPath":"/live2dw/assets/z16.model.json"},"display":{"position":"right","width":150,"height":300},"mobile":{"show":false},"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/","tagMode":false});</script><script src="https://cdn.jsdelivr.net/gh/yremp/yremp-js@1.5/sakura.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML之文章排版</title>
      <link href="/posts/80134476/"/>
      <url>/posts/80134476/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文的目的是为了所有与我想法相同（不想学习太多的代码，却想修改主题的人），所以我会以尽量少的代码知识来让大家看懂源码并且学会修改，由于本人没系统的学过前端，内容难免有疏漏或是理解不到位的地方，欢迎所有人的指正与补充。</p><p>&lt;%- partial(’_partial/bg-cover’) %&gt;</p><main class="content">    <div id="contact" class="container chip-container">        <div class="card">            <div class="card-content">                <div class="tag-title center-align">                    <i class="fas fa-comments"></i>&nbsp;&nbsp;&lt;%= __('contact') %&gt;                <!--%=--></div>                &lt;%- page.content %&gt;            <!--%---></div>        </div>        <div class="card">            &lt;% if (theme.valine &amp;&amp; theme.valine.enable) { %&gt;            &lt;%- partial('_partial valine') %&gt;            &lt;% } %&gt;<!--%--><!--%---><!--%--></div></div></main><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> HLML </tag>
            
            <tag> 排版 </tag>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多博客及双线程部署</title>
      <link href="/posts/a6bb7c19/"/>
      <url>/posts/a6bb7c19/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python连接数据库简记</title>
      <link href="/posts/82e025b7/"/>
      <url>/posts/82e025b7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql常用命令</title>
      <link href="/posts/64129a24/"/>
      <url>/posts/64129a24/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="查看mysql-默认端口号和修改端口号">查看mysql 默认端口号和修改端口号</h2><p>先登录mysql</p><pre><code>mysql -u root -p</code></pre><p>再使用命令查看端口号</p><pre><code>show global variables like 'port';</code></pre><p>若要修改端口，编辑/etc/my.cnf文件（window可直接编辑）</p><pre><code>vi my.cnf</code></pre><p>重新启动mysql</p><pre><code>/etc/init.d/mysqld restart  或 service mysql restart</code></pre><h2 id="显示所有的数据库"><strong>显示所有的数据库</strong></h2><p>登录MySQL，输入：</p><pre><code>show databases;</code></pre><h4 id="创建数据库"><strong>创建数据库</strong></h4><p>创建数据库的命令为：</p><pre><code>create database &lt;数据库名&gt;</code></pre><h4 id="删除数据库"><strong>删除数据库</strong></h4><pre><code>drop database &lt;数据库名&gt;；</code></pre><p>例：</p><pre><code>drop database mydatabase;</code></pre><h4 id="打开数据库"><strong>打开数据库</strong></h4><pre><code>use mydatabase;</code></pre><p>mydatabase为你的数据库名</p><h4 id="创建数据库表"><strong>创建数据库表</strong></h4><p>打开数据库后，可以使用创建数据表命令，在已打开的数据库中创建一个新表。创建一个新表的命令为：</p><pre><code>create table &lt;表名&gt; ( &lt;字段名1&gt; &lt;类型1&gt; [,..&lt;字段名n&gt; &lt;类型n&gt;]);</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记</title>
      <link href="/posts/2b866d21/"/>
      <url>/posts/2b866d21/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda的常用命令及使用技巧</title>
      <link href="/posts/a4a2b1a3/"/>
      <url>/posts/a4a2b1a3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Anaconda的常用命令">Anaconda的常用命令</h2><ol><li>创建虚拟环境</li></ol><blockquote><blockquote><pre><code>conda create -n your_env_name python=X.X</code></pre><p>（2.7、3.6等）</p></blockquote></blockquote><ol start="2"><li>激活虚拟环境</li></ol><blockquote><blockquote><p>source activate your_env_name(虚拟环境名称)</p></blockquote></blockquote><ol start="3"><li>退出虚拟环境</li></ol><blockquote><blockquote><p>source deactivate your_env_name(虚拟环境名称)</p><p>conda deactivate （退出当前虚拟环境）</p></blockquote></blockquote><ol start="4"><li>删除虚拟环境</li></ol><blockquote><blockquote><pre><code>conda remove -n your_env_name(虚拟环境名称) --all</code></pre></blockquote></blockquote><ol start="5"><li>查看安装了哪些包</li></ol><blockquote><blockquote><p>conda list</p></blockquote></blockquote><ol start="6"><li>安装包</li></ol><blockquote><blockquote><p>conda install package_name(包名)<br>conda install scrapy==1.3 # 安装指定版本的包<br>conda install -n 环境名 包名 # 在conda指定的某个环境中安装包</p></blockquote></blockquote><ol start="7"><li>查看当前存在哪些虚拟环境</li></ol><blockquote><blockquote><p>conda env list<br>或 conda info -e<br>或 conda info --envs</p></blockquote></blockquote><ol start="8"><li>检查更新当前conda</li></ol><blockquote><blockquote><p>conda update conda</p></blockquote></blockquote><ol start="9"><li>更新anaconda</li></ol><blockquote><blockquote><pre><code>conda update anaconda</code></pre></blockquote></blockquote><p>9.1 更新所有库</p><blockquote><blockquote><pre><code>conda update --all</code></pre></blockquote></blockquote><ol start="10"><li>更新python</li></ol><blockquote><blockquote><pre><code>conda update python</code></pre></blockquote></blockquote><h2 id="Anaconda的使用技巧">Anaconda的使用技巧</h2><ol><li>启动Anaconda Navigator 图形化界面</li></ol><blockquote><blockquote><p>anaconda-navigator</p></blockquote></blockquote><ol start="2"><li>conda环境移植（克隆）的方法</li></ol><blockquote><blockquote><p>conda create -n BBB --clone Tensorflow # 克隆一个BBB，环境和Tensorflow一样</p></blockquote></blockquote><ol start="3"><li>把原来电脑上目标conda环境的目录（路径）复制到新电脑上</li></ol><blockquote><blockquote><p>conda create -n BBB --clone ~/path # 跨计算机克隆</p></blockquote></blockquote><ol start="4"><li>搜索conda安装包</li></ol><blockquote><blockquote><p>anaconda search -t conda tensorflow-gpu  #搜包[tensorflow-gpu]</p></blockquote></blockquote><ol start="5"><li>显示包详细信息</li></ol><blockquote><blockquote><p>anaconda show aaronszs/tensorflow-gpu  #查询第二条[aaronszs/tensorflow-gpu]</p></blockquote></blockquote><ol start="6"><li>导入anaconda所有库</li></ol><blockquote><blockquote><pre><code>conda install anaconda</code></pre></blockquote></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> anaconda </tag>
            
            <tag> ubuntu </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python2与python3共存的部分注意事项</title>
      <link href="/posts/a51989a4/"/>
      <url>/posts/a51989a4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="若Python2-和-Python3-同时有-pip，则使用方法如下：">若Python2 和 Python3 同时有 pip，则使用方法如下：</h6><p>Python2：</p><pre><code>python2 -m pip install XXX</code></pre><p>Python3:</p><pre><code>python3 -m pip install XXX</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 注意事项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker常用命令</title>
      <link href="/posts/29dc6fe8/"/>
      <url>/posts/29dc6fe8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>docker images :</strong> 列出本地镜像。</p><h3 id="获取镜像">获取镜像</h3><p>例，载入 ubuntu 镜像</p><pre><code>docker pull ubuntu</code></pre><h3 id="启动容器">启动容器</h3><p>ubuntu 镜像启动一个容器，参数为以命令行模式进入该容器：</p><pre><code>docker run -it ubuntu /bin/bash</code></pre><p>参数说明：</p><ul><li><strong>-i</strong>: 交互式操作。</li><li><strong>-t</strong>: 终端。</li><li><strong>ubuntu</strong>: ubuntu 镜像。</li><li><strong>/bin/bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash</li></ul><p>要退出终端，直接输入 <strong>exit</strong>:</p><p>查看所有的容器：docker ps -a</p><p>docker start 启动一个已停止的容器：docker start b750bbbcfd88 （此参数为ID）</p><h3 id="后台运行">后台运行</h3><p><strong>-d</strong> 指定容器的运行模式</p><pre><code> docker run -itd --name ubuntu-test ubuntu /bin/bash</code></pre><p>**注：**加了 <strong>-d</strong> 参数默认不会进入容器，想要进入容器需要使用指令 <strong>docker exec</strong></p><h3 id="停止一个容器">停止一个容器</h3><pre><code>docker stop &lt;容器 ID&gt;</code></pre><h3 id="进入容器">进入容器</h3><p><strong>docker exec</strong>：推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。</p><pre><code>docker exec -it 243c32535da7 /bin/bash</code></pre><h3 id="导出和导入容器">导出和导入容器</h3><p>使用 <strong>docker export</strong> 命令。</p><pre><code>docker export 1e560fca3906 &gt; ubuntu.tar</code></pre><h3 id="删除容器">删除容器</h3><p><strong>docker rm</strong> 命令：</p><pre><code>docker rm -f 1e560fca3906</code></pre><p>下面的命令可以清理掉所有处于终止状态的容器。</p><p>$ docker container prune</p><h2 id="运行一个-web-应用">运行一个 web 应用</h2><pre><code>runoob@runoob:~# docker pull training/webapp  # 载入镜像runoob@runoob:~# docker run -d -P training/webapp python app.py</code></pre><p>参数说明:</p><ul><li>**-d:**让容器在后台运行。</li><li>**-P:**将容器内部使用的网络端口映射到我们使用的主机上。</li></ul><h2 id="查看-WEB-应用容器">查看 WEB 应用容器</h2><p>docker ps</p><p>Docker 开放了 5000 端口（默认 Python Flask 端口）映射到主机端口 32769 上。</p><p>这时我们可以通过浏览器访问WEB应用</p><p>可以通过 -p 参数来设置不一样的端口：</p><pre><code>runoob@runoob:~$ docker run -d -p 5000:5000 training/webapp python app.py</code></pre><h2 id="查看-WEB-应用程序日志">查看 WEB 应用程序日志</h2><p>docker logs [ID或者名字] 可以查看容器内部的标准输出。</p><p><strong>-f:</strong> 让 <strong>docker logs</strong> 像使用 <strong>tail -f</strong> 一样来输出容器内部的标准输出。</p><p>从上面，我们可以看到应用程序使用的是 5000 端口并且能够查看到应用程序的访问日志。</p><h2 id="检查-WEB-应用程序">检查 WEB 应用程序</h2><p>使用 <strong>docker inspect</strong> 来查看 Docker 的底层信息。它会返回一个 JSON 文件记录着 Docker 容器的配置和状态信息。</p><h3 id="推送镜像">推送镜像</h3><p>用户登录后，可以通过 docker push 命令将自己的镜像推送到 Docker Hub。</p><p>以下命令中的 username 请替换为你的 Docker 账号用户名</p><pre><code>$ docker tag ubuntu:18.04 username/ubuntu:18.04$ docker image lsREPOSITORY      TAG        IMAGE ID            CREATED           ...  ubuntu          18.04      275d79972a86        6 days ago        ...  username/ubuntu 18.04      275d79972a86        6 days ago        ...  $ docker push username/ubuntu:18.04$ docker search username/ubuntuNAME             DESCRIPTION       STARS         OFFICIAL    AUTOMATEDusername/ubuntu</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Docker </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 云端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB常用命令</title>
      <link href="/posts/c08448a5/"/>
      <url>/posts/c08448a5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="关闭服务">关闭服务</h3><p>（1） 使用 Crtl+C 关闭</p><p>（2） 使用 db.shutdownServer()命令 关闭</p><p>备注：命令 db.shutdownServer()关闭命令只能在admin在使用。不然会出错</p><p>（3） 使用 kill命令 关闭</p><p>首先使用$ ps -ef | grep mongo查看MongoDB的相关进程</p><p>然后使用 kill mongo命令</p><p>备注：可以使用操作系统的 kill 命令，给 mongod 进程发送 SIGINT 或 SIGTERM 信号，即 “kill -2 PID,” 或者 “kill -15 PID“。</p><p>建议不要使用 ”kill -9 pid“，因为如果 MongoDB 运行在没开启日志（–journal）的情况下，可能会造成数据损失。</p><h3 id="数据库使用">数据库使用</h3><p>查看所有数据库：show dbs  （没有数据的不显示）</p><p>插入数据：db.runoob.insert({“name”:“菜鸟教程”})</p><p>创建了数据库： use DATABASE_NAME（名字）</p><p>删除数据库：db.dropDatabase()       删除集合：db.collection.drop()</p><p>例：</p><pre><code>&gt; use runoobswitched to db runoob&gt; db.createCollection("runoob")     # 先创建集合，类似数据库中的表&gt; show tables             # show collections 命令会更加准确点runoob&gt; db.runoob.drop()true&gt; show tables</code></pre><h3 id="连接pymongo">连接pymongo</h3><h3 id="连接chatterbot">连接chatterbot</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题魔改进阶篇（一）</title>
      <link href="/posts/28a773c7/"/>
      <url>/posts/28a773c7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>相信有很多小伙伴在选择了自己的主题，并且在官方文档的指导下配置了自己的主题后，仍然对其中的有些方面不太满意，但是又不想换主题的时候，那么config的配置已经不能满足你了，让我们从源文件下手，对其进行大刀阔斧的改革吧！</p><p>想要修改源文件，那么需要先了解你所选的主体架构，以下均已<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">hexo-theme-matery</a>为例，请根据你的主题进行对应，并且尽量选择使用人数多且文档完善的主题，否则修改会十分困难，如果你是高手的话就当我这句话没说。</p><pre><code>├── languages  语言文件，用于国际化（不是很重要，除非你想向全球推广）├── layout     页面模板文件，决定了网站内容的呈现方式├── scripts    Hexo 脚本（这是matery没有的，但是部分主题有）└── source     主题资源文件，包括页面样式，脚本，字体等</code></pre><h2 id="1-layout">1.layout</h2><ul><li><img src="/posts/28a773c7/Snipaste_2020-01-29_13-11-30.png" alt="Snipaste_2020-01-29_13-11-30"></li></ul><p>每一个ejs对应的同名page的布局，例：contact是文章的布局，也有主题使用的article在_partial里的，一般如下：</p><table><thead><tr><th style="text-align:center">模板</th><th style="text-align:center">用途</th><th style="text-align:center">回调</th></tr></thead><tbody><tr><td style="text-align:center">index</td><td style="text-align:center">首页</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">post</td><td style="text-align:center">文章</td><td style="text-align:center">index</td></tr><tr><td style="text-align:center">page</td><td style="text-align:center">分页</td><td style="text-align:center">index</td></tr><tr><td style="text-align:center">archive</td><td style="text-align:center">归档</td><td style="text-align:center">index</td></tr><tr><td style="text-align:center">category</td><td style="text-align:center">分类归档</td><td style="text-align:center">archive</td></tr><tr><td style="text-align:center">tag</td><td style="text-align:center">标签归档</td><td style="text-align:center">archive</td></tr></tbody></table><p>注：文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略</p><h2 id="2-scripts">2.scripts</h2><p>注：部分主题在source\js</p><h2 id="3-source">3.source</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 魔改 </tag>
            
            <tag> 主题 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows路径含有带空格的目录/文件名的处理方法</title>
      <link href="/posts/eba167b2/"/>
      <url>/posts/eba167b2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="方法一-使用双引号">方法一 使用双引号</h2><h2 id="方法二-使用缩写">方法二 使用缩写</h2><p>采用八个字符，由目录名前六个字符（不计空格），加上波浪线<code>~</code>和数字（1~4）组成。如果多于四个文件使用相同的前六个字符，则由目录名的前两个字符结合四个字符的散列码，加上波浪线<code>~</code>和数字1组成。<br>可以使用<code>dir /x</code>查看目录名缩写。</p><p>例：</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> window </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pycharm插件推荐</title>
      <link href="/posts/f650c5a8/"/>
      <url>/posts/f650c5a8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown进阶用法</title>
      <link href="/posts/77428012/"/>
      <url>/posts/77428012/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>因为Markdown支持HTML元素（<kbd> <b> <i> <em> <sup> <sub> <br>）等，所以我们可以使用标签来是我们的文章变得更加的漂亮和特别！</sub></sup></em></i></b></kbd></p><p>例：</p><pre><code>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</code></pre><p>效果：<kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd></p><h3 id="公式">公式</h3><p>使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现，并且在文章头开启渲染功能（不同主题可能会有不同）</p><h3 id="画图">画图</h3><p>使用 typora 的源码模式粘贴到编辑器中查看效果：</p><p><strong>1、横向流程图源码格式：</strong></p><pre><code>​```mermaidgraph LRA[方形] --&gt;B(圆角)    B --&gt; C{条件a}    C --&gt;|a=1| D[结果1]    C --&gt;|a=2| E[结果2]    F[横向流程图]​```</code></pre><p><strong>2、竖向流程图源码格式：</strong></p><pre><code>​```mermaidgraph TDA[方形] --&gt; B(圆角)    B --&gt; C{条件a}    C --&gt; |a=1| D[结果1]    C --&gt; |a=2| E[结果2]    F[竖向流程图]​```</code></pre><p><strong>3、标准流程图源码格式：</strong></p><pre><code>​```flowst=&gt;start: 开始框op=&gt;operation: 处理框cond=&gt;condition: 判断框(是或否?)sub1=&gt;subroutine: 子流程io=&gt;inputoutput: 输入输出框e=&gt;end: 结束框st-&gt;op-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op​```</code></pre><p><strong>4、标准流程图源码格式（横向）：</strong></p><pre><code>​```flowst=&gt;start: 开始框op=&gt;operation: 处理框cond=&gt;condition: 判断框(是或否?)sub1=&gt;subroutine: 子流程io=&gt;inputoutput: 输入输出框e=&gt;end: 结束框st(right)-&gt;op(right)-&gt;condcond(yes)-&gt;io(bottom)-&gt;econd(no)-&gt;sub1(right)-&gt;op​```</code></pre><p><strong>5、UML时序图源码样例：</strong></p><pre><code>​```sequence对象A-&gt;对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B--&gt;对象A: 我很好(响应)对象A-&gt;对象B: 你真的好吗？​```</code></pre><p><strong>6、UML时序图源码复杂样例：</strong></p><pre><code>​```sequenceTitle: 标题：复杂使用对象A-&gt;对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B--&gt;对象A: 我很好(响应)对象B-&gt;小三: 你好吗小三--&gt;&gt;对象A: 对象B找我了对象A-&gt;对象B: 你真的好吗？Note over 小三,对象B: 我们是朋友participant CNote right of C: 没人陪我玩​```</code></pre><p><strong>7、UML标准时序图样例：</strong></p><pre><code>​```mermaid%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头  sequenceDiagram    participant 张三    participant 李四    张三-&gt;王五: 王五你好吗？    loop 健康检查        王五-&gt;王五: 与疾病战斗    end    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...    李四--&gt;&gt;张三: 很好!    王五-&gt;李四: 你怎么样?    李四--&gt;王五: 很好!​```</code></pre><p><strong>8、甘特图样例：</strong></p><pre><code>​```mermaid%% 语法示例        gantt        dateFormat  YYYY-MM-DD        title 软件开发甘特图        section 设计        需求                      :done,    des1, 2014-01-06,2014-01-08        原型                      :active,  des2, 2014-01-09, 3d        UI设计                     :         des3, after des2, 5d    未来任务                     :         des4, after des3, 5d        section 开发        学习准备理解需求                      :crit, done, 2014-01-06,24h        设计框架                             :crit, done, after des2, 2d        开发                                 :crit, active, 3d        未来任务                              :crit, 5d        耍                                   :2d        section 测试        功能测试                              :active, a1, after des3, 3d        压力测试                               :after a1  , 20h        测试报告                               : 48h​```</code></pre><pre class=" language-language-mermaid"><code class="language-language-mermaid">graph LRA[方形] -->B(圆角)    B --> C{条件a}    C -->|a=1| D[结果1]    C -->|a=2| E[结果2]    F[横向流程图]</code></pre><p>示例图</p><p>教程链接：<a href="https://www.runoob.com/markdown/md-advance.html" target="_blank" rel="noopener">https://www.runoob.com/markdown/md-advance.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 进阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown基础用法</title>
      <link href="/posts/561d6569/"/>
      <url>/posts/561d6569/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令</title>
      <link href="/posts/fe4ef317/"/>
      <url>/posts/fe4ef317/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="1-查看linux服务器的系统信息-内核">1.查看<em><strong>linux</strong></em>服务器的系统信息(<em><strong>内核</strong></em>)</h6><p>在linux命令行下输入shell指令：uname -a</p><h6 id="2-查看操作系统的版本-以redhat为例，其他的同理"><em><strong>2.查看操作系统的版本</strong></em>(以redhat为例，其他的同理)</h6><p>cat /etc/redhat-release  或  cat /etc/issue</p><h2 id="netstat、lsof查看端口">netstat、lsof查看端口</h2><h3 id="netstat">netstat</h3><p>netstat用来查看系统当前系统网络状态信息，包括端口，连接情况等，常用方式如下：</p><ul><li>-t : 指明显示TCP端口</li><li>-u : 指明显示UDP端口</li><li>-l : 仅显示监听套接字(LISTEN状态的套接字)</li><li>-p : 显示进程标识符和程序名称，每一个套接字/端口都属于一个程序</li><li>-n : 不进行DNS解析</li><li>-a 显示所有连接的端口</li></ul><p>直接查看端口命令。netstat -an | grep 22<br>note：22就是改为要查询的端口</p><h3 id="lsof">lsof</h3><p><a href="http://www.cnblogs.com/peida/archive/2013/02/26/2932972.html" target="_blank" rel="noopener">参考链接</a><br>lsof的作用是列出当前系统打开文件(list open files)，不过通过-i参数也能查看端口的连接情况，-i后跟冒号端口可以查看指定端口信息，直接-i是系统当前所有打开的端口</p><ul><li>-a 列出打开文件存在的进程</li><li>-c&lt;进程名&gt; 列出指定进程所打开的文件</li><li>-g  列出GID号进程详情</li><li>-d&lt;文件号&gt; 列出占用该文件号的进程</li><li>+d&lt;目录&gt;  列出目录下被打开的文件</li><li>+D&lt;目录&gt;  递归列出目录下被打开的文件</li><li>-n&lt;目录&gt;  列出使用NFS的文件</li><li>-i&lt;条件&gt;  列出符合条件的进程。（4、6、协议、:端口、 @ip ）</li><li>-p&lt;进程号&gt; 列出指定进程号所打开的文件</li><li>-u  列出UID号进程详情</li><li>-h 显示帮助信息</li><li>-v 显示版本信息</li></ul><p>lsof -i:22 #查看22端口连接情况，默认为sshd端口</p><h3 id=""></h3><ol><li>使用lsof命令查看那条线程占用了25555端口</li><li>执行kill命令杀掉那条线程 如： kill 15889</li></ol><p>（注：如果是centos系统的话，数字填的是PID下面的，其他系统类似）</p><h3 id="添加环境变量">添加环境变量</h3><h6 id="直接修改-PATH值：">直接修改$PATH值：</h6><pre><code>export PATH=$PATH:/要添加的路径</code></pre><p>或者</p><pre><code>export PATH=/要添加的路径$PATH</code></pre><p>注意PATH后没有空格</p><p>例：</p><pre><code>export PATH="/home/ubuntu/anaconda3/bin:$PATH"</code></pre><p>生效方法：立即生效</p><p>有效期限：临时改变，只能在当前的终端窗口中有效，当前窗口关闭后就会恢复原有的path配置</p><p>用户局限：仅对当前用户</p><h6 id="通过修改-bashrc文件：-bashrc文件在根目录下">通过修改.bashrc文件：(.bashrc文件在根目录下)</h6><p>vi .bashrc <a href="//xn--5p0an15a.xn--bashrc-n18ip45m" target="_blank" rel="noopener">//编辑.bashrc文件</a></p><p>//在最后一行添上：</p><p>export PATH=$PATH:/xxx/xxx ///xxx/xxx位需要加入的环境变量地址 等号两边没空格</p><p>生效方法：（有以下两种）</p><p>…关闭当前终端窗口，重新打开一个新终端窗口就能生效</p><p>…输入“source .bashrc”命令，立即生效</p><p>有效期限：永久有效</p><p>用户局限：仅对当前用户</p><h6 id="通过修改profile文件：（profile文件在-etc目录下）">通过修改profile文件：（profile文件在/etc目录下）</h6><p>vi /etc/profile //编辑profile文件</p><p>//在最后一行添上：</p><p>export PATH=$PATH:/xxx/xxx</p><p>生效方法：系统重启</p><p>有效期限：永久有效</p><p>用户局限：对所有用户</p><h6 id="通过修改environment文件：（environment文件在-etc目录下）（推荐）">通过修改environment文件：（environment文件在/etc目录下）（推荐）</h6><p>vi /etc/environment //编辑profile文件</p><p>在PATH=/·········中加入“:/xxx/xxx”</p><p>生效方法：系统重启</p><p>有效期限：永久有效</p><p>用户局限：对所有用户</p><h4 id="查找文件">查找文件</h4><p>1.按照文件名查找</p><p>(1)find / -name httpd.conf　　#在根目录下查找文件httpd.conf，表示在整个硬盘查找<br>　　　　(2)find /etc -name httpd.conf　　#在/etc目录下文件httpd.conf<br>　　　　(3)find /etc -name ‘<em>srm</em>’　　#使用通配符*(0或者任意多个)。表示在/etc目录下查找文件名中含有字符串‘srm’的文件<br>　　　　(4)find . -name ‘srm*’ 　　#表示当前目录下查找文件名开头是字符串‘srm’的文件</p><p>2.按照文件特征查找</p><p>(1)find / -amin -10 　　# 查找在系统中最后10分钟访问的文件(access time)<br>　　　　(2)find / -atime -2　　 # 查找在系统中最后48小时访问的文件<br>　　　　(3)find / -empty 　　# 查找在系统中为空的文件或者文件夹<br>　　　　(4)find / -group cat 　　# 查找在系统中属于 group为cat的文件</p><p>3.使用混合查找方式查找文件</p><p>参数有： ！，-and(-a)，-or(-o)。</p><p>(1)find /tmp -size +10000c -and -mtime +2 　　#在/tmp目录下查找大于10000字节并在最后2分钟内修改的文件</p><p><a href="https://www.cnblogs.com/jpfss/p/10863135.html" target="_blank" rel="noopener">原文链接</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ONEdriver应用程序注册流程</title>
      <link href="/posts/dcefea28/"/>
      <url>/posts/dcefea28/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="二、如何获取应用机密-client-secret-和应用-ID-client-id-？">二、如何获取应用机密(client secret)和应用 ID(client_id)？</h4><ol><li><p>登录：<a href="https://portal.azure.com/?l=zh-hans.zh-cn#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade" target="_blank" rel="noopener">https://portal.azure.com/?l=zh-hans.zh-cn#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade</a></p></li><li><p>点击新注册</p></li></ol><pre><code>- 名称：随便填- 受支持的帐户类型：选择“任何组织目录中的帐户和个人 Microsoft 帐户”- 重定向 URI (可选)：Web - https://pyoneauth.github.io/</code></pre><p>点击创建，进入下一步</p><p>*<strong>创建之后，看到应用程序(客户端) ID，复制到上方应用 ID(client_id)</strong></p><p><strong>3. 开启权限：第2步创建应用程序之后，进入该应用的概述页面。</strong></p><p>1）点击：API权限</p><p>2）选择：添加权限：</p><pre><code>Microsoft Graph – 委派的权限 – Files - Files.ReadWrite 和 Files.ReadWrite.All </code></pre><ol start="4"><li>创建秘钥：第2步创建应用程序之后，进入该应用的概述页面。</li></ol><p>1）点击：证书和密码</p><p>2）选择：新客户端密码，添加秘钥：</p><p>​    说明：随便填写</p><p>​    截止期限：1年内</p><p>*<strong>3）点击保存，得到秘钥值，复制到上方应用机密(client secret)</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 分享网盘，ONEdrive </tag>
            
            <tag> pyone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板常用指令</title>
      <link href="/posts/2db0a1e1/"/>
      <url>/posts/2db0a1e1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="SSH终端输入：">SSH终端输入：</h3><p>1.查看面板入口：</p><pre><code>/etc/init.d/bt default</code></pre><p>2.关闭安全入口：</p><pre><code>rm -f /www/server/panel/data/admin_path.pl</code></pre><p>停止</p><pre><code>/etc/init.d/bt stop</code></pre><p>启动</p><pre><code>/etc/init.d/bt start</code></pre><p>重启</p><pre><code>/etc/init.d/bt restart</code></pre><p>卸载</p><pre><code>/etc/init.d/bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /etc/init.d/bt &amp;&amp; rm -rf /www/server/panel</code></pre><p>查看当前面板端口</p><pre><code>cat /www/server/panel/data/port.pl</code></pre><p>修改面板端口，如要改成8881（centos 6 系统）</p><pre><code>echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restartiptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 8881 -j ACCEPTservice iptables saveservice iptables restart</code></pre><p>修改面板端口，如要改成8881（centos 7 系统）</p><pre><code>echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restartfirewall-cmd --permanent --zone=public --add-port=8881/tcpfirewall-cmd --reload</code></pre><p>强制修改MySQL管理(root)密码，如要改成123456</p><pre><code>cd /www/server/panel &amp;&amp; python tools.py root 123456</code></pre><p>修改面板密码，如要改成123456</p><pre><code>cd /www/server/panel &amp;&amp; python tools.py panel 123456</code></pre><p>查看宝塔日志</p><pre><code>cat /tmp/panelBoot.pl</code></pre><p>查看软件安装日志</p><pre><code>cat /tmp/panelExec.log</code></pre><p>站点配置文件位置</p><pre><code>/www/server/panel/vhost</code></pre><p>删除域名绑定面板</p><pre><code>rm -f /www/server/panel/data/domain.conf</code></pre><p>清理登陆限制</p><pre><code>rm -f /www/server/panel/data/*.login</code></pre><p>查看面板授权IP</p><pre><code>cat /www/server/panel/data/limitip.conf</code></pre><p>关闭访问限制</p><pre><code>rm -f /www/server/panel/data/limitip.conf</code></pre><p>查看许可域名</p><pre><code>cat /www/server/panel/data/domain.conf</code></pre><p>关闭面板SSL</p><pre><code>rm -f /www/server/panel/data/ssl.pl &amp;&amp; /etc/init.d/bt restart</code></pre><p>查看面板错误日志</p><pre><code>cat /tmp/panelBoot</code></pre><p>查看数据库错误日志</p><pre><code>cat /www/server/data/*.err</code></pre><p>站点配置文件目录(nginx)</p><pre><code>/www/server/panel/vhost/nginx</code></pre><p>站点配置文件目录(apache)</p><pre><code>/www/server/panel/vhost/apache</code></pre><p>站点默认目录</p><pre><code>/www/wwwroot</code></pre><p>数据库备份目录</p><pre><code>/www/backup/database</code></pre><p>站点备份目录</p><pre><code>/www/backup/site</code></pre><p>站点日志</p><pre><code>/www/wwwlogs</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 命令，宝塔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假建站记录</title>
      <link href="/posts/f0e4e3b5/"/>
      <url>/posts/f0e4e3b5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>搭建以下网站的前提条件：</p><p>1,  一个服务器</p><p>2，一个域名（便宜的有1元一年，像我买的就是)</p><p>3,  大量的时间</p><p>（如果你是一个学生，并且可以FAN墙的话，可以免费的弄到上面的所有东西，不过非常麻烦，建议时间少并且宝贵的可以直接去腾讯云，或是阿里云购买，除非是像我那么闲的人才会到处白嫖）</p><hr><h6 id="第一个搭建的网站是：">第一个搭建的网站是：</h6><p><a href="https://guhailong18.github.io/">https://guhailong18.github.io/</a></p><p>一个静态博客</p><p>利用Github的储存库，基于hexo搭建静态博客。</p><p>优点：方便使用，响应速度快，支持GIF等</p><p>缺点：部分功能缺失，无用户功能，评论系统单调乏味，深度美化难度大，需要学习CSS和html</p><p>（如果有会的希望能在评论区留下联系方式，教教我美化和视频插入参数的设置）</p><h6 id="第二个搭建的网站是：">第二个搭建的网站是：</h6><p><a href="http://a.dream18.xyz" target="_blank" rel="noopener">http://a.dream18.xyz</a></p><p>这个网站真的弄了很久，</p><h6 id="第三个搭建的网站是：">第三个搭建的网站是：</h6><p><a href="http://b.dream18.xyz" target="_blank" rel="noopener">http://b.dream18.xyz</a></p><p>一个私有云盘，方便与他人共享资源等，可以为网页提供视频服务，并且不限速</p><p>基于宝塔，AWS服务器，KobExporer</p><h6 id="第四个搭建的网站是：">第四个搭建的网站是：</h6><p><a href="http://c.dream18.xyz" target="_blank" rel="noopener">http://c.dream18.xyz</a></p><p>一个重量级的博客</p><p>优点：功能齐全，调节方便，可在线编辑</p><p>缺点：过于臃肿，时常崩溃，哭了（应该是我的服务器的问题，一核1G的承受不住啊），服务器好的大佬建议使用这个，部分插件及主题要钱</p><p><img src="/posts/f0e4e3b5/10A4F57B.jpg" alt="10A4F57B"></p><p>基于宝塔，AWS服务器，WordPress框架</p><h6 id="第五个搭建的网站是：">第五个搭建的网站是：</h6><p><a href="http://d.dream18.xyz" target="_blank" rel="noopener">http://d.dream18.xyz</a></p><p>（待建）</p><h6 id="第六个搭建的网站是：">第六个搭建的网站是：</h6><p><a href="http://e.dream18.xyz" target="_blank" rel="noopener">http://e.dream18.xyz</a></p><p>（待建）</p><h6 id="第七个搭建的网站是：">第七个搭建的网站是：</h6><p><a href="http://m.dream18.xyz" target="_blank" rel="noopener">http://m.dream18.xyz</a></p><p>一个微信开发及管理平台，可以方便的管理公众号以及小程序，并且可以创建一些自动回复或者聊天机器人等有趣的功能。</p><p>优点：使用方便，粉丝多的可以试一下，也有些有免费的功能</p><p>缺点：有些服务要钱，并且我公众号又没粉丝</p><p>基于宝塔，AWS服务器，微擎构建</p><h6 id="第八个搭建的网站是：">第八个搭建的网站是：</h6><p><a href="http://dream18.xyz" target="_blank" rel="noopener">http://dream18.xyz</a></p><p>其实这个不算一个网站，是我设置的一个企业邮箱，可以有这个域名指向网易免费的企业邮箱</p><p>2020.01.24</p><h6 id="第九个搭建的网站是：">第九个搭建的网站是：</h6><p>(PS：以上的网站并不是按时间搭建的，而是按字母和我的个人兴趣排的)</p><p>总结：现在搭建一个博客网站真的是一个十分轻松的事情（如果愿意花些钱的话），但是想做的比较好却没有那么容易，特别是美化博客的时候，有些简单的功能想实现真的有些麻烦，特别是我这种没怎么学过代码的人，只能看着别人的教程一步一步学，如果你和我一样，且运气不是很好的话，那么就会遇到一大堆报错，以后有时间我会把做的比较好的教程整理出来分享给大家，顺便做一些补充和说明，希望大家不要踩到我曾经踩过得坑。</p><hr><p>如果有小伙伴对以上那个网站搭建感兴趣的请在下方留言，如果我有时间的话，可以出一个搭建过程或是指导建议！</p><p>最后祝大家鼠年大吉！！！</p><p><img src="/posts/f0e4e3b5/10B7F0DB.gif" alt="10B7F0DB"></p><p>再来一张！！！</p><p><img src="/posts/f0e4e3b5/10B7B122.gif" alt="10B7B122"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 建站 </tag>
            
            <tag> 寒假 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome浏览器一个有意思的彩蛋</title>
      <link href="/posts/a5735571/"/>
      <url>/posts/a5735571/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>某一天再看公众号文章的时候突然发现，chrome浏览器竟然给用户设置了一个彩蛋（也可能还有很多我还没看到或被发现），一起看看吧！</p><p>打开谷歌浏览器，假如网线出现问题、无法正常访问网页时，就会出现以下提示：<strong>未连接到互联网，请重试…</strong></p><p><img src="/posts/a5735571/Snipaste_2020-01-20_19-25-59.png" alt="Snipaste_2020-01-20_19-25-59"></p><p>相信使用过chrome浏览器的用户大部分都看到过过这种图片，一般出现于断网的情况，但想必大部分人都不会想到这小小的恐龙竟然是一个小游戏！</p><p>处于这种状态下，我们按键盘的“<strong>↑</strong>”键，恐龙就会直接动起来，现在你就进入了“恐龙越障碍”的小游戏…</p><p>当然，联网状态下也能直接玩，通过谷歌浏览器访问以下网站即可。</p><p><strong>→</strong> chrome://dino/</p><p>（复制网址，通过浏览器打开）</p><p><img src="/posts/a5735571/1.gif" alt="1"></p><p>是不是挺有意思的呢，没网的时候玩这个游戏说不定可以给你带来一丝慰藉！</p><p>(σﾟ∀ﾟ)σ…:*☆哎哟不错哦</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 彩蛋 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们生活的世界到底是几维的？</title>
      <link href="/posts/8902adc/"/>
      <url>/posts/8902adc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>身为科普类作品，为了使受众面更广，所以远方客（我）会从最基本的概念开始，以确保大家都可以听懂，学到知识，不要嫌弃我话痨哦，那么我们就开始啦！</p><p>在<a href="https://baike.baidu.com/item/%E7%89%A9%E7%90%86%E5%AD%A6/313183" target="_blank" rel="noopener">物理学</a>和<a href="https://baike.baidu.com/item/%E5%93%B2%E5%AD%A6/140608" target="_blank" rel="noopener">哲学</a>的领域内，指独立的时空坐标的数目</p><p>如果用较为传统的观念想，我们所处的空间是三维的，而如果加上时间的话，便是四维的。可能有人会提出一个疑问，为什么要加上时间这个维度呢？</p><p>因为从爱因斯坦的相对论来看，时间和空间是紧紧联系在一起的，可以说是你中有我，我中有你的状态。所以我们无法把空间单独拿出来而不考虑时间的影响。</p><p>而时间这个维度也比较特殊，是单方向的。我们正常人都会觉得这是非常正常的事情，仿佛理所当然就应该是这样的，就跟苹果成熟后就会掉在地上一样。但是如果把时间放在理论上看就完全不一样了，因为从理论上看，时间理应是双方向的。这使得无数的物理学家为之困惑，也提出了非常多的猜想来解决这个问题，比较著名的有</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 科普 </tag>
            
            <tag> 物理 </tag>
            
            <tag> 文案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假学习记录（爬虫篇）</title>
      <link href="/posts/ff1e4930/"/>
      <url>/posts/ff1e4930/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假学习记录（数学建模篇）</title>
      <link href="/posts/7cee0e0f/"/>
      <url>/posts/7cee0e0f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1><center>数据处理</center></h1><hr><h1><center>算法</center></h1><h2 id="机器学习">机器学习</h2><h3 id="分类方法">分类方法</h3><h5 id="1-K-近邻分类">1.K-近邻分类</h5><p>一种基于实例的，非参数的分类方法。</p><p>​</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 2020寒假学习 </tag>
            
            <tag> 数模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假学习记录（MAD篇）</title>
      <link href="/posts/8c706961/"/>
      <url>/posts/8c706961/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-人物定格描边">1.人物定格描边</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 2020寒假学习 </tag>
            
            <tag> MAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读《人间失格》-手札有感</title>
      <link href="/posts/a6a55fc/"/>
      <url>/posts/a6a55fc/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="非常抱歉, 这个密码看着不太对, 请您再试试吧." data-whm="很抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码才能查看哦." /><label>您好, 这里需要密码才能查看哦.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="bdd9fdac1cffd8e90f06d9f97ef4c393f3172d5f09c2102c62effc0b2f065b77">f2f5a9452dd8b166e2e261132d2a34e56a25d55b5cb940efef431ed7a9ffccf25d8505a1838ce3e1bd7aa1e1345de9ec0c4d3116c35d213fc1acfac45d0320a52d0639762ee038e02f2aaaebb772a1987091c6a6195c207e31041f63f85fa3133fb4ac96aa819336c1c28464e78f2e788e5e33217c360ed96d318a96ae5e4e9b3ae98793ce542861e8c01230b034f60ada3864cdb3890f36bb04501c4c9c962dac7711f4fb1c56e1136d263c462f016f5ba09ab66310875a2db723a65e02e509fd23cc0f5bc090d0af516dc0ab6226c46b99403bf2cc45c37efa6af8397d70bd8340ccfd4680c129935e87e1bc2dd832385744ce3cccf2a344725b00f77f9291024a102a8da882e2015bc24fa8894229fd960d2e831fed37fb5fb023672352735bc633255b65396eef4f83dc4200e76f87c08256195e548c3ae64140f1359694714e785ae299f4d7a693a144adc9077f3a817647063779437eb9dbaa31859fcf72011a612ff012f8b9be02a496d0e78700356b6544b6ce4740163c8d7d765863fca27f12916736b34f75c65d7add98f8bb708d5835c8587f02f7ca69f964bd7efbf785b16778778b4af808163cbe76eb8598ac05b6c01bfce8fb06a53e3d25d5f9e253b382c46c90fc0975b23323470b45a9ca80a037f199491a6d9640c92b6884e23a14014cd239c430bfd04c8a9c0b907f9a76b648038801e0ae6bc425d2bf6c412fc8ec60ed3f6e015c342ca66821270e4447f492b0316d023afa023ec37b619015ae90a48a472db13b73a2dbfefaed876b4d8cf41d48be9ff6fe12d3ff6900a1f2d5d6040e738248b7b30db4a47fc8a6bc0f6a47264a622b715d195abccce48aa498b4a4d2b2a9ea25bd0dea541b30e7992e609707b80f79249e0b49adfb4208e0a54ee35069a8a8bb578935e808e2293116738fce4d2411915aeffbca58d2cf30c85ef28483050254997f62cb1b158ba6aa1a61111e64144f5ad41b7fc8800ea77180019f8114135433c8f61a5cc81442c1e5bf59a7cd161bf76ac2d1062470cb22332bf768e112de001dd4cff6c1a10bba6d0287f9e05a4c4dd647d95c6c7f7bd631b979244c96a48dc20fb66fc2e4bee4444f9221c40b19d84e466a9a80f9fb8617370b87b9ba7c7d5f156ce34ca8bbf68ec4ca15882ab7297b02438d0e37f8e238e711c1a79eb8bf764d73ebe3eb245a32dc46d653028259bc24b88638de8dfe3a6044f302810307c05c48f86c627af885c82790175a80427a797adfad5a3ef467a37194d6a496799ecf1ed7b952906637c84f1afa6650f4518188ba42a25e23055a3da7124a3bfe24d7a8e6d22b9a5aedaf43316eeb2c20866cfa7bc05e64ec9963840080a2e9263b9049d24e98a423c1eaf09c7b6cfd04a7345c23aad7c18cca50d373a1cda3c29b38e8bf2b09086c3b4622d244a29605b2dbb7b275a50975eba4857b203bdc6a684a22348e0dd9fa92b75a765bbf25e3b1b909ecc075ed0f007a5fdbc35c012c69b8742aef9570d4fcd1974936ec0c016400d0ef87184024dca785f3d12d762c1a55a1e6e6e5048a182af1723ed55e75c00d326c069bd6653cf760c5a1335e3610df2dfdb1d481f063198d3c1bbcfd8574d3c0133fa0d0785b62a9741e88e334d26b01ecb01583535027f0fa029389eb0797ab5c5d214369a54ec9e302b917ad8a2ca76c7bd0a7bf25687a14d49b7fb879310a259c88c755830b06449ce82b56a47e4ff40ac763c6d9897418c93131c7869b5c321d107d0bd6ba0fcf7281400d162f0fc825b7a77c8c8bdeec77c00c40579281097751b9a741c3c58080fde88992eabf80873c2fa283905fd7708580d2fee31db45095a69535ef7b2dabe644d48ae2112728abcec8572643376c62c10cd4baa2c617ccba21185c9de6979981950087651bcb4012459ca29a45f0d1c8d0b6d8b247ddb31b4c0e3784be46569d00cf309e1d401fe23a7415fafe7d7c2b349be3951ee31dc3a20d011eab488f78565ae49a57ff828f2a0a63db972701f98b37528471f139624581e1c9b014d59930d9883d9494d4d36978ec95a5ae9792cdb665284e6fdcc64c5badd816c7d389f4495c126004ab5e223873c8a6be9fdee88e9c59a16458e5d6689be4bb7ceb80de3971577962552f34d7f0d374cd0d37527f6005c2753e4f8d892182d3c9f91f7eff5b4564c9edcb16fcf156e5fc6132a7a4e7b6aefc44ce7634cc6491bde36a3d32d8c4cf8d5c1b7e6a16cf1e00338a0f3a59864248710ea3dc0b3e735a77971167c7eb80b16c39c1c6454928fde4d562fa1b3354fe7483e31fd8775fd4df7ccc1b6ccadb70c1fdc8a56ea58a8f3dfd20a89b5c6bb14c28c1bbd51c6347bc8e5d10094d5c8f3c38d32403b3f0d2128d404208724c42ae6a731289168b55d7dbe7cd7589cc9969fd81743dc5097d4a4df2c5dcb899e7952934cfc7f7a86c64d1e17e5cb3369d5f15f462fd9a6f259d4e706555cb5e88c58240708d021621981298a04d7c5c8580c072b1858134d44dafbc85434f72bb270054d6b4d3e33cbfcbf6d184c75030c8938abcee043955dfddbeffe6a8c1b54394331f7c43d4c45b9e504d50c2d378fc32ce200b0d8c2f2129d60b50c3a9183b9e5af1a8f51891de0f7c75250e6d9f979f427b0a8960a346b8a947a3ea18063d35eb9eed0913a6926a8093d3090615074870fdafc1f8e19837a1c739a7533054f254e74482a545851bcc32038953</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 读书感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表情包分享（1）</title>
      <link href="/posts/ceee3096/"/>
      <url>/posts/ceee3096/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1>第一期分享给大家的是《80年代宣传画系列》</h1><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(1).jpg" alt="80年代宣传画 (1)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(2).jpg" alt="80年代宣传画 (2)"></p><a id="more"></a><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(3).jpg" alt="80年代宣传画 (3)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(4).jpg" alt="80年代宣传画 (4)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(5).jpg" alt="80年代宣传画 (5)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(31).jpg" alt="80年代宣传画 (31)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(32).jpg" alt="80年代宣传画 (32)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(33).jpg" alt="80年代宣传画 (33)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(34).jpg" alt="80年代宣传画 (34)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(35).jpg" alt="80年代宣传画 (35)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(36).jpg" alt="80年代宣传画 (36)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(37).jpg" alt="80年代宣传画 (37)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(38).jpg" alt="80年代宣传画 (38)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(39).jpg" alt="80年代宣传画 (39)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(40).jpg" alt="80年代宣传画 (40)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(41).jpg" alt="80年代宣传画 (41)"></p><p>封面测试：</p><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><p>no url specified, no dplayer _(:3」∠)_</p><h6 id="需要的自取即可，欢迎在评论区给我留言哦！！">需要的自取即可，欢迎在评论区给我留言哦！！</h6><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客——自我介绍</title>
      <link href="/posts/6007b04d/"/>
      <url>/posts/6007b04d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是一个分享一些自己心得，爱好以及知识的博客，本人只是一名普通的大学生，不是啥大神。不用抱有太高的期待或是要求，如果能帮助到部分人或是给部分人带来些许快乐，实乃我无上的荣耀……（此处运用了夸张的手法并省略两千字）</p><p>邮箱：1097629344@qq.com</p><p>欢迎大家与我交流！!!<img src="/posts/6007b04d/08.jpg"></p>    <div id="aplayer-UFWLXXZI" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="60198" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><a id="more"></a><hr><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"video":{"url":"https://dl.sm9.top/Video/2018/KeyCastOW.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script> <hr><iframe src="//player.bilibili.com/player.html?aid=82968958&amp;cid=141941752&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width"100%"="" height="100%" allowfullscreen="true"> </iframe><script src="text.js"></script><hr><iframe style="margin-left: 2px; margin-bottom:-5px;" frameborder="0" scrolling="0" width="100px" height="20px" src="https://ghbtns.com/github-btn.html?user=fandongtongxue&amp;repo=fandongtongxue.github.io&amp;type=star&amp;count=true"> </iframe><h2 id="iframe-src-player-bilibili-com-player-html-aid-84628317-cid-144732024-page-1-scrolling-no-border-0-frameborder-no-framespacing-0-width-100-allowfullscreen-true-iframe"><iframe src="//player.bilibili.com/player.html?aid=84628317&amp;cid=144732024&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="100%" allowfullscreen="true"> </iframe></h2><iframe id="spkj" src="//player.bilibili.com/player.html?aid=85179902&amp;cid=145623591&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%%" height="100%"> </iframe><hr><pre><code>&lt;iframe id="spkj" src="https://player.bilibili.com/player.html?aid=44020824&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width=100%&gt; &lt;/iframe&gt;&lt;script type="text/javascript"&gt;document.getElementById("spkj").style.height=document.getElementById("spkj").scrollWidth\*0.76+"px";&lt;/script&gt;</code></pre><pre><code>&lt;iframe id="spkj" src="https://player.bilibili.com/player.html?aid=85546317&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width=100%&gt; &lt;/iframe&gt;&lt;script src="text.js"&gt;&lt;/script&gt;</code></pre><pre><code>{% for js in page.customjs %}<script src="{{ js }}"></script>{% endfor %}</code></pre><p>页面引用<br>CSS 部分</p><link rel="stylesheet" href="/static/admin/assets/css/editormd.css">1JS 部分<script src="/static/admin/assets/js/editormd.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 自述 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post">Create a new post</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo new "My New Post"</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server">Run server</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><pre class=" language-language-bash"><code class="language-language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><hr><h2 id="￼0"><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"autoplay":true,"hotkey":true,"preload":"metadata","video":{"url":"http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
