<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深度学习之初步入门</title>
      <link href="/posts/93f01828/"/>
      <url>/posts/93f01828/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="部分概念及专有名词"><a href="#部分概念及专有名词" class="headerlink" title="部分概念及专有名词"></a>部分概念及专有名词</h3><h4 id="成本函数-个衡量模型准确率的指标，衡量依据为此模型估计X与Y间关系的能力。（来衡量AI输出与实际输出-历史数据-之间的差异，0为最好的）"><a href="#成本函数-个衡量模型准确率的指标，衡量依据为此模型估计X与Y间关系的能力。（来衡量AI输出与实际输出-历史数据-之间的差异，0为最好的）" class="headerlink" title="成本函数:个衡量模型准确率的指标，衡量依据为此模型估计X与Y间关系的能力。（来衡量AI输出与实际输出(历史数据)之间的差异，0为最好的）"></a>成本函数:个衡量模型准确率的指标，衡量依据为此模型估计X与Y间关系的能力。（来衡量AI输出与实际输出(历史数据)之间的差异，0为最好的）</h4><h5 id="降低方法："><a href="#降低方法：" class="headerlink" title="降低方法："></a>降低方法：</h5><p>1.梯度下降</p><p>一种求函数最小值的方法。通过每次数据集迭代之后优化模型的权重来训练模型。通过计算某一权重集下代价函数的梯度，可以看出最小值的梯度方向。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战之豆瓣电影</title>
      <link href="/posts/ddfb847b/"/>
      <url>/posts/ddfb847b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>所需包：bs4，openpyxl</p><p>上代码：</p><pre><code>def getData(baseurl):    findLink=re.compile(r'&lt;a href="(.*?)"&gt;')#找到影片详情链接    findImgSrc=re.compile(r'&lt;img.*src="(.*?)"',re.S)#找到影片图片    findTitle=re.compile(r'&lt;span class="title"&gt;(.*)&lt;/span&gt;')#找到片名    #找到评分    findRating=re.compile(r'&lt;span class="rating_num" property="v:average"&gt;(.*)&lt;/span&gt;')    #找到评价人数    findJudge=re.compile(r'&lt;span&gt;(\d*)人评价&lt;/span&gt;')    #找到概况    findInq=re.compile(r'&lt;span class="inq"&gt;(.*)&lt;/span&gt;')    #找到影片相关内容：导演，主演，年份，地区，类别    findBd=re.compile(r'&lt;p class=""&gt;(.*?)&lt;/p&gt;',re.S)    #去掉无关内容    remove=re.compile(r'                            |\n|&lt;/br&gt;|\.*')    datalist=[]</code></pre><pre><code>for i in range(0,10):    url=baseurl+str(i*25)    html=askURL(url)    soup = BeautifulSoup(html, "html.parser")    for item in soup.find_all('div',class_='item'):#找到每一个影片项        data=[]        item=str(item)#转换成字符串        # 影片详情链接        link=re.findall(findLink,item)[0]        data.append(link)#添加详情链接          imgSrc=re.findall(findImgSrc,item)[0]        data.append(imgSrc)#添加图片链接        titles=re.findall(findTitle,item)        #片名可能只有一个中文名，没有外国名        if(len(titles)==2):            ctitle=titles[0]            data.append(ctitle)#添加中文片名            otitle=titles[1].replace("/","")#去掉无关符号            data.append(otitle)#添加外国片名        else:            data.append(titles[0])#添加中文片名            data.append(' ')#留空        rating=re.findall(findRating,item)[0]        data.append(rating)#添加评分        judgeNum=re.findall(findJudge,item)[0]        data.append(judgeNum)#添加评论人数        inq=re.findall(findInq,item)        #可能没有概况        if len(inq)!=0:            inq=inq[0].replace("。","")#去掉句号            data.append(inq)#添加概况        else:            data.append(' ')#留空        bd=re.findall(findBd,item)[0]        bd=re.sub(remove,"",bd)        bd=re.sub('&lt;br(\s+)?\/?&gt;(\s+)?'," ",bd) #去掉&lt;br &gt;        bd=re.sub('/', " ",bd)#替换/        data.append(bd.strip())        datalist.append(data)time.sleep(5)return datalist</code></pre><p>def saveData(datalist,savepath):<br>    book=openpyxl.Workbook()<br>    sheet = book.create_sheet(“豆瓣电影Top250”)<br>    #sheet=book.add_sheet(‘豆瓣电影Top250’,cell_overwrite_ok=True)<br>    col=(‘电影详情链接’,’图片链接’,’影片中文名’,’影片外国名’, ‘评分’,’评价数’,’概况’,’相关信息’)</p><pre><code>sheet.append(col)  #添加列头</code></pre><p>​<br>    for i in range(0,250):<br>        data=datalist[i]<br>        for j in range(0,8):<br>            sheet.cell(row = (i+2),column = (j+1),value = data[j]) </p><p>#openpyxl中的单元格计数从1开始, 加上第一行是列头, 要多跳一个<br>#openpyxl中的计数和Excel内的计数方式一致, 但和常规编程从0开始的方式相左</p><pre><code>book.save(savepath) #保存</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信聊天机器人使用介绍</title>
      <link href="/posts/ebc8e568/"/>
      <url>/posts/ebc8e568/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是我github第一个认真做的一个项目，想想还有些小激动！废话不多说，介绍一下<a href="https://github.com/guhailong18/chatter" target="_blank" rel="noopener">我的第一次</a>吧！</p><p>微信聊天机器人：</p><p>依赖包：</p><pre class=" language-javascript"><code class="language-javascript">pip3 install chatterbotpip3 install chatterbot<span class="token operator">-</span>corpus</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 聊天机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习笔记一</title>
      <link href="/posts/a6627840/"/>
      <url>/posts/a6627840/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="做出一个模型的五个步骤："><a href="#做出一个模型的五个步骤：" class="headerlink" title="做出一个模型的五个步骤："></a>做出一个模型的五个步骤：</h6><ul><li>数据处理：从本地文件或网络地址读取数据，并做预处理操作，如校验数据的正确性等。</li><li>模型设计：完成网络结构的设计（模型要素1），相当于模型的假设空间，即模型能够表达的关系集合。</li><li>训练配置：设定模型采用的寻解算法（模型要素2），即优化器，并指定计算资源。</li><li>训练过程：循环调用训练过程，每轮均包括前向计算 、损失函数（优化目标，模型要素3）和后向传播这三个步骤。</li><li>保存模型：将训练好的模型保存，以备预测时调用。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 百度飞桨 </tag>
            
            <tag> 2020 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器使用笔记</title>
      <link href="/posts/1f7ef16d/"/>
      <url>/posts/1f7ef16d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>首先最好先装一个<a href="https://www.bt.cn/bbs/thread-19376-1-1.html" target="_blank" rel="noopener">宝塔面板</a>，如果已有已有WEB环境的话只能退而求其次装云助手了，如果两个都不行的话那你就太惨了，可以去国外看看有没有，对于我这种英语不好的人非常不友好，推荐的有：</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>word2vec模型</title>
      <link href="/posts/dd1038da/"/>
      <url>/posts/dd1038da/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>模型参数</strong>：</p><ul><li>window=5</li><li>min_count=10</li><li>size=128</li><li>hs=1</li><li>negative=0</li><li>iter=5</li><li>ps：其它参数见gensim库，执行代码为：gensim.models.Word2Vec(sentence, window=5, min_count=10, size=128, workers=4,hs=1, negative=0, iter=5)</li></ul><p><strong>其它相关</strong>：</p><ol><li>分词词典使用了130w+词典。分词代码：jieba.lcut(sentence)，默认使用了HMM识别新词；</li><li>剔除了所有非中文字符；</li><li>最终得到的词典大小为6115353；</li><li>模型格式有两种bin和model，使用方式：<br> a. bin模式：model = gensim.models.KeyedVectors.load_word2vec_format(model_path, binary=True)<br> b. model模式：model = gensim.models.Word2Vec.load(model_path)</li></ol><p><a href="https://www.jianshu.com/p/ae5b45e96dbf" target="_blank" rel="noopener">原文链接</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬虫环境搭建踩过的坑</title>
      <link href="/posts/9c6ca83d/"/>
      <url>/posts/9c6ca83d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>聊天机器人学习笔记(一)</title>
      <link href="/posts/10c1d492/"/>
      <url>/posts/10c1d492/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="NLTK"><a href="#NLTK" class="headerlink" title="NLTK"></a>NLTK</h2><p>text*都是一个一个的书籍节点，直接输入text1会输出书籍标题</p><h2 id="搜索文本"><a href="#搜索文本" class="headerlink" title="搜索文本"></a>搜索文本</h2><p>text1.concordance(“former”)</p><p>搜索相关词</p><pre><code>text1.similar("ship")</code></pre><p>这个倒是挺特别的</p><p>查看某个词在文章里出现的位置：</p><p>text4.dispersion_plot([“citizens”, “democracy”, “freedom”, “duties”, “America”])</p><h2 id="词统计"><a href="#词统计" class="headerlink" title="词统计"></a>词统计</h2><p>len(text1)：返回总字数</p><p>set(text1)：返回文本的所有词集合</p><p>len(set(text4))：返回文本总词数</p><p>text4.count(“is”)：返回“is”这个词出现的总次数</p><p>FreqDist(text1)：统计文章的词频并按从大到小排序存到一个列表里</p><p>fdist1 = FreqDist(text1);fdist1.plot(50, cumulative=True)：统计词频，并输出累计图像</p><h4 id="NLTK的语料库："><a href="#NLTK的语料库：" class="headerlink" title="NLTK的语料库："></a>NLTK的语料库：</h4><p>from nltk.corpus import webtext：网络文本语料库，网络和聊天文本</p><p>from nltk.corpus import brown：布朗语料库，按照文本分类好的500个不同来源的文本</p><p>from nltk.corpus import reuters：路透社语料库，1万多个新闻文档</p><p>from nltk.corpus import inaugural：就职演说语料库，55个总统的演说</p><p>组织结构：散养式（孤立的多篇文章）、分类式（按照类别组织，相互之间没有交集）、交叉式（一篇文章可能属于多个类）、渐变式（语法随着时间发生变化）</p><h2 id="语料库的通用接口"><a href="#语料库的通用接口" class="headerlink" title="语料库的通用接口"></a>语料库的通用接口</h2><p>fileids()：返回语料库中的文件</p><p>categories()：返回语料库中的分类</p><p>raw()：返回语料库的原始内容</p><p>words()：返回语料库中的词汇</p><p>sents()：返回语料库句子</p><p>abspath()：指定文件在磁盘上的位置</p><p>open()：打开语料库的文件流</p><h2 id="加载自己的语料库"><a href="#加载自己的语料库" class="headerlink" title="加载自己的语料库"></a>加载自己的语料库</h2><p>收集自己的语料文件（文本文件）到某路径下（比如/tmp)，然后执行：</p><pre><code>&gt;&gt;&gt; from nltk.corpus import PlaintextCorpusReader&gt;&gt;&gt; corpus_root = '/tmp'&gt;&gt;&gt; wordlists = PlaintextCorpusReader(corpus_root, '.*')&gt;&gt;&gt; wordlists.fileids()</code></pre><p>就可以列出自己语料库的各个文件了，也可以使用如wordlists.sents(‘a.txt’)和wordlists.words(‘a.txt’)等方法来获取句子和词信息</p><p><a href="http://www.shareditor.com/blogshow?blogId=64" target="_blank" rel="noopener">教程链接</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信机器人搭建笔记</title>
      <link href="/posts/9858143b/"/>
      <url>/posts/9858143b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ol><li><h3 id="创建一个-Chat-Bot"><a href="#创建一个-Chat-Bot" class="headerlink" title="创建一个 Chat Bot"></a>创建一个 Chat Bot</h3></li></ol><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> chatterbot <span class="token keyword">import</span> ChatBot<span class="token keyword">from</span> chatterbot<span class="token punctuation">.</span>trainers <span class="token keyword">import</span> ListTrainerchatbot <span class="token operator">=</span> ChatBot<span class="token punctuation">(</span><span class="token string">"my chat"</span><span class="token punctuation">)</span>trainer <span class="token operator">=</span> ListTrainer<span class="token punctuation">(</span>chatbot<span class="token punctuation">)</span></code></pre><p><a href="https://github.com/codemayq/chinese_chatbot_corpus" target="_blank" rel="noopener">中文聊天语料</a></p><p>注：需要将仓库克隆下来，main.py在那里，且目录与他描述的位置不同，看下报错或源码即可。</p><p>载入语料</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">with</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'xiaohuangji.tsv'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>  data <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'\t'</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>训练</p><pre class=" language-javascript"><code class="language-javascript">trainer<span class="token punctuation">.</span><span class="token function">train</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><p>最后，等待训练完成之后，我们再把生成的 db.sqlite3 文件下载到本地。</p><p>注：文件目录需放置正确，同一级即可</p><p><a href="https://github.com/guhailong18/chatter" target="_blank" rel="noopener">微信公众号号聊天机器人</a>，欢迎星标，欢迎提交pr，其中的一些原理其实我也不是很懂，所以会用就拿去用吧！不会的话，那就另寻高明！</p><h3 id="后文：踩坑记录"><a href="#后文：踩坑记录" class="headerlink" title="后文：踩坑记录"></a>后文：踩坑记录</h3><p>chatterbot，chatterbot-corpus使用pip安装时会出现依赖包Pyyaml所需版本不兼容的情况，这时候我真的想吐槽一下，明明是两个相互配合使用的，竟然连兼容性都有些不匹配。在<a href="https://github.com/gunthercox/chatterbot-corpus/issues/127" target="_blank" rel="noopener">issue</a>发现了问题的解决办法，但是不一定适用于所有人。</p><pre><code>pipenv install git+https://github.com/gunthercox/chatterbot-corpus.git#egg=chatterbot-corpus</code></pre><p>从源码进行安装</p><p>顺便记一下pipenv的简单使用方法:</p><ul><li><code>shell</code> 将在激活virtualenv的情况下生成一个shell。</li><li><code>run</code>将从virtualenv运行给定命令，并转发任何参数（例如<code>$ pipenv run python</code>）。</li><li><code>check</code> 声称当前环境已满足PEP 508要求。</li><li><code>graph</code> 将打印出所有已安装依赖项的漂亮图形。</li></ul><p><a href="https://github.com/pypa/pipenv" target="_blank" rel="noopener">github</a>             <a href="https://blog.csdn.net/u011054333/article/details/82891847" target="_blank" rel="noopener">中文说明</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> chatterbot </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端资源大全</title>
      <link href="/posts/aa04407b/"/>
      <url>/posts/aa04407b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="动画库"><a href="#动画库" class="headerlink" title="动画库"></a><strong>动画库</strong></h1><p>1.<strong>Animate.css</strong></p><p>说明：一个简单易用的跨浏览器CSS动画库。</p><p>GitHub主页： <a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fdaneden%2Fanimate.css" target="_blank" rel="noopener">https://github.com/daneden/animate.css</a></p><p>2.<strong>CSShake</strong></p><p>说明：用CSS实现各种颠颤动画效果DOM！</p><p>GitHub主页： <a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Felrumordelaluz%2Fcsshake" target="_blank" rel="noopener">https://github.com/elrumordelaluz/csshake</a></p><p>3.<strong>Hover.css</strong></p><p>说明：将鼠标Hover效果快速应用在你的网页元素或创意设计上。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2FIanLunn%2FHover4.Velocity.js" target="_blank" rel="noopener">https://github.com/IanLunn/Hover</a></p><p>4.<strong>Velocity.js</strong></p><p>说明：帮你加速JavaScript动画。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fjulianshapiro%2Fvelocity" target="_blank" rel="noopener">https://github.com/julianshapiro/velocity</a></p><p>5.<strong>DynCSS</strong></p><p>说明：用动态CSS来打造你的网页。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fvzaccaria%2FDynCSS" target="_blank" rel="noopener">https://github.com/vzaccaria/DynCSS</a></p><p>6.<strong>Magic Animations</strong></p><p>说明：可创造CSS3动画特效。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2FminiMAC%2Fmagic" target="_blank" rel="noopener">https://github.com/miniMAC/magic</a></p><p>7.<strong>Bounce.js</strong></p><p>说明：即时创造漂亮的CSS3动画。</p><p>GitHub主页： <a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Ftictail%2Fbounce.js" target="_blank" rel="noopener">https://github.com/tictail/bounce.js</a></p><hr><h1 id="前端框架和类库"><a href="#前端框架和类库" class="headerlink" title="前端框架和类库"></a><strong>前端框架和类库</strong></h1><p>1.<strong>lodash.js</strong></p><p>简介：具有一致接口、模块化、高性能等特性的 JavaScript 工具库</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Flodash%2Flodash%2F" target="_blank" rel="noopener">https://github.com/lodash/lodash/</a></p><p>2.<strong>Underscore.js</strong></p><p>简介：JavaScript 工具库，它提供了一整套函数式编程的实用功能，但是没有扩展任何 JavaScript 内置对象。 他解决了这个问题：“如果我面对一个空白的 HTML 页面，并希望立即开始工作，我需要什么？” 他弥补了 jQuery 没有实现的功能，同时又是 Backbone 必不可少的部分。</p><p>3.<strong>AngularJS</strong></p><p>简介：AngularJS是为了克服HTML在构建应用上的不足而设计的。HTML是一门很好的为静态文本展示设计的声明式语言，但要构建WEB应用的话它就显得乏力了。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fangular%2Fangular.js" target="_blank" rel="noopener">https://github.com/angular/angular.js</a></p><p>4.<strong>React</strong></p><p>简介：React 是一个用于构建用户界面的 JAVASCRIPT 库。主要用于构建UI，很多人认为 React 是 MVC 中的 V（视图）。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact" target="_blank" rel="noopener">https://github.com/facebook/react</a></p><p>5.<strong>Vue.js</strong></p><p>简介：Vue.js是一个用于构建用户界面的轻量级渐进框架。它提供了一个类似React的虚拟DOM驱动视图层，可以与其它类库集成，用于构建强大的单页面应用。该框架是由之前在AngularJS工作过的Evan You创建的，他提取了AngularJS中自己喜欢的部分。Vue.js使用HTML模板语法将DOM绑定到实例数据。Model是在数据改变时更新view的纯JavaScript对象。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fvuejs%2Fvue" target="_blank" rel="noopener">https://github.com/vuejs/vue</a></p><p>官方地址：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fcn.vuejs.org%2F" target="_blank" rel="noopener">https://cn.vuejs.org/</a></p><p>6.<strong>Backbone.js</strong></p><p>简介：Backbone.js是提供服务器端框架中常见的MVC结构的最早客户端选项之一。它唯一的依赖是Underscore.js。Backbone.js声称是一个类库，因为它可以与其它项目集成，但是我觉得大多数开发人员都认为它是一个框架。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fjashkenas%2Fbackbone%2F" target="_blank" rel="noopener">https://github.com/jashkenas/backbone/</a></p><p>7.<strong>Ember.js</strong></p><p>简介：Ember.js是基于Model-View-ViewModel（MVVM）模式的框架之一。它在单个包中实现模板化、数据绑定和类库。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Femberjs%2Fember.js" target="_blank" rel="noopener">https://github.com/emberjs/ember.js</a></p><hr><h1 id="前端工具"><a href="#前端工具" class="headerlink" title="前端工具"></a>前端工具</h1><p>1.<strong>Gulp.js</strong></p><p>简介：虽然Gulp不是第一个任务执行工具，它却很快成为了最受欢迎的。Gulp使用易于阅读的JavaScript代码，将源文件加载到流中，并在将数据输出到构建文件夹之前，通过各种插件管理数据。在任何其它选项之前检查Gulp.js是简单、快速和有趣的。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fgulpjs%2Fgulp" target="_blank" rel="noopener">https://github.com/gulpjs/gulp</a></p><p>2.<strong>NPM</strong></p><p>简介：npm是Node.js包管理器，但其脚本工具可用于运行通用任务。对于具有少量依赖关系的简单项目来说，这是一个很好的选择。然而，更复杂的任务可能会变得不太适用。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fnpm%2Fnpm" target="_blank" rel="noopener">https://github.com/npm/npm</a></p><p>3.<strong>Grunt</strong></p><p>简介：Grunt是第一批被大规模采用的JavaScript任务执行工具之一，但其速度和复杂的JSON配置却导致了Gulp的兴起。现在这些问题已经得到了解决，Grunt仍然是一个受欢迎的选择。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fgruntjs%2Fgrunt" target="_blank" rel="noopener">https://github.com/gruntjs/grunt</a></p><p>4.<strong>WebPack</strong></p><p>简介：Webpack支持所有流行的模块选项，并已成为React开发的代名词。虽然Webpack声称是一个模块捆绑程序，但是已经可以用作通用任务运行程序了。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fwebpack%2Fwebpack" target="_blank" rel="noopener">https://github.com/webpack/webpack</a></p><p>5.<strong>Browserify</strong></p><p>简介：Browserify支持Node.js正在使用的CommonJS模块，它将所有模块编译成单个浏览器兼容的文件。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fsubstack%2Fnode-browserify" target="_blank" rel="noopener">https://github.com/substack/node-browserify</a></p><p>6.<strong>RequireJS</strong></p><p>简介：RequireJS是一种浏览器中的模块加载器，它也可以在Node.js中使用。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fjrburke%2Fr.js" target="_blank" rel="noopener">https://github.com/jrburke/r.js</a></p><p>7.<strong>ESLint</strong></p><p>简介：ESLint是一种可插拔的代码分析工具。每个规则都是一个插件，因此可以根据个人喜好进行配置。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Feslint%2Feslint" target="_blank" rel="noopener">https://github.com/eslint/eslint</a></p><p>8.<strong>JSHint</strong></p><p>简介：JSHint是一个灵活的JavaScript代码分析工具，它很好的平衡了真正的错误和老旧的语法。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fjshint%2Fjshint" target="_blank" rel="noopener">https://github.com/jshint/jshint</a></p><p>9.<strong>JSLint</strong></p><p>简介：JSLint是最早的代码分析工具之一，它实现了一套严格的默认规则。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Freid%2Fnode-jslint" target="_blank" rel="noopener">https://github.com/reid/node-jslint</a></p><p>10.<strong>Jasmine</strong></p><p>简介：Jasmine是一个行为驱动的测试工具，可以在浏览器中自动测试UI和交互。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fjasmine%2Fjasmine-npm" target="_blank" rel="noopener">https://github.com/jasmine/jasmine-npm</a></p><p>11.<strong>QUnit</strong></p><p>简介：QUnit是一个单元测试框架，可以在输入特定参数时，检查函数结果。它还上报测试结果，确保没有错过特定的代码分支。</p><p>GitHub主页：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fkof%2Fnode-qunit" target="_blank" rel="noopener">https://github.com/kof/node-qunit</a></p><hr><h1 id="CSS框架"><a href="#CSS框架" class="headerlink" title="CSS框架"></a>CSS框架</h1><p>1.<strong>Bootstrap – 最流行的Web前端UI框架</strong></p><p>Bootstrap是由twitter推出的Web前端UI框架，它由Twitter的设计师Mark Otto和Jacob Thornton合作开发,是一个CSS/HTML框架。它使用了最新的浏览器技术，Bootstrap提供了时尚的排版样式，表单，buttons，表格，网格系统等等。</p><p>官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fgetbootstrap.com%2F" target="_blank" rel="noopener">http://getbootstrap.com/</a></p><p>2.<strong>jQuery UI Bootstrap</strong></p><p>它是jQuery UI和Bootstrap的集成，它是Bootstrap样式的，因此外观比较漂亮，同时它拥有jQuery UI的控件功能，这也方便开发者快速地创建一个网页控件。</p><p>3.<strong>BootMetro - Metro风格的CSS框架</strong></p><p>BootMetro是一款基于Bootstrap的前端UI框架，BootMetro的特点是可以很方便地构建类似Windonws 8扁平化风格的网页界面，效果非常不错。官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Faozora.github.io%2Fbootmetro%2F" target="_blank" rel="noopener">http://aozora.github.io/bootmetro/</a></p><p>4.<strong>Flat UI - 扁平风格 UI 工具包</strong></p><p>Flat UI是一套精美的扁平风格 UI 工具包，基于 Twitter Bootstrap 实现。这套界面工具包含许多基本的和复杂的 UI 部件，例如按钮，输入框，组合按钮，复选框，单选按钮，标签，菜单，进度条和滑块，导航元素等等。</p><p>官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgithub.com%2Fdesignmodo%2FFlat-UI" target="_blank" rel="noopener">https://github.com/designmodo/Flat-UI</a></p><p>5.<strong>网易CSS框架</strong> </p><p>NECNEC是网易推出的开源前端CSS框架，NEC提供了丰富UI代码库和插件，可以极大的帮助开发人员提高开发效率。即使你并非前端专业开发人员，利用NEC你也可以快速地构建属于自己的网页应用。</p><p>官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fnec.netease.com%2F" target="_blank" rel="noopener">http://nec.netease.com/</a></p><p>6.<strong>Alloy UI – 功能强大的CSS UI框架</strong></p><p>Alloy UI是基于YUI 3的前段UI框架，包含一套丰富的（超过60）UI 部件，如图片库，对话框，树形结构，面板，自动完成，按钮，日历控件，工具条等。</p><p>官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Falloyui.com%2F" target="_blank" rel="noopener">http://alloyui.com/</a></p><p>7.<strong>Cardinal – 移动端的CSS UI框架</strong></p><p>Cardinal 是一个小型的移动优先的 CSS 框架，提供很多有用的默认样式、可缩放排版、可重用模块和一个简单的响应式表格系统。</p><p>官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fcardinalcss.com%2F" target="_blank" rel="noopener">http://cardinalcss.com/</a></p><p>8.<strong>快速开发CSS的框架</strong> </p><p>CSScaffold不同于许多CSS框架，它必须依靠PHP与Apache的mod_rewrite来执行，但也因为需要这两种东西，让CSScaffold变得很神奇、很方便，写起CSS来又快又轻松！</p><p>官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.w3avenue.com%2F2009%2F10%2F13%2Fcsscaffold-php-based-css-framework%2F" target="_blank" rel="noopener">http://www.w3avenue.com/2009/10/13/csscaffold-php-based-css-framework/</a></p><p>9.<strong>后台UI开发框架</strong></p><p>MuseUI一款基于bootstrap风格，兼容于主流浏览器（包括IE6）的后端UI开发组件。</p><p>官方网站：<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fgit.oschina.net%2Fmuse%2Fmuseui" target="_blank" rel="noopener">http://git.oschina.net/muse/museui</a></p><hr><h1 id="前端教程"><a href="#前端教程" class="headerlink" title="前端教程"></a>前端教程</h1><p>1.D3.js 入门教程</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6885.html" target="_blank" rel="noopener">教程地址</a></p><p>2.ECMAScript 6 入门 –阮一峰</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7065.html" target="_blank" rel="noopener">教程地址</a></p><p>3.React入门教程</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7300.html" target="_blank" rel="noopener">教程地址</a></p><p>4.TypeScript入门教程</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F8076.html" target="_blank" rel="noopener">教程地址</a></p><p>5.Velocity.js中文文档</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F8076.html" target="_blank" rel="noopener">教程地址</a></p><p>6.Webpack 2.2 中文文档</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7626.html" target="_blank" rel="noopener">教程地址</a></p><p>7.七天学会NodeJS</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7258.html" target="_blank" rel="noopener">教程地址</a></p><p>8.廖雪峰-Git教程</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.liaoxuefeng.com%2Fwiki%2F0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">教程地址</a></p><p>9.廖雪峰-javascript教程</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.liaoxuefeng.com%2Fwiki%2F001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">教程地址</a></p><hr><h1 id="前端常用插件"><a href="#前端常用插件" class="headerlink" title="前端常用插件"></a>前端常用插件</h1><p>1.jQuery内容滚动插件-BoxSlider</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7909.html" target="_blank" rel="noopener">插件地址</a></p><p>2.jQuery artDialog对话框插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7896.html" target="_blank" rel="noopener">插件地址</a></p><p>3.移动端日期选择组件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7870.html" target="_blank" rel="noopener">插件地址</a></p><p>4.图像延迟加载库Echo.js</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F7864.html" target="_blank" rel="noopener">插件地址</a></p><p>5.轮播图FlexSlider插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6924.html" target="_blank" rel="noopener">插件地址</a></p><p>6.Slick.js幻灯片使用方法</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6922.html" target="_blank" rel="noopener">插件地址</a></p><p>7.JavaScript响应式轮播图插件–Flickity</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6920.html" target="_blank" rel="noopener">插件地址</a></p><p>8.Intro.js 分步向导插件使用方法</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6917.html" target="_blank" rel="noopener">插件地址</a></p><p>9.ScrollReveal-元素随页面滚动产生动画的js插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6913.html" target="_blank" rel="noopener">插件地址</a></p><p>10.支持移动触摸的jQuery图片Lightbox插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6750.html" target="_blank" rel="noopener">插件地址</a></p><p>11.Owl Carousel幻灯片插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6745.html" target="_blank" rel="noopener">插件地址</a></p><p>12.kissui.scrollanim页面滚动动画库插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6737.html" target="_blank" rel="noopener">插件地址</a></p><p>13.jQuery cxSelect 联动下拉菜单</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6730.html" target="_blank" rel="noopener">插件地址</a></p><p>14.jQuery cxCalendar 日期选择器</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6724.html" target="_blank" rel="noopener">插件地址</a></p><p>15.jQuery Transit 过渡效果插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6645.html" target="_blank" rel="noopener">插件地址</a></p><p>16.lightslider-支持移动触摸的轻量级jQuery幻灯片插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6640.html" target="_blank" rel="noopener">插件地址</a></p><p>17.WOW.js滚动页面产生动画</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F6131.html" target="_blank" rel="noopener">插件地址</a></p><p>18.FullPage.js全屏插件</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F5188.html" target="_blank" rel="noopener">插件地址</a></p><p>19.animate.css动画库</p><p><a href="https://yq.aliyun.com/go/articleRenderRedirect?url=http%3A%2F%2Fwww.jqhtml.com%2F5184.html" target="_blank" rel="noopener">插件地址</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 资源 </tag>
            
            <tag> 前端 </tag>
            
            <tag> 自学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown使用流程图</title>
      <link href="/posts/4bcf2a6b/"/>
      <url>/posts/4bcf2a6b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><pre><code>该插件基于flowchart.js，因此您可以按以下方式定义图表：​```flowst=&gt;start: Start|past:&gt;http://www.google.com[blank]e=&gt;end: End:&gt;http://www.google.comop1=&gt;operation: My Operation|pastop2=&gt;operation: Stuff|currentsub1=&gt;subroutine: My Subroutine|invalidcond=&gt;condition: Yesor No?|approved:&gt;http://www.google.comc2=&gt;condition: Good idea|rejectedio=&gt;inputoutput: catch something...|requestst-&gt;op1(right)-&gt;condcond(yes, right)-&gt;c2cond(no)-&gt;sub1(left)-&gt;op1c2(yes)-&gt;io-&gt;ec2(no)-&gt;op2-&gt;e​```</code></pre><hr><pre><code>该插件基于js-sequence-diagrams，因此您可以将图表定义如下：​```sequenceAlice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks!​```</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>matery主题美化</title>
      <link href="/posts/39e2c676/"/>
      <url>/posts/39e2c676/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="修改页面配色"><a href="#修改页面配色" class="headerlink" title="修改页面配色"></a>修改页面配色</h2><p>查找方法基本就是打开chrome浏览器的检查,选择想要查看的页面元素,然后看他的Style文件,找到关键词之后去hexo-theme-matery主题的css文件中查找后修改即可</p><p>打开 <code>matery/source/css/matery.css</code> 文件 搜索 <code>.bg-color</code> 大概在198行<br>修改<code>background-image</code>属性中<code>linear-gradient</code>内的值即可改成你自己想要的颜色。</p><h2 id="添加文章显示作者名字"><a href="#添加文章显示作者名字" class="headerlink" title="添加文章显示作者名字"></a>添加文章显示作者名字</h2><pre><code>---------------------- layout/_partial/post-detail.ejs -----------------------&lt;div class="info-break-policy"&gt;    &lt;% if (page.author &amp;&amp; page.author.length &gt; 0) { %&gt;        &lt;i class="fa fa-pencil"&gt;&lt;/i&gt; 作者: &lt;%- page.author %&gt;     &lt;% } else { %&gt;    &lt;i class="fa fa-pencil"&gt;&lt;/i&gt; 作者: &lt;%- config.author %&gt;    &lt;% } %&gt;&lt;/div&gt;</code></pre><h2 id="添加一言"><a href="#添加一言" class="headerlink" title="添加一言"></a>添加一言</h2><p>如果需要出处的话可以使用以下代码，不过应该有更简便的写法，不过id的参数我调了好几次都没成功。</p><pre><code>--------------------------- layout/_widget/dream.ejs ---------------------------&lt;div class="row"&gt;   &lt;div class="col l8 offset-l2 m10 offset-m1 s10 offset-s1 center-align text"&gt;    &lt;div id="hitokoto"&gt;:D 获取中...&lt;/div&gt;    &lt;i id="hitofrom"&gt;:D 获取中...&lt;/i&gt;    &lt;script src="https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js"&gt;&lt;/script&gt;    &lt;script src="https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js"&gt;&lt;/script&gt;    &lt;script&gt;    fetch('https://v1.hitokoto.cn')        .then(function (res){        return res.json();        })        .then(function (data) {        var hitokoto = document.getElementById('hitokoto');        hitokoto.innerText = '\xa0\xa0\xa0\xa0\xa0\xa0\xa0' + data.hitokoto;        var hitofrom = document.getElementById('hitofrom');        hitofrom.innerText = "——" + "《" + data.from + "》" + '\xa0';         })        .catch(function (err) {        console.error(err);        })    &lt;/script&gt;   &lt;/div&gt; &lt;/div&gt;</code></pre><p>算了，大家直接从以下两个链接参考就行：</p><p><a href="https://chen-shang.github.io/2019/08/15/ji-zhu-zong-jie/hexo/hexo-theme-matery-zhu-ti-you-hua/#toc-heading-8" target="_blank" rel="noopener">推荐，全都可以使用</a></p><p><a href="https://www.jianshu.com/p/2e6ae2123d57" target="_blank" rel="noopener">部分过时，仅供参考</a></p><p>颜色选择可以从下面找：</p><p><a href="http://xh.5156edu.com/page/z1015m9220j18754.html" target="_blank" rel="noopener">颜色名称及色样表(HTML版)</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>text</title>
      <link href="/posts/3b8ba7c7/"/>
      <url>/posts/3b8ba7c7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS笔记之图标</title>
      <link href="/posts/c2d28339/"/>
      <url>/posts/c2d28339/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>最近心血来潮想要修改一下网站的一些图标，原本以为它们实在source里面使用图片的方式保存的，但是在source找了一圈也没有，再看看主题配置文件，在进行百度，最后发现 icon都是用CSS实现的，真实神奇，果然在hexo-theme-matery\source\libs\awesome\css里发现了网站用的所有图标都在这里了。然后你可以在里面添加你想要的图标，并且在config将图标名改成对应的就行！附上代码表。</p><table><thead><tr><th>NAME</th><th>CODE</th><th>NAME</th><th>CODE</th></tr></thead><tbody><tr><td>.fa-glass</td><td>\f000</td><td>.fa-github-alt</td><td>\f113</td></tr><tr><td>.fa-music</td><td>\f001</td><td>.fa-folder-o</td><td>\f114</td></tr><tr><td>.fa-search</td><td>\f002</td><td>.fa-folder-open-o</td><td>\f115</td></tr><tr><td>.fa-envelope-o</td><td>\f003</td><td>.fa-smile-o</td><td>\f118</td></tr><tr><td>.fa-heart</td><td>\f004</td><td>.fa-frown-o</td><td>\f119</td></tr><tr><td>.fa-star</td><td>\f005</td><td>.fa-meh-o</td><td>\f11a</td></tr><tr><td>.fa-star-o</td><td>\f006</td><td>.fa-gamepad</td><td>\f11b</td></tr><tr><td>.fa-user</td><td>\f007</td><td>.fa-keyboard-o</td><td>\f11c</td></tr><tr><td>.fa-film</td><td>\f008</td><td>.fa-flag-o</td><td>\f11d</td></tr><tr><td>.fa-th-large</td><td>\f009</td><td>.fa-flag-checkered</td><td>\f11e</td></tr><tr><td>.fa-th</td><td>\f00a</td><td>.fa-terminal</td><td>\f120</td></tr><tr><td>.fa-th-list</td><td>\f00b</td><td>.fa-code</td><td>\f121</td></tr><tr><td>.fa-check</td><td>\f00c</td><td>.fa-mail-reply-all</td><td>\f122</td></tr><tr><td>.fa-remove</td><td>\f00d</td><td>.fa-reply-all</td><td>\f122</td></tr><tr><td>.fa-close</td><td>\f00d</td><td>.fa-star-half-empty</td><td>\f123</td></tr><tr><td>.fa-times</td><td>\f00d</td><td>.fa-star-half-full</td><td>\f123</td></tr><tr><td>.fa-search-plus</td><td>\f00e</td><td>.fa-star-half-o</td><td>\f123</td></tr><tr><td>.fa-search-minus</td><td>\f010</td><td>.fa-location-arrow</td><td>\f124</td></tr><tr><td>.fa-power-off</td><td>\f011</td><td>.fa-crop</td><td>\f125</td></tr><tr><td>.fa-signal</td><td>\f012</td><td>.fa-code-fork</td><td>\f126</td></tr><tr><td>.fa-gear</td><td>\f013</td><td>.fa-unlink</td><td>\f127</td></tr><tr><td>.fa-cog</td><td>\f013</td><td>.fa-chain-broken</td><td>\f127</td></tr><tr><td>.fa-trash-o</td><td>\f014</td><td>.fa-question</td><td>\f128</td></tr><tr><td>.fa-home</td><td>\f015</td><td>.fa-info</td><td>\f129</td></tr><tr><td>.fa-file-o</td><td>\f016</td><td>.fa-exclamation</td><td>\f12a</td></tr><tr><td>.fa-clock-o</td><td>\f017</td><td>.fa-superscript</td><td>\f12b</td></tr><tr><td>.fa-road</td><td>\f018</td><td>.fa-subscript</td><td>\f12c</td></tr><tr><td>.fa-download</td><td>\f019</td><td>.fa-eraser</td><td>\f12d</td></tr><tr><td>.fa-arrow-circle-o-down</td><td>\f01a</td><td>.fa-puzzle-piece</td><td>\f12e</td></tr><tr><td>.fa-arrow-circle-o-up</td><td>\f01b</td><td>.fa-microphone</td><td>\f130</td></tr><tr><td>.fa-inbox</td><td>\f01c</td><td>.fa-microphone-slash</td><td>\f131</td></tr><tr><td>.fa-play-circle-o</td><td>\f01d</td><td>.fa-shield</td><td>\f132</td></tr><tr><td>.fa-rotate-right</td><td>\f01e</td><td>.fa-calendar-o</td><td>\f133</td></tr><tr><td>.fa-repeat</td><td>\f01e</td><td>.fa-fire-extinguisher</td><td>\f134</td></tr><tr><td>.fa-refresh</td><td>\f021</td><td>.fa-rocket</td><td>\f135</td></tr><tr><td>.fa-list-alt</td><td>\f022</td><td>.fa-maxcdn</td><td>\f136</td></tr><tr><td>.fa-lock</td><td>\f023</td><td>.fa-chevron-circle-left</td><td>\f137</td></tr><tr><td>.fa-flag</td><td>\f024</td><td>.fa-chevron-circle-right</td><td>\f138</td></tr><tr><td>.fa-headphones</td><td>\f025</td><td>.fa-chevron-circle-up</td><td>\f139</td></tr><tr><td>.fa-volume-off</td><td>\f026</td><td>.fa-chevron-circle-down</td><td>\f13a</td></tr><tr><td>.fa-volume-down</td><td>\f027</td><td>.fa-html5</td><td>\f13b</td></tr><tr><td>.fa-volume-up</td><td>\f028</td><td>.fa-css3</td><td>\f13c</td></tr><tr><td>.fa-qrcode</td><td>\f029</td><td>.fa-anchor</td><td>\f13d</td></tr><tr><td>.fa-barcode</td><td>\f02a</td><td>.fa-unlock-alt</td><td>\f13e</td></tr><tr><td>.fa-tag</td><td>\f02b</td><td>.fa-bullseye</td><td>\f140</td></tr><tr><td>.fa-tags</td><td>\f02c</td><td>.fa-ellipsis-h</td><td>\f141</td></tr><tr><td>.fa-book</td><td>\f02d</td><td>.fa-ellipsis-v</td><td>\f142</td></tr><tr><td>.fa-bookmark</td><td>\f02e</td><td>.fa-rss-square</td><td>\f143</td></tr><tr><td>.fa-print</td><td>\f02f</td><td>.fa-play-circle</td><td>\f144</td></tr><tr><td>.fa-camera</td><td>\f030</td><td>.fa-ticket</td><td>\f145</td></tr><tr><td>.fa-font</td><td>\f031</td><td>.fa-minus-square</td><td>\f146</td></tr><tr><td>.fa-bold</td><td>\f032</td><td>.fa-minus-square-o</td><td>\f147</td></tr><tr><td>.fa-italic</td><td>\f033</td><td>.fa-level-up</td><td>\f148</td></tr><tr><td>.fa-text-height</td><td>\f034</td><td>.fa-level-down</td><td>\f149</td></tr><tr><td>.fa-text-width</td><td>\f035</td><td>.fa-check-square</td><td>\f14a</td></tr><tr><td>.fa-align-left</td><td>\f036</td><td>.fa-pencil-square</td><td>\f14b</td></tr><tr><td>.fa-align-center</td><td>\f037</td><td>.fa-external-link-square</td><td>\f14c</td></tr><tr><td>.fa-align-right</td><td>\f038</td><td>.fa-share-square</td><td>\f14d</td></tr><tr><td>.fa-align-justify</td><td>\f039</td><td>.fa-compass</td><td>\f14e</td></tr><tr><td>.fa-list</td><td>\f03a</td><td>.fa-toggle-down</td><td>\f150</td></tr><tr><td>.fa-dedent</td><td>\f03b</td><td>.fa-caret-square-o-down</td><td>\f150</td></tr><tr><td>.fa-outdent</td><td>\f03b</td><td>.fa-toggle-up</td><td>\f151</td></tr><tr><td>.fa-indent</td><td>\f03c</td><td>.fa-caret-square-o-up</td><td>\f151</td></tr><tr><td>.fa-video-camera</td><td>\f03d</td><td>.fa-toggle-right</td><td>\f152</td></tr><tr><td>.fa-photo</td><td>\f03e</td><td>.fa-caret-square-o-right</td><td>\f152</td></tr><tr><td>.fa-image</td><td>\f03e</td><td>.fa-euro</td><td>\f153</td></tr><tr><td>.fa-picture-o</td><td>\f03e</td><td>.fa-eur</td><td>\f153</td></tr><tr><td>.fa-pencil</td><td>\f040</td><td>.fa-gbp</td><td>\f154</td></tr><tr><td>.fa-map-marker</td><td>\f041</td><td>.fa-dollar</td><td>\f155</td></tr><tr><td>.fa-adjust</td><td>\f042</td><td>.fa-usd</td><td>\f155</td></tr><tr><td>.fa-tint</td><td>\f043</td><td>.fa-rupee</td><td>\f156</td></tr><tr><td>.fa-edit</td><td>\f044</td><td>.fa-inr</td><td>\f156</td></tr><tr><td>.fa-pencil-square-o</td><td>\f044</td><td>.fa-cny</td><td>\f157</td></tr><tr><td>.fa-share-square-o</td><td>\f045</td><td>.fa-rmb</td><td>\f157</td></tr><tr><td>.fa-check-square-o</td><td>\f046</td><td>.fa-yen</td><td>\f157</td></tr><tr><td>.fa-arrows</td><td>\f047</td><td>.fa-jpy</td><td>\f157</td></tr><tr><td>.fa-step-backward</td><td>\f048</td><td>.fa-ruble</td><td>\f158</td></tr><tr><td>.fa-fast-backward</td><td>\f049</td><td>.fa-rouble</td><td>\f158</td></tr><tr><td>.fa-backward</td><td>\f04a</td><td>.fa-rub</td><td>\f158</td></tr><tr><td>.fa-play</td><td>\f04b</td><td>.fa-won</td><td>\f159</td></tr><tr><td>.fa-pause</td><td>\f04c</td><td>.fa-krw</td><td>\f159</td></tr><tr><td>.fa-stop</td><td>\f04d</td><td>.fa-bitcoin</td><td>\f15a</td></tr><tr><td>.fa-forward</td><td>\f04e</td><td>.fa-btc</td><td>\f15a</td></tr><tr><td>.fa-fast-forward</td><td>\f050</td><td>.fa-file</td><td>\f15b</td></tr><tr><td>.fa-step-forward</td><td>\f051</td><td>.fa-file-text</td><td>\f15c</td></tr><tr><td>.fa-eject</td><td>\f052</td><td>.fa-sort-alpha-asc</td><td>\f15d</td></tr><tr><td>.fa-chevron-left</td><td>\f053</td><td>.fa-sort-alpha-desc</td><td>\f15e</td></tr><tr><td>.fa-chevron-right</td><td>\f054</td><td>.fa-sort-amount-asc</td><td>\f160</td></tr><tr><td>.fa-plus-circle</td><td>\f055</td><td>.fa-sort-amount-desc</td><td>\f161</td></tr><tr><td>.fa-minus-circle</td><td>\f056</td><td>.fa-sort-numeric-asc</td><td>\f162</td></tr><tr><td>.fa-times-circle</td><td>\f057</td><td>.fa-sort-numeric-desc</td><td>\f163</td></tr><tr><td>.fa-check-circle</td><td>\f058</td><td>.fa-thumbs-up</td><td>\f164</td></tr><tr><td>.fa-question-circle</td><td>\f059</td><td>.fa-thumbs-down</td><td>\f165</td></tr><tr><td>.fa-info-circle</td><td>\f05a</td><td>.fa-youtube-square</td><td>\f166</td></tr><tr><td>.fa-crosshairs</td><td>\f05b</td><td>.fa-youtube</td><td>\f167</td></tr><tr><td>.fa-times-circle-o</td><td>\f05c</td><td>.fa-xing</td><td>\f168</td></tr><tr><td>.fa-check-circle-o</td><td>\f05d</td><td>.fa-xing-square</td><td>\f169</td></tr><tr><td>.fa-ban</td><td>\f05e</td><td>.fa-youtube-play</td><td>\f16a</td></tr><tr><td>.fa-arrow-left</td><td>\f060</td><td>.fa-dropbox</td><td>\f16b</td></tr><tr><td>.fa-arrow-right</td><td>\f061</td><td>.fa-stack-overflow</td><td>\f16c</td></tr><tr><td>.fa-arrow-up</td><td>\f062</td><td>.fa-instagram</td><td>\f16d</td></tr><tr><td>.fa-arrow-down</td><td>\f063</td><td>.fa-flickr</td><td>\f16e</td></tr><tr><td>.fa-mail-forward</td><td>\f064</td><td>.fa-adn</td><td>\f170</td></tr><tr><td>.fa-share</td><td>\f064</td><td>.fa-bitbucket</td><td>\f171</td></tr><tr><td>.fa-expand</td><td>\f065</td><td>.fa-bitbucket-square</td><td>\f172</td></tr><tr><td>.fa-compress</td><td>\f066</td><td>.fa-tumblr</td><td>\f173</td></tr><tr><td>.fa-plus</td><td>\f067</td><td>.fa-tumblr-square</td><td>\f174</td></tr><tr><td>.fa-minus</td><td>\f068</td><td>.fa-long-arrow-down</td><td>\f175</td></tr><tr><td>.fa-asterisk</td><td>\f069</td><td>.fa-long-arrow-up</td><td>\f176</td></tr><tr><td>.fa-exclamation-circle</td><td>\f06a</td><td>.fa-long-arrow-left</td><td>\f177</td></tr><tr><td>.fa-gift</td><td>\f06b</td><td>.fa-long-arrow-right</td><td>\f178</td></tr><tr><td>.fa-leaf</td><td>\f06c</td><td>.fa-apple</td><td>\f179</td></tr><tr><td>.fa-fire</td><td>\f06d</td><td>.fa-windows</td><td>\f17a</td></tr><tr><td>.fa-eye</td><td>\f06e</td><td>.fa-android</td><td>\f17b</td></tr><tr><td>.fa-eye-slash</td><td>\f070</td><td>.fa-linux</td><td>\f17c</td></tr><tr><td>.fa-warning</td><td>\f071</td><td>.fa-dribbble</td><td>\f17d</td></tr><tr><td>.fa-exclamation-triangle</td><td>\f071</td><td>.fa-skype</td><td>\f17e</td></tr><tr><td>.fa-plane</td><td>\f072</td><td>.fa-foursquare</td><td>\f180</td></tr><tr><td>.fa-calendar</td><td>\f073</td><td>.fa-trello</td><td>\f181</td></tr><tr><td>.fa-random</td><td>\f074</td><td>.fa-female</td><td>\f182</td></tr><tr><td>.fa-comment</td><td>\f075</td><td>.fa-male</td><td>\f183</td></tr><tr><td>.fa-magnet</td><td>\f076</td><td>.fa-gittip</td><td>\f184</td></tr><tr><td>.fa-chevron-up</td><td>\f077</td><td>.fa-sun-o</td><td>\f185</td></tr><tr><td>.fa-chevron-down</td><td>\f078</td><td>.fa-moon-o</td><td>\f186</td></tr><tr><td>.fa-retweet</td><td>\f079</td><td>.fa-archive</td><td>\f187</td></tr><tr><td>.fa-shopping-cart</td><td>\f07a</td><td>.fa-bug</td><td>\f188</td></tr><tr><td>.fa-folder</td><td>\f07b</td><td>.fa-vk</td><td>\f189</td></tr><tr><td>.fa-folder-open</td><td>\f07c</td><td>.fa-weibo</td><td>\f18a</td></tr><tr><td>.fa-arrows-v</td><td>\f07d</td><td>.fa-renren</td><td>\f18b</td></tr><tr><td>.fa-arrows-h</td><td>\f07e</td><td>.fa-pagelines</td><td>\f18c</td></tr><tr><td>.fa-bar-chart-o</td><td>\f080</td><td>.fa-stack-exchange</td><td>\f18d</td></tr><tr><td>.fa-bar-chart</td><td>\f080</td><td>.fa-arrow-circle-o-right</td><td>\f18e</td></tr><tr><td>.fa-twitter-square</td><td>\f081</td><td>.fa-arrow-circle-o-left</td><td>\f190</td></tr><tr><td>.fa-facebook-square</td><td>\f082</td><td>.fa-toggle-left</td><td>\f191</td></tr><tr><td>.fa-camera-retro</td><td>\f083</td><td>.fa-caret-square-o-left</td><td>\f191</td></tr><tr><td>.fa-key</td><td>\f084</td><td>.fa-dot-circle-o</td><td>\f192</td></tr><tr><td>.fa-gears</td><td>\f085</td><td>.fa-wheelchair</td><td>\f193</td></tr><tr><td>.fa-cogs</td><td>\f085</td><td>.fa-vimeo-square</td><td>\f194</td></tr><tr><td>.fa-comments</td><td>\f086</td><td>.fa-turkish-lira</td><td>\f195</td></tr><tr><td>.fa-thumbs-o-up</td><td>\f087</td><td>.fa-try</td><td>\f195</td></tr><tr><td>.fa-thumbs-o-down</td><td>\f088</td><td>.fa-plus-square-o</td><td>\f196</td></tr><tr><td>.fa-star-half</td><td>\f089</td><td>.fa-space-shuttle</td><td>\f197</td></tr><tr><td>.fa-heart-o</td><td>\f08a</td><td>.fa-slack</td><td>\f198</td></tr><tr><td>.fa-sign-out</td><td>\f08b</td><td>.fa-envelope-square</td><td>\f199</td></tr><tr><td>.fa-linkedin-square</td><td>\f08c</td><td>.fa-wordpress</td><td>\f19a</td></tr><tr><td>.fa-thumb-tack</td><td>\f08d</td><td>.fa-openid</td><td>\f19b</td></tr><tr><td>.fa-external-link</td><td>\f08e</td><td>.fa-institution</td><td>\f19c</td></tr><tr><td>.fa-sign-in</td><td>\f090</td><td>.fa-bank</td><td>\f19c</td></tr><tr><td>.fa-trophy</td><td>\f091</td><td>.fa-university</td><td>\f19c</td></tr><tr><td>.fa-github-square</td><td>\f092</td><td>.fa-mortar-board</td><td>\f19d</td></tr><tr><td>.fa-upload</td><td>\f093</td><td>.fa-graduation-cap</td><td>\f19d</td></tr><tr><td>.fa-lemon-o</td><td>\f094</td><td>.fa-yahoo</td><td>\f19e</td></tr><tr><td>.fa-phone</td><td>\f095</td><td>.fa-google</td><td>\f1a0</td></tr><tr><td>.fa-square-o</td><td>\f096</td><td>.fa-reddit</td><td>\f1a1</td></tr><tr><td>.fa-bookmark-o</td><td>\f097</td><td>.fa-reddit-square</td><td>\f1a2</td></tr><tr><td>.fa-phone-square</td><td>\f098</td><td>.fa-stumbleupon-circle</td><td>\f1a3</td></tr><tr><td>.fa-twitter</td><td>\f099</td><td>.fa-stumbleupon</td><td>\f1a4</td></tr><tr><td>.fa-facebook</td><td>\f09a</td><td>.fa-delicious</td><td>\f1a5</td></tr><tr><td>.fa-github</td><td>\f09b</td><td>.fa-digg</td><td>\f1a6</td></tr><tr><td>.fa-unlock</td><td>\f09c</td><td>.fa-pied-piper</td><td>\f1a7</td></tr><tr><td>.fa-credit-card</td><td>\f09d</td><td>.fa-pied-piper-alt</td><td>\f1a8</td></tr><tr><td>.fa-rss</td><td>\f09e</td><td>.fa-drupal</td><td>\f1a9</td></tr><tr><td>.fa-hdd-o</td><td>\f0a0</td><td>.fa-joomla</td><td>\f1aa</td></tr><tr><td>.fa-bullhorn</td><td>\f0a1</td><td>.fa-language</td><td>\f1ab</td></tr><tr><td>.fa-bell</td><td>\f0f3</td><td>.fa-fax</td><td>\f1ac</td></tr><tr><td>.fa-certificate</td><td>\f0a3</td><td>.fa-building</td><td>\f1ad</td></tr><tr><td>.fa-hand-o-right</td><td>\f0a4</td><td>.fa-child</td><td>\f1ae</td></tr><tr><td>.fa-hand-o-left</td><td>\f0a5</td><td>.fa-paw</td><td>\f1b0</td></tr><tr><td>.fa-hand-o-up</td><td>\f0a6</td><td>.fa-spoon</td><td>\f1b1</td></tr><tr><td>.fa-hand-o-down</td><td>\f0a7</td><td>.fa-cube</td><td>\f1b2</td></tr><tr><td>.fa-arrow-circle-left</td><td>\f0a8</td><td>.fa-cubes</td><td>\f1b3</td></tr><tr><td>.fa-arrow-circle-right</td><td>\f0a9</td><td>.fa-behance</td><td>\f1b4</td></tr><tr><td>.fa-arrow-circle-up</td><td>\f0aa</td><td>.fa-behance-square</td><td>\f1b5</td></tr><tr><td>.fa-arrow-circle-down</td><td>\f0ab</td><td>.fa-steam</td><td>\f1b6</td></tr><tr><td>.fa-globe</td><td>\f0ac</td><td>.fa-steam-square</td><td>\f1b7</td></tr><tr><td>.fa-wrench</td><td>\f0ad</td><td>.fa-recycle</td><td>\f1b8</td></tr><tr><td>.fa-tasks</td><td>\f0ae</td><td>.fa-automobile</td><td>\f1b9</td></tr><tr><td>.fa-filter</td><td>\f0b0</td><td>.fa-car</td><td>\f1b9</td></tr><tr><td>.fa-briefcase</td><td>\f0b1</td><td>.fa-cab</td><td>\f1ba</td></tr><tr><td>.fa-arrows-alt</td><td>\f0b2</td><td>.fa-taxi</td><td>\f1ba</td></tr><tr><td>.fa-group</td><td>\f0c0</td><td>.fa-tree</td><td>\f1bb</td></tr><tr><td>.fa-users</td><td>\f0c0</td><td>.fa-spotify</td><td>\f1bc</td></tr><tr><td>.fa-chain</td><td>\f0c1</td><td>.fa-deviantart</td><td>\f1bd</td></tr><tr><td>.fa-link</td><td>\f0c1</td><td>.fa-soundcloud</td><td>\f1be</td></tr><tr><td>.fa-cloud</td><td>\f0c2</td><td>.fa-database</td><td>\f1c0</td></tr><tr><td>.fa-flask</td><td>\f0c3</td><td>.fa-file-pdf-o</td><td>\f1c1</td></tr><tr><td>.fa-cut</td><td>\f0c4</td><td>.fa-file-word-o</td><td>\f1c2</td></tr><tr><td>.fa-scissors</td><td>\f0c4</td><td>.fa-file-excel-o</td><td>\f1c3</td></tr><tr><td>.fa-copy</td><td>\f0c5</td><td>.fa-file-powerpoint-o</td><td>\f1c4</td></tr><tr><td>.fa-files-o</td><td>\f0c5</td><td>.fa-file-photo-o</td><td>\f1c5</td></tr><tr><td>.fa-paperclip</td><td>\f0c6</td><td>.fa-file-picture-o</td><td>\f1c5</td></tr><tr><td>.fa-save</td><td>\f0c7</td><td>.fa-file-image-o</td><td>\f1c5</td></tr><tr><td>.fa-floppy-o</td><td>\f0c7</td><td>.fa-file-zip-o</td><td>\f1c6</td></tr><tr><td>.fa-square</td><td>\f0c8</td><td>.fa-file-archive-o</td><td>\f1c6</td></tr><tr><td>.fa-navicon</td><td>\f0c9</td><td>.fa-file-sound-o</td><td>\f1c7</td></tr><tr><td>.fa-reorder</td><td>\f0c9</td><td>.fa-file-audio-o</td><td>\f1c7</td></tr><tr><td>.fa-bars</td><td>\f0c9</td><td>.fa-file-movie-o</td><td>\f1c8</td></tr><tr><td>.fa-list-ul</td><td>\f0ca</td><td>.fa-file-video-o</td><td>\f1c8</td></tr><tr><td>.fa-list-ol</td><td>\f0cb</td><td>.fa-file-code-o</td><td>\f1c9</td></tr><tr><td>.fa-strikethrough</td><td>\f0cc</td><td>.fa-vine</td><td>\f1ca</td></tr><tr><td>.fa-underline</td><td>\f0cd</td><td>.fa-codepen</td><td>\f1cb</td></tr><tr><td>.fa-table</td><td>\f0ce</td><td>.fa-jsfiddle</td><td>\f1cc</td></tr><tr><td>.fa-magic</td><td>\f0d0</td><td>.fa-life-bouy</td><td>\f1cd</td></tr><tr><td>.fa-truck</td><td>\f0d1</td><td>.fa-life-buoy</td><td>\f1cd</td></tr><tr><td>.fa-pinterest</td><td>\f0d2</td><td>.fa-life-saver</td><td>\f1cd</td></tr><tr><td>.fa-pinterest-square</td><td>\f0d3</td><td>.fa-support</td><td>\f1cd</td></tr><tr><td>.fa-google-plus-square</td><td>\f0d4</td><td>.fa-life-ring</td><td>\f1cd</td></tr><tr><td>.fa-google-plus</td><td>\f0d5</td><td>.fa-circle-o-notch</td><td>\f1ce</td></tr><tr><td>.fa-money</td><td>\f0d6</td><td>.fa-ra</td><td>\f1d0</td></tr><tr><td>.fa-caret-down</td><td>\f0d7</td><td>.fa-rebel</td><td>\f1d0</td></tr><tr><td>.fa-caret-up</td><td>\f0d8</td><td>.fa-ge</td><td>\f1d1</td></tr><tr><td>.fa-caret-left</td><td>\f0d9</td><td>.fa-empire</td><td>\f1d1</td></tr><tr><td>.fa-caret-right</td><td>\f0da</td><td>.fa-git-square</td><td>\f1d2</td></tr><tr><td>.fa-columns</td><td>\f0db</td><td>.fa-git</td><td>\f1d3</td></tr><tr><td>.fa-unsorted</td><td>\f0dc</td><td>.fa-hacker-news</td><td>\f1d4</td></tr><tr><td>.fa-sort</td><td>\f0dc</td><td>.fa-tencent-weibo</td><td>\f1d5</td></tr><tr><td>.fa-sort-down</td><td>\f0dd</td><td>.fa-qq</td><td>\f1d6</td></tr><tr><td>.fa-sort-desc</td><td>\f0dd</td><td>.fa-wechat</td><td>\f1d7</td></tr><tr><td>.fa-sort-up</td><td>\f0de</td><td>.fa-weixin</td><td>\f1d7</td></tr><tr><td>.fa-sort-asc</td><td>\f0de</td><td>.fa-send</td><td>\f1d8</td></tr><tr><td>.fa-envelope</td><td>\f0e0</td><td>.fa-paper-plane</td><td>\f1d8</td></tr><tr><td>.fa-linkedin</td><td>\f0e1</td><td>.fa-send-o</td><td>\f1d9</td></tr><tr><td>.fa-rotate-left</td><td>\f0e2</td><td>.fa-paper-plane-o</td><td>\f1d9</td></tr><tr><td>.fa-undo</td><td>\f0e2</td><td>.fa-history</td><td>\f1da</td></tr><tr><td>.fa-legal</td><td>\f0e3</td><td>.fa-circle-thin</td><td>\f1db</td></tr><tr><td>.fa-gavel</td><td>\f0e3</td><td>.fa-header</td><td>\f1dc</td></tr><tr><td>.fa-dashboard</td><td>\f0e4</td><td>.fa-paragraph</td><td>\f1dd</td></tr><tr><td>.fa-tachometer</td><td>\f0e4</td><td>.fa-sliders</td><td>\f1de</td></tr><tr><td>.fa-comment-o</td><td>\f0e5</td><td>.fa-share-alt</td><td>\f1e0</td></tr><tr><td>.fa-comments-o</td><td>\f0e6</td><td>.fa-share-alt-square</td><td>\f1e1</td></tr><tr><td>.fa-flash</td><td>\f0e7</td><td>.fa-bomb</td><td>\f1e2</td></tr><tr><td>.fa-bolt</td><td>\f0e7</td><td>.fa-soccer-ball-o</td><td>\f1e3</td></tr><tr><td>.fa-sitemap</td><td>\f0e8</td><td>.fa-futbol-o</td><td>\f1e3</td></tr><tr><td>.fa-umbrella</td><td>\f0e9</td><td>.fa-tty</td><td>\f1e4</td></tr><tr><td>.fa-paste</td><td>\f0ea</td><td>.fa-binoculars</td><td>\f1e5</td></tr><tr><td>.fa-clipboard</td><td>\f0ea</td><td>.fa-plug</td><td>\f1e6</td></tr><tr><td>.fa-lightbulb-o</td><td>\f0eb</td><td>.fa-slideshare</td><td>\f1e7</td></tr><tr><td>.fa-exchange</td><td>\f0ec</td><td>.fa-twitch</td><td>\f1e8</td></tr><tr><td>.fa-cloud-download</td><td>\f0ed</td><td>.fa-yelp</td><td>\f1e9</td></tr><tr><td>.fa-cloud-upload</td><td>\f0ee</td><td>.fa-newspaper-o</td><td>\f1ea</td></tr><tr><td>.fa-user-md</td><td>\f0f0</td><td>.fa-wifi</td><td>\f1eb</td></tr><tr><td>.fa-stethoscope</td><td>\f0f1</td><td>.fa-calculator</td><td>\f1ec</td></tr><tr><td>.fa-suitcase</td><td>\f0f2</td><td>.fa-paypal</td><td>\f1ed</td></tr><tr><td>.fa-bell-o</td><td>\f0a2</td><td>.fa-google-wallet</td><td>\f1ee</td></tr><tr><td>.fa-coffee</td><td>\f0f4</td><td>.fa-cc-visa</td><td>\f1f0</td></tr><tr><td>.fa-cutlery</td><td>\f0f5</td><td>.fa-cc-mastercard</td><td>\f1f1</td></tr><tr><td>.fa-file-text-o</td><td>\f0f6</td><td>.fa-cc-discover</td><td>\f1f2</td></tr><tr><td>.fa-building-o</td><td>\f0f7</td><td>.fa-cc-amex</td><td>\f1f3</td></tr><tr><td>.fa-hospital-o</td><td>\f0f8</td><td>.fa-cc-paypal</td><td>\f1f4</td></tr><tr><td>.fa-ambulance</td><td>\f0f9</td><td>.fa-cc-stripe</td><td>\f1f5</td></tr><tr><td>.fa-medkit</td><td>\f0fa</td><td>.fa-bell-slash</td><td>\f1f6</td></tr><tr><td>.fa-fighter-jet</td><td>\f0fb</td><td>.fa-bell-slash-o</td><td>\f1f7</td></tr><tr><td>.fa-beer</td><td>\f0fc</td><td>.fa-trash</td><td>\f1f8</td></tr><tr><td>.fa-h-square</td><td>\f0fd</td><td>.fa-copyright</td><td>\f1f9</td></tr><tr><td>.fa-plus-square</td><td>\f0fe</td><td>.fa-at</td><td>\f1fa</td></tr><tr><td>.fa-angle-double-left</td><td>\f100</td><td>.fa-eyedropper</td><td>\f1fb</td></tr><tr><td>.fa-angle-double-right</td><td>\f101</td><td>.fa-paint-brush</td><td>\f1fc</td></tr><tr><td>.fa-angle-double-up</td><td>\f102</td><td>.fa-birthday-cake</td><td>\f1fd</td></tr><tr><td>.fa-angle-double-down</td><td>\f103</td><td>.fa-area-chart</td><td>\f1fe</td></tr><tr><td>.fa-angle-left</td><td>\f104</td><td>.fa-pie-chart</td><td>\f200</td></tr><tr><td>.fa-angle-right</td><td>\f105</td><td>.fa-line-chart</td><td>\f201</td></tr><tr><td>.fa-angle-up</td><td>\f106</td><td>.fa-lastfm</td><td>\f202</td></tr><tr><td>.fa-angle-down</td><td>\f107</td><td>.fa-lastfm-square</td><td>\f203</td></tr><tr><td>.fa-desktop</td><td>\f108</td><td>.fa-toggle-off</td><td>\f204</td></tr><tr><td>.fa-laptop</td><td>\f109</td><td>.fa-toggle-on</td><td>\f205</td></tr><tr><td>.fa-tablet</td><td>\f10a</td><td>.fa-bicycle</td><td>\f206</td></tr><tr><td>.fa-mobile-phone</td><td>\f10b</td><td>.fa-bus</td><td>\f207</td></tr><tr><td>.fa-mobile</td><td>\f10b</td><td>.fa-ioxhost</td><td>\f208</td></tr><tr><td>.fa-circle-o</td><td>\f10c</td><td>.fa-angellist</td><td>\f209</td></tr><tr><td>.fa-quote-left</td><td>\f10d</td><td>.fa-cc</td><td>\f20a</td></tr><tr><td>.fa-quote-right</td><td>\f10e</td><td>.fa-shekel</td><td>\f20b</td></tr><tr><td>.fa-spinner</td><td>\f110</td><td>.fa-sheqel</td><td>\f20b</td></tr><tr><td>.fa-circle</td><td>\f111</td><td>.fa-ils</td><td>\f20b</td></tr><tr><td>.fa-mail-reply</td><td>\f112</td><td>.fa-meanpath</td><td>\f20c</td></tr><tr><td>.fa-reply</td><td>\f112</td><td></td><td></td></tr></tbody></table><p>附：Font Awesome—-一套绝佳的图标字体库和CSS框架的官网链接：<a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">http://fontawesome.dashgame.com/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 图标 </tag>
            
            <tag> 主题 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo有趣小功能之雪花飞舞</title>
      <link href="/posts/221edd67/"/>
      <url>/posts/221edd67/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> 在themes\hexo-theme-matery\source\js目录下新建一个 snow.js 文件，粘贴以下代码：</p><pre><code>/*样式一*/(function($){    $.fn.snow = function(options){    var $flake = $('&lt;div id="snowbox" /&gt;').css({'position': 'absolute','z-index':'9999', 'top': '-50px'}).html('&amp;#10052;'),    documentHeight     = $(document).height(),    documentWidth    = $(document).width(),    defaults = {        minSize        : 10,        maxSize        : 20,        newOn        : 1000,        flakeColor    : "#AFDAEF" /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */    },    options    = $.extend({}, defaults, options);    var interval= setInterval( function(){    var startPositionLeft = Math.random() * documentWidth - 100,    startOpacity = 0.5 + Math.random(),    sizeFlake = options.minSize + Math.random() * options.maxSize,    endPositionTop = documentHeight - 200,    endPositionLeft = startPositionLeft - 500 + Math.random() * 500,    durationFall = documentHeight * 10 + Math.random() * 5000;    $flake.clone().appendTo('body').css({        left: startPositionLeft,        opacity: startOpacity,        'font-size': sizeFlake,        color: options.flakeColor    }).animate({        top: endPositionTop,        left: endPositionLeft,        opacity: 0.2    },durationFall,'linear',function(){        $(this).remove()    });    }, options.newOn);    };})(jQuery);$(function(){    $.fn.snow({         minSize: 5, /* 定义雪花最小尺寸 */        maxSize: 50,/* 定义雪花最大尺寸 */        newOn: 300  /* 定义密集程度，数字越小越密集 */    });});</code></pre><pre><code>/*样式二*//* 控制下雪 */function snowFall(snow) {    /* 可配置属性 */    snow = snow || {};    this.maxFlake = snow.maxFlake || 200;   /* 最多片数 */    this.flakeSize = snow.flakeSize || 10;  /* 雪花形状 */    this.fallSpeed = snow.fallSpeed || 1;   /* 坠落速度 */}/* 兼容写法 */requestAnimationFrame = window.requestAnimationFrame ||    window.mozRequestAnimationFrame ||    window.webkitRequestAnimationFrame ||    window.msRequestAnimationFrame ||    window.oRequestAnimationFrame ||    function(callback) { setTimeout(callback, 1000 / 60); };cancelAnimationFrame = window.cancelAnimationFrame ||    window.mozCancelAnimationFrame ||    window.webkitCancelAnimationFrame ||    window.msCancelAnimationFrame ||    window.oCancelAnimationFrame;/* 开始下雪 */snowFall.prototype.start = function(){    /* 创建画布 */    snowCanvas.apply(this);    /* 创建雪花形状 */    createFlakes.apply(this);    /* 画雪 */    drawSnow.apply(this)}/* 创建画布 */function snowCanvas() {    /* 添加Dom结点 */    var snowcanvas = document.createElement("canvas");    snowcanvas.id = "snowfall";    snowcanvas.width = window.innerWidth;    snowcanvas.height = document.body.clientHeight;    snowcanvas.setAttribute("style", "position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;");    document.getElementsByTagName("body")[0].appendChild(snowcanvas);    this.canvas = snowcanvas;    this.ctx = snowcanvas.getContext("2d");    /* 窗口大小改变的处理 */    window.onresize = function() {        snowcanvas.width = window.innerWidth;        /* snowcanvas.height = window.innerHeight */    }}/* 雪运动对象 */function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) {    this.x = Math.floor(Math.random() * canvasWidth);   /* x坐标 */    this.y = Math.floor(Math.random() * canvasHeight);  /* y坐标 */    this.size = Math.random() * flakeSize + 2;          /* 形状 */    this.maxSize = flakeSize;                           /* 最大形状 */    this.speed = Math.random() * 1 + fallSpeed;         /* 坠落速度 */    this.fallSpeed = fallSpeed;                         /* 坠落速度 */    this.velY = this.speed;                             /* Y方向速度 */    this.velX = 0;                                      /* X方向速度 */    this.stepSize = Math.random() / 30;                 /* 步长 */    this.step = 0                                       /* 步数 */}flakeMove.prototype.update = function() {    var x = this.x,        y = this.y;    /* 左右摆动(余弦) */    this.velX *= 0.98;    if (this.velY &lt;= this.speed) {        this.velY = this.speed    }    this.velX += Math.cos(this.step += .05) * this.stepSize;    this.y += this.velY;    this.x += this.velX;    /* 飞出边界的处理 */    if (this.x &gt;= canvas.width || this.x &lt;= 0 || this.y &gt;= canvas.height || this.y &lt;= 0) {        this.reset(canvas.width, canvas.height)    }};/* 飞出边界-放置最顶端继续坠落 */flakeMove.prototype.reset = function(width, height) {    this.x = Math.floor(Math.random() * width);    this.y = 0;    this.size = Math.random() * this.maxSize + 2;    this.speed = Math.random() * 1 + this.fallSpeed;    this.velY = this.speed;    this.velX = 0;};// 渲染雪花-随机形状（此处可修改雪花颜色！！！）flakeMove.prototype.render = function(ctx) {    var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);    snowFlake.addColorStop(0, "rgba(255, 255, 255, 0.9)");  /* 此处是雪花颜色，默认是白色 */    snowFlake.addColorStop(.5, "rgba(255, 255, 255, 0.5)"); /* 若要改为其他颜色，请自行查 */    snowFlake.addColorStop(1, "rgba(255, 255, 255, 0)");    /* 找16进制的RGB 颜色代码。 */    ctx.save();    ctx.fillStyle = snowFlake;    ctx.beginPath();    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);    ctx.fill();    ctx.restore();};/* 创建雪花-定义形状 */function createFlakes() {    var maxFlake = this.maxFlake,        flakes = this.flakes = [],        canvas = this.canvas;    for (var i = 0; i &lt; maxFlake; i++) {        flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))    }}/* 画雪 */function drawSnow() {    var maxFlake = this.maxFlake,        flakes = this.flakes;    ctx = this.ctx, canvas = this.canvas, that = this;    /* 清空雪花 */    ctx.clearRect(0, 0, canvas.width, canvas.height);    for (var e = 0; e &lt; maxFlake; e++) {        flakes[e].update();        flakes[e].render(ctx);    }    /*  一帧一帧的画 */    this.loop = requestAnimationFrame(function() {        drawSnow.apply(that);    });}/* 调用及控制方法 */var snow = new snowFall({maxFlake:60});snow.start();</code></pre><p>在hexo-theme-matery\layout\layout.ejs 文件里引用即可：在body前面</p><pre><code>&lt;!-- 雪花特效 --&gt;&lt;script type="text/javascript" src="\js\snow.js"&gt;&lt;/script&gt;</code></pre><p>例：</p>&lt;%- partial('_partial head') %&gt;<!-- 雪花特效 --><script type="text/javascript" src="\js\snow.js"></script><meta name="google-site-verification" content="02_7KMvaA5QhtHqwZspLnRdeSfrDbpKwMfS9ILtMms8"><hr><p>if (<em>condition</em>)<br>{<br>  <em>当条件为 true 时执行的代码</em><br>}</p><p>添加以上代码可以在config控制是否下雪。</p><p>如果没效果，请确认网页是否已载入JQurey，如果没有请在下雪代码之前引入JQ即可：</p><pre><code>&lt;script type="text/javascript" src="http://libs.baidu.com/jquery/1.8.3/jquery.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="http://libs.baidu.com/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt;</code></pre><p>这个不清楚，可以试一下。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> hexo </tag>
            
            <tag> 小功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo有趣的小功能之樱花飘落</title>
      <link href="/posts/fd68ee7e/"/>
      <url>/posts/fd68ee7e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://yremp.live/wp-content/uploads/resource/js/sakura.js" target="_blank" rel="noopener">地址1</a><br><a href="https://cdn.jsdelivr.net/gh/yremp/yremp-js@1.5/sakura.js" target="_blank" rel="noopener">地址2</a></p><p>在</p>            <meta charset="utf-8">        <title></title>    <meta name="generator" content="Hexo 4.2.0"><link rel="alternate" href="/atom.xml" title="古客" type="application/atom+xml"><link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css">        <script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"model":{"jsonPath":"/live2dw/assets/z16.model.json"},"display":{"position":"right","width":150,"height":300},"mobile":{"show":false},"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/","tagMode":false});</script><script src="https://cdn.jsdelivr.net/gh/yremp/yremp-js@1.5/sakura.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML之文章排版</title>
      <link href="/posts/80134476/"/>
      <url>/posts/80134476/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文的目的是为了所有与我想法相同（不想学习太多的代码，却想修改主题的人），所以我会以尽量少的代码知识来让大家看懂源码并且学会修改，由于本人没系统的学过前端，内容难免有疏漏或是理解不到位的地方，欢迎所有人的指正与补充。</p><p>&lt;%- partial(‘_partial/bg-cover’) %&gt;</p><main class="content">    <div id="contact" class="container chip-container">        <div class="card">            <div class="card-content">                <div class="tag-title center-align">                    <i class="fas fa-comments"></i>&nbsp;&nbsp;&lt;%= __('contact') %&gt;                <!--%=--></div>                &lt;%- page.content %&gt;            <!--%---></div>        </div>        <div class="card">            &lt;% if (theme.valine &amp;&amp; theme.valine.enable) { %&gt;            &lt;%- partial('_partial valine') %&gt;            &lt;% } %&gt;<!--%--><!--%---><!--%--></div></div></main><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> HLML </tag>
            
            <tag> 排版 </tag>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多博客及双线程部署</title>
      <link href="/posts/a6bb7c19/"/>
      <url>/posts/a6bb7c19/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python连接数据库简记</title>
      <link href="/posts/82e025b7/"/>
      <url>/posts/82e025b7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql常用命令</title>
      <link href="/posts/64129a24/"/>
      <url>/posts/64129a24/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="查看mysql-默认端口号和修改端口号"><a href="#查看mysql-默认端口号和修改端口号" class="headerlink" title="查看mysql 默认端口号和修改端口号"></a>查看mysql 默认端口号和修改端口号</h2><p>先登录mysql</p><pre><code>mysql -u root -p</code></pre><p>再使用命令查看端口号</p><pre><code>show global variables like 'port';</code></pre><p>若要修改端口，编辑/etc/my.cnf文件（window可直接编辑）</p><pre><code>vi my.cnf</code></pre><p>重新启动mysql</p><pre><code>/etc/init.d/mysqld restart  或 service mysql restart</code></pre><h2 id="显示所有的数据库"><a href="#显示所有的数据库" class="headerlink" title="显示所有的数据库"></a><strong>显示所有的数据库</strong></h2><p>登录MySQL，输入：</p><pre><code>show databases;</code></pre><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a><strong>创建数据库</strong></h4><p>创建数据库的命令为：</p><pre><code>create database &lt;数据库名&gt;</code></pre><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a><strong>删除数据库</strong></h4><pre><code>drop database &lt;数据库名&gt;；</code></pre><p>例：</p><pre><code>drop database mydatabase;</code></pre><h4 id="打开数据库"><a href="#打开数据库" class="headerlink" title="打开数据库"></a><strong>打开数据库</strong></h4><pre><code>use mydatabase;</code></pre><p>mydatabase为你的数据库名</p><h4 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a><strong>创建数据库表</strong></h4><p>打开数据库后，可以使用创建数据表命令，在已打开的数据库中创建一个新表。创建一个新表的命令为：</p><pre><code>create table &lt;表名&gt; ( &lt;字段名1&gt; &lt;类型1&gt; [,..&lt;字段名n&gt; &lt;类型n&gt;]);</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记</title>
      <link href="/posts/2b866d21/"/>
      <url>/posts/2b866d21/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda的常用命令及使用技巧</title>
      <link href="/posts/a4a2b1a3/"/>
      <url>/posts/a4a2b1a3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Anaconda的常用命令"><a href="#Anaconda的常用命令" class="headerlink" title="Anaconda的常用命令"></a>Anaconda的常用命令</h2><ol><li><p>创建虚拟环境</p><blockquote><blockquote><pre><code>conda create -n your_env_name python=X.X</code></pre><p>（2.7、3.6等）</p></blockquote></blockquote></li><li><p>激活虚拟环境</p><blockquote><blockquote><p>source activate your_env_name(虚拟环境名称)</p></blockquote></blockquote></li><li><p>退出虚拟环境</p><blockquote><blockquote><p>source deactivate your_env_name(虚拟环境名称)</p><p>conda deactivate （退出当前虚拟环境）</p></blockquote></blockquote></li><li><p>删除虚拟环境</p><blockquote><blockquote><pre><code>conda remove -n your_env_name(虚拟环境名称) --all</code></pre></blockquote></blockquote></li><li><p>查看安装了哪些包</p><blockquote><blockquote><p>conda list</p></blockquote></blockquote></li><li><p>安装包</p><blockquote><blockquote><p>conda install package_name(包名)<br>conda install scrapy==1.3 # 安装指定版本的包<br>conda install -n 环境名 包名 # 在conda指定的某个环境中安装包</p></blockquote></blockquote></li><li><p>查看当前存在哪些虚拟环境</p><blockquote><blockquote><p>conda env list<br>或 conda info -e<br>或 conda info –envs</p></blockquote></blockquote></li><li><p>检查更新当前conda</p><blockquote><blockquote><p>conda update conda</p></blockquote></blockquote></li><li><p>更新anaconda</p><blockquote><blockquote><pre><code>conda update anaconda</code></pre></blockquote></blockquote></li></ol><p>9.1 更新所有库</p><blockquote><blockquote><pre><code>conda update --all</code></pre></blockquote></blockquote><ol start="10"><li><p>更新python</p><blockquote><blockquote><pre><code>conda update python</code></pre></blockquote></blockquote><h2 id="Anaconda的使用技巧"><a href="#Anaconda的使用技巧" class="headerlink" title="Anaconda的使用技巧"></a>Anaconda的使用技巧</h2></li><li><p>启动Anaconda Navigator 图形化界面</p><blockquote><blockquote><p>anaconda-navigator</p></blockquote></blockquote></li><li><p>conda环境移植（克隆）的方法</p><blockquote><blockquote><p>conda create -n BBB –clone Tensorflow # 克隆一个BBB，环境和Tensorflow一样</p></blockquote></blockquote></li><li><p>把原来电脑上目标conda环境的目录（路径）复制到新电脑上</p><blockquote><blockquote><p>conda create -n BBB –clone ~/path # 跨计算机克隆</p></blockquote></blockquote></li><li><p>搜索conda安装包</p><blockquote><blockquote><p>anaconda search -t conda tensorflow-gpu  #搜包[tensorflow-gpu]</p></blockquote></blockquote></li><li><p>显示包详细信息</p><blockquote><blockquote><p>anaconda show aaronszs/tensorflow-gpu  #查询第二条[aaronszs/tensorflow-gpu]</p></blockquote></blockquote></li><li><p>导入anaconda所有库</p><blockquote><blockquote><pre><code>conda install anaconda</code></pre></blockquote></blockquote></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> anaconda </tag>
            
            <tag> ubuntu </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python2与python3共存的部分注意事项</title>
      <link href="/posts/a51989a4/"/>
      <url>/posts/a51989a4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="若Python2-和-Python3-同时有-pip，则使用方法如下："><a href="#若Python2-和-Python3-同时有-pip，则使用方法如下：" class="headerlink" title="若Python2 和 Python3 同时有 pip，则使用方法如下："></a>若Python2 和 Python3 同时有 pip，则使用方法如下：</h6><p>Python2：</p><pre><code>python2 -m pip install XXX</code></pre><p>Python3:</p><pre><code>python3 -m pip install XXX</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 注意事项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker常用命令</title>
      <link href="/posts/29dc6fe8/"/>
      <url>/posts/29dc6fe8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>docker images :</strong> 列出本地镜像。</p><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h3><p>例，载入 ubuntu 镜像</p><pre><code>docker pull ubuntu</code></pre><h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><p>ubuntu 镜像启动一个容器，参数为以命令行模式进入该容器：</p><pre><code>docker run -it ubuntu /bin/bash</code></pre><p>参数说明：</p><ul><li><strong>-i</strong>: 交互式操作。</li><li><strong>-t</strong>: 终端。</li><li><strong>ubuntu</strong>: ubuntu 镜像。</li><li><strong>/bin/bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash</li></ul><p>要退出终端，直接输入 <strong>exit</strong>:</p><p>查看所有的容器：docker ps -a</p><p>docker start 启动一个已停止的容器：docker start b750bbbcfd88 （此参数为ID）</p><h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3><p><strong>-d</strong> 指定容器的运行模式</p><pre><code> docker run -itd --name ubuntu-test ubuntu /bin/bash</code></pre><p><strong>注：</strong>加了 <strong>-d</strong> 参数默认不会进入容器，想要进入容器需要使用指令 <strong>docker exec</strong></p><h3 id="停止一个容器"><a href="#停止一个容器" class="headerlink" title="停止一个容器"></a>停止一个容器</h3><pre><code>docker stop &lt;容器 ID&gt;</code></pre><h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><p><strong>docker exec</strong>：推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。</p><pre><code>docker exec -it 243c32535da7 /bin/bash</code></pre><h3 id="导出和导入容器"><a href="#导出和导入容器" class="headerlink" title="导出和导入容器"></a>导出和导入容器</h3><p>使用 <strong>docker export</strong> 命令。</p><pre><code>docker export 1e560fca3906 &gt; ubuntu.tar</code></pre><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><p><strong>docker rm</strong> 命令：</p><pre><code>docker rm -f 1e560fca3906</code></pre><p>下面的命令可以清理掉所有处于终止状态的容器。</p><p>$ docker container prune</p><h2 id="运行一个-web-应用"><a href="#运行一个-web-应用" class="headerlink" title="运行一个 web 应用"></a>运行一个 web 应用</h2><pre><code>runoob@runoob:~# docker pull training/webapp  # 载入镜像runoob@runoob:~# docker run -d -P training/webapp python app.py</code></pre><p>参数说明:</p><ul><li><strong>-d:</strong>让容器在后台运行。</li><li><strong>-P:</strong>将容器内部使用的网络端口映射到我们使用的主机上。</li></ul><h2 id="查看-WEB-应用容器"><a href="#查看-WEB-应用容器" class="headerlink" title="查看 WEB 应用容器"></a>查看 WEB 应用容器</h2><p>docker ps</p><p>Docker 开放了 5000 端口（默认 Python Flask 端口）映射到主机端口 32769 上。</p><p>这时我们可以通过浏览器访问WEB应用</p><p>可以通过 -p 参数来设置不一样的端口：</p><pre><code>runoob@runoob:~$ docker run -d -p 5000:5000 training/webapp python app.py</code></pre><h2 id="查看-WEB-应用程序日志"><a href="#查看-WEB-应用程序日志" class="headerlink" title="查看 WEB 应用程序日志"></a>查看 WEB 应用程序日志</h2><p>docker logs [ID或者名字] 可以查看容器内部的标准输出。</p><p><strong>-f:</strong> 让 <strong>docker logs</strong> 像使用 <strong>tail -f</strong> 一样来输出容器内部的标准输出。</p><p>从上面，我们可以看到应用程序使用的是 5000 端口并且能够查看到应用程序的访问日志。</p><h2 id="检查-WEB-应用程序"><a href="#检查-WEB-应用程序" class="headerlink" title="检查 WEB 应用程序"></a>检查 WEB 应用程序</h2><p>使用 <strong>docker inspect</strong> 来查看 Docker 的底层信息。它会返回一个 JSON 文件记录着 Docker 容器的配置和状态信息。</p><h3 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h3><p>用户登录后，可以通过 docker push 命令将自己的镜像推送到 Docker Hub。</p><p>以下命令中的 username 请替换为你的 Docker 账号用户名</p><pre><code>$ docker tag ubuntu:18.04 username/ubuntu:18.04$ docker image lsREPOSITORY      TAG        IMAGE ID            CREATED           ...  ubuntu          18.04      275d79972a86        6 days ago        ...  username/ubuntu 18.04      275d79972a86        6 days ago        ...  $ docker push username/ubuntu:18.04$ docker search username/ubuntuNAME             DESCRIPTION       STARS         OFFICIAL    AUTOMATEDusername/ubuntu</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Docker </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 云端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB常用命令</title>
      <link href="/posts/c08448a5/"/>
      <url>/posts/c08448a5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h3><p>（1） 使用 Crtl+C 关闭</p><p>（2） 使用 db.shutdownServer()命令 关闭</p><p>备注：命令 db.shutdownServer()关闭命令只能在admin在使用。不然会出错</p><p>（3） 使用 kill命令 关闭</p><p>首先使用$ ps -ef | grep mongo查看MongoDB的相关进程</p><p>然后使用 kill mongo命令</p><p>备注：可以使用操作系统的 kill 命令，给 mongod 进程发送 SIGINT 或 SIGTERM 信号，即 “kill -2 PID,” 或者 “kill -15 PID“。</p><p>建议不要使用 ”kill -9 pid“，因为如果 MongoDB 运行在没开启日志（–journal）的情况下，可能会造成数据损失。</p><h3 id="数据库使用"><a href="#数据库使用" class="headerlink" title="数据库使用"></a>数据库使用</h3><p>查看所有数据库：show dbs  （没有数据的不显示）    </p><p>插入数据：db.runoob.insert({“name”:”菜鸟教程”})</p><p>创建了数据库： use DATABASE_NAME（名字）</p><p>删除数据库：db.dropDatabase()       删除集合：db.collection.drop()</p><p>例：</p><pre><code>&gt; use runoobswitched to db runoob&gt; db.createCollection("runoob")     # 先创建集合，类似数据库中的表&gt; show tables             # show collections 命令会更加准确点runoob&gt; db.runoob.drop()true&gt; show tables</code></pre><h3 id="连接pymongo"><a href="#连接pymongo" class="headerlink" title="连接pymongo"></a>连接pymongo</h3><h3 id="连接chatterbot"><a href="#连接chatterbot" class="headerlink" title="连接chatterbot"></a>连接chatterbot</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题魔改进阶篇（一）</title>
      <link href="/posts/28a773c7/"/>
      <url>/posts/28a773c7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>相信有很多小伙伴在选择了自己的主题，并且在官方文档的指导下配置了自己的主题后，仍然对其中的有些方面不太满意，但是又不想换主题的时候，那么config的配置已经不能满足你了，让我们从源文件下手，对其进行大刀阔斧的改革吧！</p><p>想要修改源文件，那么需要先了解你所选的主体架构，以下均已<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">hexo-theme-matery</a>为例，请根据你的主题进行对应，并且尽量选择使用人数多且文档完善的主题，否则修改会十分困难，如果你是高手的话就当我这句话没说。</p><pre><code>├── languages  语言文件，用于国际化（不是很重要，除非你想向全球推广）├── layout     页面模板文件，决定了网站内容的呈现方式├── scripts    Hexo 脚本（这是matery没有的，但是部分主题有）└── source     主题资源文件，包括页面样式，脚本，字体等</code></pre><h2 id="1-layout"><a href="#1-layout" class="headerlink" title="1.layout"></a>1.layout</h2><ul><li><img src="/posts/28a773c7/Snipaste_2020-01-29_13-11-30.png" alt="Snipaste_2020-01-29_13-11-30"></li></ul><p>每一个ejs对应的同名page的布局，例：contact是文章的布局，也有主题使用的article在_partial里的，一般如下：</p><table><thead><tr><th align="center">模板</th><th align="center">用途</th><th align="center">回调</th></tr></thead><tbody><tr><td align="center">index</td><td align="center">首页</td><td align="center"></td></tr><tr><td align="center">post</td><td align="center">文章</td><td align="center">index</td></tr><tr><td align="center">page</td><td align="center">分页</td><td align="center">index</td></tr><tr><td align="center">archive</td><td align="center">归档</td><td align="center">index</td></tr><tr><td align="center">category</td><td align="center">分类归档</td><td align="center">archive</td></tr><tr><td align="center">tag</td><td align="center">标签归档</td><td align="center">archive</td></tr></tbody></table><p>注：文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略</p><h2 id="2-scripts"><a href="#2-scripts" class="headerlink" title="2.scripts"></a>2.scripts</h2><p>注：部分主题在source\js</p><h2 id="3-source"><a href="#3-source" class="headerlink" title="3.source"></a>3.source</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> 魔改 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows路径含有带空格的目录/文件名的处理方法</title>
      <link href="/posts/eba167b2/"/>
      <url>/posts/eba167b2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="方法一-使用双引号"><a href="#方法一-使用双引号" class="headerlink" title="方法一 使用双引号"></a>方法一 使用双引号</h2><h2 id="方法二-使用缩写"><a href="#方法二-使用缩写" class="headerlink" title="方法二 使用缩写"></a>方法二 使用缩写</h2><p>采用八个字符，由目录名前六个字符（不计空格），加上波浪线<code>~</code>和数字（1<del>4）组成。如果多于四个文件使用相同的前六个字符，则由目录名的前两个字符结合四个字符的散列码，加上波浪线`</del><code>和数字1组成。可以使用</code>dir /x`查看目录名缩写。</p><p>例：</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> window </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pycharm插件推荐</title>
      <link href="/posts/f650c5a8/"/>
      <url>/posts/f650c5a8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown进阶用法</title>
      <link href="/posts/77428012/"/>
      <url>/posts/77428012/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown基础用法</title>
      <link href="/posts/561d6569/"/>
      <url>/posts/561d6569/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令</title>
      <link href="/posts/fe4ef317/"/>
      <url>/posts/fe4ef317/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="1-查看linux服务器的系统信息-内核"><a href="#1-查看linux服务器的系统信息-内核" class="headerlink" title="1.查看linux服务器的系统信息(内核)"></a>1.查看<strong><em>linux</em></strong>服务器的系统信息(<strong><em>内核</em></strong>)</h6><p>在linux命令行下输入shell指令：uname -a</p><h6 id="2-查看操作系统的版本-以redhat为例，其他的同理"><a href="#2-查看操作系统的版本-以redhat为例，其他的同理" class="headerlink" title="2.查看操作系统的版本(以redhat为例，其他的同理)"></a><strong><em>2.查看操作系统的版本</em></strong>(以redhat为例，其他的同理)</h6><p>cat /etc/redhat-release  或  cat /etc/issue</p><h2 id="netstat、lsof查看端口"><a href="#netstat、lsof查看端口" class="headerlink" title="netstat、lsof查看端口"></a>netstat、lsof查看端口</h2><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><p>netstat用来查看系统当前系统网络状态信息，包括端口，连接情况等，常用方式如下：</p><ul><li>-t : 指明显示TCP端口</li><li>-u : 指明显示UDP端口</li><li>-l : 仅显示监听套接字(LISTEN状态的套接字)</li><li>-p : 显示进程标识符和程序名称，每一个套接字/端口都属于一个程序</li><li>-n : 不进行DNS解析</li><li>-a 显示所有连接的端口</li></ul><p>直接查看端口命令。netstat -an | grep 22<br> note：22就是改为要查询的端口</p><h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3><p><a href="http://www.cnblogs.com/peida/archive/2013/02/26/2932972.html" target="_blank" rel="noopener">参考链接</a><br> lsof的作用是列出当前系统打开文件(list open files)，不过通过-i参数也能查看端口的连接情况，-i后跟冒号端口可以查看指定端口信息，直接-i是系统当前所有打开的端口</p><ul><li>-a 列出打开文件存在的进程</li><li>-c&lt;进程名&gt; 列出指定进程所打开的文件</li><li>-g  列出GID号进程详情</li><li>-d&lt;文件号&gt; 列出占用该文件号的进程</li><li>+d&lt;目录&gt;  列出目录下被打开的文件</li><li>+D&lt;目录&gt;  递归列出目录下被打开的文件</li><li>-n&lt;目录&gt;  列出使用NFS的文件</li><li>-i&lt;条件&gt;  列出符合条件的进程。（4、6、协议、:端口、 @ip ）</li><li>-p&lt;进程号&gt; 列出指定进程号所打开的文件</li><li>-u  列出UID号进程详情</li><li>-h 显示帮助信息</li><li>-v 显示版本信息</li></ul><p>lsof -i:22 #查看22端口连接情况，默认为sshd端口</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol><li>使用lsof命令查看那条线程占用了25555端口</li><li>执行kill命令杀掉那条线程 如： kill 15889</li></ol><p>（注：如果是centos系统的话，数字填的是PID下面的，其他系统类似）</p><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><h6 id="直接修改-PATH值："><a href="#直接修改-PATH值：" class="headerlink" title="直接修改$PATH值："></a>直接修改$PATH值：</h6><pre><code>export PATH=$PATH:/要添加的路径</code></pre><p>或者 </p><pre><code>export PATH=/要添加的路径$PATH</code></pre><p>注意PATH后没有空格</p><p>例：</p><pre><code>export PATH="/home/ubuntu/anaconda3/bin:$PATH"</code></pre><p>生效方法：立即生效</p><p>有效期限：临时改变，只能在当前的终端窗口中有效，当前窗口关闭后就会恢复原有的path配置</p><p>用户局限：仅对当前用户</p><h6 id="通过修改-bashrc文件：-bashrc文件在根目录下"><a href="#通过修改-bashrc文件：-bashrc文件在根目录下" class="headerlink" title="通过修改.bashrc文件：(.bashrc文件在根目录下)"></a>通过修改.bashrc文件：(.bashrc文件在根目录下)</h6><p>vi .bashrc //编辑.bashrc文件</p><p>//在最后一行添上：</p><p>export PATH=$PATH:/xxx/xxx ///xxx/xxx位需要加入的环境变量地址 等号两边没空格</p><p>生效方法：（有以下两种）</p><p>..关闭当前终端窗口，重新打开一个新终端窗口就能生效</p><p>..输入“source .bashrc”命令，立即生效</p><p>有效期限：永久有效</p><p>用户局限：仅对当前用户</p><h6 id="通过修改profile文件：（profile文件在-etc目录下）"><a href="#通过修改profile文件：（profile文件在-etc目录下）" class="headerlink" title="通过修改profile文件：（profile文件在/etc目录下）"></a>通过修改profile文件：（profile文件在/etc目录下）</h6><p>vi /etc/profile //编辑profile文件</p><p>//在最后一行添上：</p><p>export PATH=$PATH:/xxx/xxx</p><p>生效方法：系统重启</p><p>有效期限：永久有效</p><p>用户局限：对所有用户</p><h6 id="通过修改environment文件：（environment文件在-etc目录下）（推荐）"><a href="#通过修改environment文件：（environment文件在-etc目录下）（推荐）" class="headerlink" title="通过修改environment文件：（environment文件在/etc目录下）（推荐）"></a>通过修改environment文件：（environment文件在/etc目录下）（推荐）</h6><p>vi /etc/environment //编辑profile文件</p><p>在PATH=/·········中加入“:/xxx/xxx”</p><p>生效方法：系统重启</p><p>有效期限：永久有效</p><p>用户局限：对所有用户</p><h4 id="查找文件"><a href="#查找文件" class="headerlink" title="查找文件"></a>查找文件</h4><p>1.按照文件名查找</p><p>　　　　(1)find / -name httpd.conf　　#在根目录下查找文件httpd.conf，表示在整个硬盘查找<br>　　　　(2)find /etc -name httpd.conf　　#在/etc目录下文件httpd.conf<br>　　　　(3)find /etc -name ‘<em>srm</em>‘　　#使用通配符<em>(0或者任意多个)。表示在/etc目录下查找文件名中含有字符串‘srm’的文件<br>　　　　(4)find . -name ‘srm</em>‘ 　　#表示当前目录下查找文件名开头是字符串‘srm’的文件</p><p>　2.按照文件特征查找 　　　</p><p>　　　　(1)find / -amin -10 　　# 查找在系统中最后10分钟访问的文件(access time)<br>　　　　(2)find / -atime -2　　 # 查找在系统中最后48小时访问的文件<br>　　　　(3)find / -empty 　　# 查找在系统中为空的文件或者文件夹<br>　　　　(4)find / -group cat 　　# 查找在系统中属于 group为cat的文件</p><p>3.使用混合查找方式查找文件</p><p>　　　　参数有： ！，-and(-a)，-or(-o)。</p><p>　　　　(1)find /tmp -size +10000c -and -mtime +2 　　#在/tmp目录下查找大于10000字节并在最后2分钟内修改的文件</p><p><a href="https://www.cnblogs.com/jpfss/p/10863135.html" target="_blank" rel="noopener">原文链接</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ONEdriver应用程序注册流程</title>
      <link href="/posts/dcefea28/"/>
      <url>/posts/dcefea28/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="二、如何获取应用机密-client-secret-和应用-ID-client-id-？"><a href="#二、如何获取应用机密-client-secret-和应用-ID-client-id-？" class="headerlink" title="二、如何获取应用机密(client secret)和应用 ID(client_id)？"></a>二、如何获取应用机密(client secret)和应用 ID(client_id)？</h4><ol><li><p>登录：<a href="https://portal.azure.com/?l=zh-hans.zh-cn#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade" target="_blank" rel="noopener">https://portal.azure.com/?l=zh-hans.zh-cn#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade</a></p></li><li><p>点击新注册</p></li></ol><pre><code>- 名称：随便填- 受支持的帐户类型：选择“任何组织目录中的帐户和个人 Microsoft 帐户”- 重定向 URI (可选)：Web - https://pyoneauth.github.io/</code></pre><p>  点击创建，进入下一步</p><p>  <strong>*创建之后，看到应用程序(客户端) ID，复制到上方应用 ID(client_id)</strong></p><p><strong>3. 开启权限：第2步创建应用程序之后，进入该应用的概述页面。</strong></p><p>  1）点击：API权限</p><p>  2）选择：添加权限：</p><pre><code>Microsoft Graph – 委派的权限 – Files - Files.ReadWrite 和 Files.ReadWrite.All </code></pre><ol start="4"><li><p>创建秘钥：第2步创建应用程序之后，进入该应用的概述页面。</p><p>1）点击：证书和密码</p><p>2）选择：新客户端密码，添加秘钥：</p></li></ol><p>​    说明：随便填写</p><p>​    截止期限：1年内</p><p>  <strong>*3）点击保存，得到秘钥值，复制到上方应用机密(client secret)</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 分享网盘，ONEdrive </tag>
            
            <tag> pyone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板常用指令</title>
      <link href="/posts/2db0a1e1/"/>
      <url>/posts/2db0a1e1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="SSH终端输入："><a href="#SSH终端输入：" class="headerlink" title="SSH终端输入："></a>SSH终端输入：</h3><p>1.查看面板入口：</p><pre><code>/etc/init.d/bt default</code></pre><p>2.关闭安全入口：</p><pre><code>rm -f /www/server/panel/data/admin_path.pl</code></pre><p>停止</p><pre><code>/etc/init.d/bt stop</code></pre><p>启动</p><pre><code>/etc/init.d/bt start</code></pre><p>重启</p><pre><code>/etc/init.d/bt restart</code></pre><p>卸载</p><pre><code>/etc/init.d/bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /etc/init.d/bt &amp;&amp; rm -rf /www/server/panel</code></pre><p>查看当前面板端口</p><pre><code>cat /www/server/panel/data/port.pl</code></pre><p>修改面板端口，如要改成8881（centos 6 系统）</p><pre><code>echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restartiptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 8881 -j ACCEPTservice iptables saveservice iptables restart</code></pre><p>修改面板端口，如要改成8881（centos 7 系统）</p><pre><code>echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restartfirewall-cmd --permanent --zone=public --add-port=8881/tcpfirewall-cmd --reload</code></pre><p>强制修改MySQL管理(root)密码，如要改成123456</p><pre><code>cd /www/server/panel &amp;&amp; python tools.py root 123456</code></pre><p>修改面板密码，如要改成123456</p><pre><code>cd /www/server/panel &amp;&amp; python tools.py panel 123456</code></pre><p>查看宝塔日志</p><pre><code>cat /tmp/panelBoot.pl</code></pre><p>查看软件安装日志</p><pre><code>cat /tmp/panelExec.log</code></pre><p>站点配置文件位置</p><pre><code>/www/server/panel/vhost</code></pre><p>删除域名绑定面板</p><pre><code>rm -f /www/server/panel/data/domain.conf</code></pre><p>清理登陆限制</p><pre><code>rm -f /www/server/panel/data/*.login</code></pre><p>查看面板授权IP</p><pre><code>cat /www/server/panel/data/limitip.conf</code></pre><p>关闭访问限制</p><pre><code>rm -f /www/server/panel/data/limitip.conf</code></pre><p>查看许可域名</p><pre><code>cat /www/server/panel/data/domain.conf</code></pre><p>关闭面板SSL</p><pre><code>rm -f /www/server/panel/data/ssl.pl &amp;&amp; /etc/init.d/bt restart</code></pre><p>查看面板错误日志</p><pre><code>cat /tmp/panelBoot</code></pre><p>查看数据库错误日志</p><pre><code>cat /www/server/data/*.err</code></pre><p>站点配置文件目录(nginx)</p><pre><code>/www/server/panel/vhost/nginx</code></pre><p>站点配置文件目录(apache)</p><pre><code>/www/server/panel/vhost/apache</code></pre><p>站点默认目录</p><pre><code>/www/wwwroot</code></pre><p>数据库备份目录</p><pre><code>/www/backup/database</code></pre><p>站点备份目录</p><pre><code>/www/backup/site</code></pre><p>站点日志</p><pre><code>/www/wwwlogs</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 命令，宝塔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假建站记录</title>
      <link href="/posts/f0e4e3b5/"/>
      <url>/posts/f0e4e3b5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>搭建以下网站的前提条件：</p><p>1,  一个服务器</p><p>2，一个域名（便宜的有1元一年，像我买的就是)</p><p>3,  大量的时间</p><p>（如果你是一个学生，并且可以FAN墙的话，可以免费的弄到上面的所有东西，不过非常麻烦，建议时间少并且宝贵的可以直接去腾讯云，或是阿里云购买，除非是像我那么闲的人才会到处白嫖）</p><hr><h6 id="第一个搭建的网站是："><a href="#第一个搭建的网站是：" class="headerlink" title="第一个搭建的网站是："></a>第一个搭建的网站是：</h6><p><a href="https://guhailong18.github.io/">https://guhailong18.github.io/</a></p><p>一个静态博客</p><p>利用Github的储存库，基于hexo搭建静态博客。</p><p>优点：方便使用，响应速度快，支持GIF等</p><p>缺点：部分功能缺失，无用户功能，评论系统单调乏味，深度美化难度大，需要学习CSS和html</p><p>（如果有会的希望能在评论区留下联系方式，教教我美化和视频插入参数的设置）</p><h6 id="第二个搭建的网站是："><a href="#第二个搭建的网站是：" class="headerlink" title="第二个搭建的网站是："></a>第二个搭建的网站是：</h6><p><a href="http://a.dream18.xyz" target="_blank" rel="noopener">http://a.dream18.xyz</a></p><p>这个网站真的弄了很久，</p><h6 id="第三个搭建的网站是："><a href="#第三个搭建的网站是：" class="headerlink" title="第三个搭建的网站是："></a>第三个搭建的网站是：</h6><p><a href="http://b.dream18.xyz" target="_blank" rel="noopener">http://b.dream18.xyz</a></p><p>一个私有云盘，方便与他人共享资源等，可以为网页提供视频服务，并且不限速</p><p>基于宝塔，AWS服务器，KobExporer</p><h6 id="第四个搭建的网站是："><a href="#第四个搭建的网站是：" class="headerlink" title="第四个搭建的网站是："></a>第四个搭建的网站是：</h6><p><a href="http://c.dream18.xyz" target="_blank" rel="noopener">http://c.dream18.xyz</a></p><p>一个重量级的博客</p><p>优点：功能齐全，调节方便，可在线编辑</p><p>缺点：过于臃肿，时常崩溃，哭了（应该是我的服务器的问题，一核1G的承受不住啊），服务器好的大佬建议使用这个，部分插件及主题要钱</p><p><img src="/posts/f0e4e3b5/10A4F57B.jpg" alt="10A4F57B"></p><p>基于宝塔，AWS服务器，WordPress框架</p><h6 id="第五个搭建的网站是："><a href="#第五个搭建的网站是：" class="headerlink" title="第五个搭建的网站是："></a>第五个搭建的网站是：</h6><p><a href="http://d.dream18.xyz" target="_blank" rel="noopener">http://d.dream18.xyz</a></p><p>（待建）</p><h6 id="第六个搭建的网站是："><a href="#第六个搭建的网站是：" class="headerlink" title="第六个搭建的网站是："></a>第六个搭建的网站是：</h6><p><a href="http://e.dream18.xyz" target="_blank" rel="noopener">http://e.dream18.xyz</a></p><p>（待建）</p><h6 id="第七个搭建的网站是："><a href="#第七个搭建的网站是：" class="headerlink" title="第七个搭建的网站是："></a>第七个搭建的网站是：</h6><p><a href="http://m.dream18.xyz" target="_blank" rel="noopener">http://m.dream18.xyz</a></p><p>一个微信开发及管理平台，可以方便的管理公众号以及小程序，并且可以创建一些自动回复或者聊天机器人等有趣的功能。</p><p>优点：使用方便，粉丝多的可以试一下，也有些有免费的功能</p><p>缺点：有些服务要钱，并且我公众号又没粉丝</p><p>基于宝塔，AWS服务器，微擎构建</p><h6 id="第八个搭建的网站是："><a href="#第八个搭建的网站是：" class="headerlink" title="第八个搭建的网站是："></a>第八个搭建的网站是：</h6><p><a href="http://dream18.xyz" target="_blank" rel="noopener">http://dream18.xyz</a></p><p>其实这个不算一个网站，是我设置的一个企业邮箱，可以有这个域名指向网易免费的企业邮箱</p><p>2020.01.24</p><h6 id="第九个搭建的网站是："><a href="#第九个搭建的网站是：" class="headerlink" title="第九个搭建的网站是："></a>第九个搭建的网站是：</h6><p>(PS：以上的网站并不是按时间搭建的，而是按字母和我的个人兴趣排的)</p><p>总结：现在搭建一个博客网站真的是一个十分轻松的事情（如果愿意花些钱的话），但是想做的比较好却没有那么容易，特别是美化博客的时候，有些简单的功能想实现真的有些麻烦，特别是我这种没怎么学过代码的人，只能看着别人的教程一步一步学，如果你和我一样，且运气不是很好的话，那么就会遇到一大堆报错，以后有时间我会把做的比较好的教程整理出来分享给大家，顺便做一些补充和说明，希望大家不要踩到我曾经踩过得坑。</p><hr><p>如果有小伙伴对以上那个网站搭建感兴趣的请在下方留言，如果我有时间的话，可以出一个搭建过程或是指导建议！</p><p>最后祝大家鼠年大吉！！！</p><p><img src="/posts/f0e4e3b5/10B7F0DB.gif" alt="10B7F0DB"></p><p>再来一张！！！</p><p><img src="/posts/f0e4e3b5/10B7B122.gif" alt="10B7B122"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 建站 </tag>
            
            <tag> 寒假 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome浏览器一个有意思的彩蛋</title>
      <link href="/posts/a5735571/"/>
      <url>/posts/a5735571/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>某一天再看公众号文章的时候突然发现，chrome浏览器竟然给用户设置了一个彩蛋（也可能还有很多我还没看到或被发现），一起看看吧！</p><p>打开谷歌浏览器，假如网线出现问题、无法正常访问网页时，就会出现以下提示：<strong>未连接到互联网，请重试…</strong></p><p><img src="/posts/a5735571/Snipaste_2020-01-20_19-25-59.png" alt="Snipaste_2020-01-20_19-25-59"></p><p>相信使用过chrome浏览器的用户大部分都看到过过这种图片，一般出现于断网的情况，但想必大部分人都不会想到这小小的恐龙竟然是一个小游戏！</p><p>处于这种状态下，我们按键盘的“<strong>↑</strong>”键，恐龙就会直接动起来，现在你就进入了“恐龙越障碍”的小游戏…</p><p>当然，联网状态下也能直接玩，通过谷歌浏览器访问以下网站即可。</p><p><strong>→</strong> chrome://dino/</p><p>（复制网址，通过浏览器打开）</p><p><img src="/posts/a5735571/1.gif" alt="1"></p><p>是不是挺有意思的呢，没网的时候玩这个游戏说不定可以给你带来一丝慰藉！</p><p>(σﾟ∀ﾟ)σ..:*☆哎哟不错哦</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 彩蛋 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们生活的世界到底是几维的？</title>
      <link href="/posts/8902adc/"/>
      <url>/posts/8902adc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>身为科普类作品，为了使受众面更广，所以远方客（我）会从最基本的概念开始，以确保大家都可以听懂，学到知识，不要嫌弃我话痨哦，那么我们就开始啦！</p><p>在<a href="https://baike.baidu.com/item/物理学/313183" target="_blank" rel="noopener">物理学</a>和<a href="https://baike.baidu.com/item/哲学/140608" target="_blank" rel="noopener">哲学</a>的领域内，指独立的时空坐标的数目</p><p>如果用较为传统的观念想，我们所处的空间是三维的，而如果加上时间的话，便是四维的。可能有人会提出一个疑问，为什么要加上时间这个维度呢？</p><p>因为从爱因斯坦的相对论来看，时间和空间是紧紧联系在一起的，可以说是你中有我，我中有你的状态。所以我们无法把空间单独拿出来而不考虑时间的影响。</p><p>而时间这个维度也比较特殊，是单方向的。我们正常人都会觉得这是非常正常的事情，仿佛理所当然就应该是这样的，就跟苹果成熟后就会掉在地上一样。但是如果把时间放在理论上看就完全不一样了，因为从理论上看，时间理应是双方向的。这使得无数的物理学家为之困惑，也提出了非常多的猜想来解决这个问题，比较著名的有</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 科普 </tag>
            
            <tag> 物理 </tag>
            
            <tag> 文案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假学习记录（爬虫篇）</title>
      <link href="/posts/ff1e4930/"/>
      <url>/posts/ff1e4930/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假学习记录（数学建模篇）</title>
      <link href="/posts/7cee0e0f/"/>
      <url>/posts/7cee0e0f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a><center>数据处理</center></h1><hr><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a><center>算法</center></h1><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><h3 id="分类方法"><a href="#分类方法" class="headerlink" title="分类方法"></a>分类方法</h3><h5 id="1-K-近邻分类"><a href="#1-K-近邻分类" class="headerlink" title="1.K-近邻分类"></a>1.K-近邻分类</h5><p>一种基于实例的，非参数的分类方法。</p><p>​    </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 2020寒假学习 </tag>
            
            <tag> 数模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020寒假学习记录（MAD篇）</title>
      <link href="/posts/8c706961/"/>
      <url>/posts/8c706961/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-人物定格描边"><a href="#1-人物定格描边" class="headerlink" title="1.人物定格描边"></a>1.人物定格描边</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 2020寒假学习 </tag>
            
            <tag> MAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读《人间失格》-手札有感</title>
      <link href="/posts/a6a55fc/"/>
      <url>/posts/a6a55fc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>最近几天，拜读了日本作家太宰治的作品《人间失格》，感触颇多，那么就挑其中几篇对我感触比较大的文章来谈谈吧！</p><hr><h5 id="记录一些《人间失格》里的名句吧！（括号内的为个人心得体会）"><a href="#记录一些《人间失格》里的名句吧！（括号内的为个人心得体会）" class="headerlink" title="记录一些《人间失格》里的名句吧！（括号内的为个人心得体会）"></a>记录一些《人间失格》里的名句吧！（括号内的为个人心得体会）</h5><p>1.最有名的应该是：生而为人，我很抱歉！</p><p>2.仅一夜之隔，我的心竟判若两人！（嗯，想想确实会有这样完全的，彻底的改变，或许这就是成长吧，心灵上的翻天覆地！如今的我们是否太过安逸，毕竟对于我个人而言，已经很少会有事情或是别的什么东西可以给我的心灵带来这样大的冲击了，给更多的是一点一滴的变化！可我还是希望保持目前的安逸，毕竟改变，往往伴随而来的是伤痛，而且刻骨铭心）</p><p>3.若能避开猛烈的狂喜，自然不会有悲痛来袭。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 读书感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表情包分享（1）</title>
      <link href="/posts/ceee3096/"/>
      <url>/posts/ceee3096/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="第一期分享给大家的是《80年代宣传画系列》"><a href="#第一期分享给大家的是《80年代宣传画系列》" class="headerlink" title="第一期分享给大家的是《80年代宣传画系列》"></a>第一期分享给大家的是《80年代宣传画系列》</h1><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(1).jpg" alt="80年代宣传画 (1)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(2).jpg" alt="80年代宣传画 (2)"></p><a id="more"></a><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(3).jpg" alt="80年代宣传画 (3)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(4).jpg" alt="80年代宣传画 (4)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(5).jpg" alt="80年代宣传画 (5)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(31).jpg" alt="80年代宣传画 (31)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(32).jpg" alt="80年代宣传画 (32)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(33).jpg" alt="80年代宣传画 (33)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(34).jpg" alt="80年代宣传画 (34)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(35).jpg" alt="80年代宣传画 (35)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(36).jpg" alt="80年代宣传画 (36)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(37).jpg" alt="80年代宣传画 (37)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(38).jpg" alt="80年代宣传画 (38)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(39).jpg" alt="80年代宣传画 (39)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(40).jpg" alt="80年代宣传画 (40)"></p><p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(41).jpg" alt="80年代宣传画 (41)"></p><p>封面测试：</p><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><p>no url specified, no dplayer _(:3」∠)_</p><h6 id="需要的自取即可，欢迎在评论区给我留言哦！！"><a href="#需要的自取即可，欢迎在评论区给我留言哦！！" class="headerlink" title="需要的自取即可，欢迎在评论区给我留言哦！！"></a>需要的自取即可，欢迎在评论区给我留言哦！！</h6><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客——自我介绍</title>
      <link href="/posts/6007b04d/"/>
      <url>/posts/6007b04d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是一个分享一些自己心得，爱好以及知识的博客，本人只是一名普通的大学生，不是啥大神。不用抱有太高的期待或是要求，如果能帮助到部分人或是给部分人带来些许快乐，实乃我无上的荣耀…..（此处运用了夸张的手法并省略两千字）</p><p>邮箱：<a href="mailto:1097629344@qq.com">1097629344@qq.com</a></p><p>欢迎大家与我交流！!!<img src="/posts/6007b04d/08.jpg"></p>    <div id="aplayer-tXeDUaHB" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="60198" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div><a id="more"></a><hr><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"video":{"url":"https://dl.sm9.top/Video/2018/KeyCastOW.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script> <hr><iframe src="//player.bilibili.com/player.html?aid=82968958&amp;cid=141941752&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width"100%"="" height="100%" allowfullscreen="true"> </iframe><script src="text.js"></script><hr><iframe style="margin-left: 2px; margin-bottom:-5px;" frameborder="0" scrolling="0" width="100px" height="20px" src="https://ghbtns.com/github-btn.html?user=fandongtongxue&amp;repo=fandongtongxue.github.io&amp;type=star&amp;count=true"> </iframe><iframe src="//player.bilibili.com/player.html?aid=84628317&amp;cid=144732024&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="100%" allowfullscreen="true"> </iframe>------<iframe id="spkj" src="//player.bilibili.com/player.html?aid=85179902&amp;cid=145623591&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%%" height="100%"> </iframe><hr><pre><code>&lt;iframe id="spkj" src="https://player.bilibili.com/player.html?aid=44020824&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width=100%&gt; &lt;/iframe&gt;&lt;script type="text/javascript"&gt;document.getElementById("spkj").style.height=document.getElementById("spkj").scrollWidth\*0.76+"px";&lt;/script&gt;</code></pre><pre><code>&lt;iframe id="spkj" src="https://player.bilibili.com/player.html?aid=85546317&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width=100%&gt; &lt;/iframe&gt;&lt;script src="text.js"&gt;&lt;/script&gt;</code></pre><pre><code>{% for js in page.customjs %}<script src="{{ js }}"></script>{% endfor %}</code></pre><p>页面引用<br>CSS 部分</p><link rel="stylesheet" href="/static/admin/assets/css/editormd.css">1JS 部分<script src="/static/admin/assets/js/editormd.js"></script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 自述 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><hr><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"autoplay":true,"hotkey":true,"preload":"metadata","video":{"url":"http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script> <hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
