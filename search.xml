<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>多博客及双线程部署</title>
    <url>/posts/a6bb7c19/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>python连接数据库简记</title>
    <url>/posts/82e025b7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>Mysql常用命令</title>
    <url>/posts/64129a24/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="查看mysql-默认端口号和修改端口号"><a href="#查看mysql-默认端口号和修改端口号" class="headerlink" title="查看mysql 默认端口号和修改端口号"></a>查看mysql 默认端口号和修改端口号</h2>
<p>先登录mysql</p>
<pre><code>mysql -u root -p</code></pre>
<p>再使用命令查看端口号</p>
<pre><code>show global variables like 'port';</code></pre>
<p>若要修改端口，编辑/etc/my.cnf文件（window可直接编辑）</p>
<pre><code>vi my.cnf</code></pre>
<p>重新启动mysql</p>
<pre><code>/etc/init.d/mysqld restart  
或 service mysql restart</code></pre>
<h2 id="显示所有的数据库"><a href="#显示所有的数据库" class="headerlink" title="显示所有的数据库"></a><strong>显示所有的数据库</strong></h2>
<p>登录MySQL，输入：</p>
<pre><code>show databases;</code></pre>
<h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a><strong>创建数据库</strong></h4>
<p>创建数据库的命令为：</p>
<pre><code>create database &lt;数据库名&gt;</code></pre>
<h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a><strong>删除数据库</strong></h4>
<pre><code>drop database &lt;数据库名&gt;；</code></pre>
<p>例：</p>
<pre><code>drop database mydatabase;</code></pre>
<h4 id="打开数据库"><a href="#打开数据库" class="headerlink" title="打开数据库"></a><strong>打开数据库</strong></h4>
<pre><code>use mydatabase;</code></pre>
<p>mydatabase为你的数据库名</p>
<h4 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a><strong>创建数据库表</strong></h4>
<p>打开数据库后，可以使用创建数据表命令，在已打开的数据库中创建一个新表。创建一个新表的命令为：</p>
<pre><code>create table &lt;表名&gt; ( &lt;字段名1&gt; &lt;类型1&gt; [,..&lt;字段名n&gt; &lt;类型n&gt;]);</code></pre><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>命令</tag>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript学习笔记</title>
    <url>/posts/2b866d21/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>Anaconda的常用命令及使用技巧</title>
    <url>/posts/a4a2b1a3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Anaconda的常用命令"><a href="#Anaconda的常用命令" class="headerlink" title="Anaconda的常用命令"></a>Anaconda的常用命令</h2>
<ol>
  <li>
    <p>创建虚拟环境</p>
    <blockquote>
      <blockquote>
        <pre><code>conda create -n your_env_name python=X.X</code></pre>
        <p>（2.7、3.6等）</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>激活虚拟环境</p>
    <blockquote>
      <blockquote>
        <p>source activate your_env_name(虚拟环境名称)</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>退出虚拟环境</p>
    <blockquote>
      <blockquote>
        <p>source deactivate your_env_name(虚拟环境名称)</p>
        <p>conda deactivate （退出当前虚拟环境）</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>删除虚拟环境</p>
    <blockquote>
      <blockquote>
        <pre><code>conda remove -n your_env_name(虚拟环境名称) --all</code></pre>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>查看安装了哪些包</p>
    <blockquote>
      <blockquote>
        <p>conda list</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>安装包</p>
    <blockquote>
      <blockquote>
        <p>conda install package_name(包名)<br>conda install scrapy==1.3 # 安装指定版本的包<br>conda install -n 环境名 包名 # 在conda指定的某个环境中安装包</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>查看当前存在哪些虚拟环境</p>
    <blockquote>
      <blockquote>
        <p>conda env list<br>或 conda info -e<br>或 conda info –envs</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>检查更新当前conda</p>
    <blockquote>
      <blockquote>
        <p>conda update conda</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>更新anaconda</p>
    <blockquote>
      <blockquote>
        <pre><code>conda update anaconda</code></pre>
      </blockquote>
    </blockquote>
  </li>
</ol>
<p>9.1 更新所有库</p>
<blockquote>
  <blockquote>
    <pre><code>conda update --all</code></pre>
  </blockquote>
</blockquote>
<ol start="10">
  <li>
    <p>更新python</p>
    <blockquote>
      <blockquote>
        <pre><code>conda update python</code></pre>
      </blockquote>
    </blockquote>
    <h2 id="Anaconda的使用技巧"><a href="#Anaconda的使用技巧" class="headerlink" title="Anaconda的使用技巧"></a>Anaconda的使用技巧</h2>
  </li>
  <li>
    <p>启动Anaconda Navigator 图形化界面</p>
    <blockquote>
      <blockquote>
        <p>anaconda-navigator</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>conda环境移植（克隆）的方法</p>
    <blockquote>
      <blockquote>
        <p>conda create -n BBB –clone Tensorflow # 克隆一个BBB，环境和Tensorflow一样</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>把原来电脑上目标conda环境的目录（路径）复制到新电脑上</p>
    <blockquote>
      <blockquote>
        <p>conda create -n BBB –clone ~/path # 跨计算机克隆</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>搜索conda安装包</p>
    <blockquote>
      <blockquote>
        <p>anaconda search -t conda tensorflow-gpu #搜包[tensorflow-gpu]</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>显示包详细信息</p>
    <blockquote>
      <blockquote>
        <p>anaconda show aaronszs/tensorflow-gpu #查询第二条[aaronszs/tensorflow-gpu]</p>
      </blockquote>
    </blockquote>
  </li>
  <li>
    <p>导入anaconda所有库</p>
    <blockquote>
      <blockquote>
        <pre><code>conda install anaconda</code></pre>
      </blockquote>
    </blockquote>
  </li>
</ol><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>anaconda</tag>
        <tag>ubuntu</tag>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>python2与python3共存的部分注意事项</title>
    <url>/posts/a51989a4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="若Python2-和-Python3-同时有-pip，则使用方法如下："><a href="#若Python2-和-Python3-同时有-pip，则使用方法如下：" class="headerlink" title="若Python2 和 Python3 同时有 pip，则使用方法如下："></a>若Python2 和 Python3 同时有 pip，则使用方法如下：</h6>
<p>Python2：</p>
<pre><code>python2 -m pip install XXX</code></pre>
<p>Python3:</p>
<pre><code>python3 -m pip install XXX</code></pre><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>python</tag>
        <tag>注意事项</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker常用命令</title>
    <url>/posts/29dc6fe8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>docker images :</strong> 列出本地镜像。</p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>MongoDB常用命令</title>
    <url>/posts/c08448a5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>（1） 使用 Crtl+C 关闭</p>
<p>（2） 使用 db.shutdownServer()命令 关闭</p>
<p>备注：命令 db.shutdownServer()关闭命令只能在admin在使用。不然会出错</p>
<p>（3） 使用 kill命令 关闭</p>
<p>首先使用$ ps -ef | grep mongo查看MongoDB的相关进程</p>
<p>然后使用 kill mongo命令</p>
<p>备注：可以使用操作系统的 kill 命令，给 mongod 进程发送 SIGINT 或 SIGTERM 信号，即 “kill -2 PID,” 或者 “kill -15 PID“。</p>
<p>建议不要使用 ”kill -9 pid“，因为如果 MongoDB 运行在没开启日志（–journal）的情况下，可能会造成数据损失。</p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>hexo主题魔改进阶篇（一）</title>
    <url>/posts/28a773c7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>Windows路径含有带空格的目录/文件名的处理方法</title>
    <url>/posts/eba167b2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="方法一-使用双引号"><a href="#方法一-使用双引号" class="headerlink" title="方法一 使用双引号"></a>方法一 使用双引号</h2>
<h2 id="方法二-使用缩写"><a href="#方法二-使用缩写" class="headerlink" title="方法二 使用缩写"></a>方法二 使用缩写</h2>
<p>采用八个字符，由目录名前六个字符（不计空格），加上波浪线<code>~</code>和数字（1<del>4）组成。如果多于四个文件使用相同的前六个字符，则由目录名的前两个字符结合四个字符的散列码，加上波浪线`</del><code>和数字1组成。
    可以使用</code>dir /x`查看目录名缩写。</p>
<p>例：</p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>window</tag>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>pycharm插件推荐</title>
    <url>/posts/f650c5a8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>markdown进阶用法</title>
    <url>/posts/77428012/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>markdown基础用法</title>
    <url>/posts/561d6569/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>linux常用命令</title>
    <url>/posts/fe4ef317/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h6 id="1-查看linux服务器的系统信息-内核"><a href="#1-查看linux服务器的系统信息-内核" class="headerlink" title="1.查看linux服务器的系统信息(内核)"></a>1.查看<strong><em>linux</em></strong>服务器的系统信息(<strong><em>内核</em></strong>)</h6>
<p>在linux命令行下输入shell指令：uname -a</p>
<h6 id="2-查看操作系统的版本-以redhat为例，其他的同理"><a href="#2-查看操作系统的版本-以redhat为例，其他的同理" class="headerlink" title="2.查看操作系统的版本(以redhat为例，其他的同理)"></a><strong><em>2.查看操作系统的版本</em></strong>(以redhat为例，其他的同理)</h6>
<p>cat /etc/redhat-release</p>
<h2 id="netstat、lsof查看端口"><a href="#netstat、lsof查看端口" class="headerlink" title="netstat、lsof查看端口"></a>netstat、lsof查看端口</h2>
<h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3>
<p>netstat用来查看系统当前系统网络状态信息，包括端口，连接情况等，常用方式如下：</p>
<ul>
  <li>-t : 指明显示TCP端口</li>
  <li>-u : 指明显示UDP端口</li>
  <li>-l : 仅显示监听套接字(LISTEN状态的套接字)</li>
  <li>-p : 显示进程标识符和程序名称，每一个套接字/端口都属于一个程序</li>
  <li>-n : 不进行DNS解析</li>
  <li>-a 显示所有连接的端口</li>
</ul>
<p>直接查看端口命令。netstat -an | grep 22<br> note：22就是改为要查询的端口</p>
<h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3>
<p><a href="http://www.cnblogs.com/peida/archive/2013/02/26/2932972.html" target="_blank" rel="noopener">参考链接</a><br> lsof的作用是列出当前系统打开文件(list open files)，不过通过-i参数也能查看端口的连接情况，-i后跟冒号端口可以查看指定端口信息，直接-i是系统当前所有打开的端口</p>
<ul>
  <li>-a 列出打开文件存在的进程</li>
  <li>-c&lt;进程名&gt; 列出指定进程所打开的文件</li>
  <li>-g 列出GID号进程详情</li>
  <li>-d&lt;文件号&gt; 列出占用该文件号的进程</li>
  <li>+d&lt;目录&gt; 列出目录下被打开的文件</li>
  <li>+D&lt;目录&gt; 递归列出目录下被打开的文件</li>
  <li>-n&lt;目录&gt; 列出使用NFS的文件</li>
  <li>-i&lt;条件&gt; 列出符合条件的进程。（4、6、协议、:端口、 @ip ）</li>
  <li>-p&lt;进程号&gt; 列出指定进程号所打开的文件</li>
  <li>-u 列出UID号进程详情</li>
  <li>-h 显示帮助信息</li>
  <li>-v 显示版本信息</li>
</ul>
<p>lsof -i:22 #查看22端口连接情况，默认为sshd端口</p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3>
<ol>
  <li>使用lsof命令查看那条线程占用了25555端口</li>
  <li>执行kill命令杀掉那条线程 如： kill 15889</li>
</ol>
<p>（注：如果是centos系统的话，数字填的是PID下面的，其他系统类似）</p>
<h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3>
<h6 id="直接修改-PATH值："><a href="#直接修改-PATH值：" class="headerlink" title="直接修改$PATH值："></a>直接修改$PATH值：</h6>
<pre><code>export PATH=$PATH:/要添加的路径</code></pre>
<p>或者 </p>
<pre><code>export PATH=/要添加的路径$PATH</code></pre>
<p>注意PATH后没有空格</p>
<p>例：</p>
<pre><code>export PATH="/home/ubuntu/anaconda3/bin:$PATH"</code></pre>
<p>生效方法：立即生效</p>
<p>有效期限：临时改变，只能在当前的终端窗口中有效，当前窗口关闭后就会恢复原有的path配置</p>
<p>用户局限：仅对当前用户</p>
<h6 id="通过修改-bashrc文件：-bashrc文件在根目录下"><a href="#通过修改-bashrc文件：-bashrc文件在根目录下" class="headerlink" title="通过修改.bashrc文件：(.bashrc文件在根目录下)"></a>通过修改.bashrc文件：(.bashrc文件在根目录下)</h6>
<p>vi .bashrc //编辑.bashrc文件</p>
<p>//在最后一行添上：</p>
<p>export PATH=$PATH:/xxx/xxx ///xxx/xxx位需要加入的环境变量地址 等号两边没空格</p>
<p>生效方法：（有以下两种）</p>
<p>..关闭当前终端窗口，重新打开一个新终端窗口就能生效</p>
<p>..输入“source .bashrc”命令，立即生效</p>
<p>有效期限：永久有效</p>
<p>用户局限：仅对当前用户</p>
<h6 id="通过修改profile文件：（profile文件在-etc目录下）"><a href="#通过修改profile文件：（profile文件在-etc目录下）" class="headerlink" title="通过修改profile文件：（profile文件在/etc目录下）"></a>通过修改profile文件：（profile文件在/etc目录下）</h6>
<p>vi /etc/profile //编辑profile文件</p>
<p>//在最后一行添上：</p>
<p>export PATH=$PATH:/xxx/xxx</p>
<p>生效方法：系统重启</p>
<p>有效期限：永久有效</p>
<p>用户局限：对所有用户</p>
<h6 id="通过修改environment文件：（environment文件在-etc目录下）"><a href="#通过修改environment文件：（environment文件在-etc目录下）" class="headerlink" title="通过修改environment文件：（environment文件在/etc目录下）"></a>通过修改environment文件：（environment文件在/etc目录下）</h6>
<p>vi /etc/profile //编辑profile文件</p>
<p>在PATH=/·········中加入“:/xxx/xxx”</p>
<p>生效方法：系统重启</p>
<p>有效期限：永久有效</p>
<p>用户局限：对所有用户</p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>命令</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>博客功能测试专用</title>
    <url>/posts/35189442/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>视频播放测试：</p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>ONEdriver应用程序注册流程</title>
    <url>/posts/dcefea28/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="二、如何获取应用机密-client-secret-和应用-ID-client-id-？"><a href="#二、如何获取应用机密-client-secret-和应用-ID-client-id-？" class="headerlink" title="二、如何获取应用机密(client secret)和应用 ID(client_id)？"></a>二、如何获取应用机密(client secret)和应用 ID(client_id)？</h4>
<ol>
  <li>
    <p>登录：<a href="https://portal.azure.com/?l=zh-hans.zh-cn#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade" target="_blank" rel="noopener">https://portal.azure.com/?l=zh-hans.zh-cn#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade</a></p>
  </li>
  <li>
    <p>点击新注册</p>
  </li>
</ol>
<pre><code>- 名称：随便填
- 受支持的帐户类型：选择“任何组织目录中的帐户和个人 Microsoft 帐户”
- 重定向 URI (可选)：Web - https://pyoneauth.github.io/</code></pre>
<p> 点击创建，进入下一步</p>
<p> <strong>*创建之后，看到应用程序(客户端) ID，复制到上方应用 ID(client_id)</strong></p>
<p><strong>3. 开启权限：第2步创建应用程序之后，进入该应用的概述页面。</strong></p>
<p> 1）点击：API权限</p>
<p> 2）选择：添加权限：</p>
<pre><code>Microsoft Graph – 委派的权限 – Files - Files.ReadWrite 和 Files.ReadWrite.All </code></pre>
<ol start="4">
  <li>
    <p>创建秘钥：第2步创建应用程序之后，进入该应用的概述页面。</p>
    <p>1）点击：证书和密码</p>
    <p>2）选择：新客户端密码，添加秘钥：</p>
  </li>
</ol>
<p>​ 说明：随便填写</p>
<p>​ 截止期限：1年内</p>
<p> <strong>*3）点击保存，得到秘钥值，复制到上方应用机密(client secret)</strong></p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>分享网盘，ONEdrive</tag>
        <tag>pyone</tag>
      </tags>
  </entry>
  <entry>
    <title>宝塔面板常用指令</title>
    <url>/posts/2db0a1e1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="SSH终端输入："><a href="#SSH终端输入：" class="headerlink" title="SSH终端输入："></a>SSH终端输入：</h3>
<p>1.查看面板入口：</p>
<pre><code>/etc/init.d/bt default</code></pre>
<p>2.关闭安全入口：</p>
<pre><code>rm -f /www/server/panel/data/admin_path.pl</code></pre>
<p>停止</p>
<pre><code>/etc/init.d/bt stop</code></pre>
<p>启动</p>
<pre><code>/etc/init.d/bt start</code></pre>
<p>重启</p>
<pre><code>/etc/init.d/bt restart</code></pre>
<p>卸载</p>
<pre><code>/etc/init.d/bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /etc/init.d/bt &amp;&amp; rm -rf /www/server/panel</code></pre>
<p>查看当前面板端口</p>
<pre><code>cat /www/server/panel/data/port.pl</code></pre>
<p>修改面板端口，如要改成8881（centos 6 系统）</p>
<pre><code>echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restart
iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 8881 -j ACCEPT
service iptables save
service iptables restart</code></pre>
<p>修改面板端口，如要改成8881（centos 7 系统）</p>
<pre><code>echo '8881' &gt; /www/server/panel/data/port.pl &amp;&amp; /etc/init.d/bt restart
firewall-cmd --permanent --zone=public --add-port=8881/tcp
firewall-cmd --reload</code></pre>
<p>强制修改MySQL管理(root)密码，如要改成123456</p>
<pre><code>cd /www/server/panel &amp;&amp; python tools.py root 123456</code></pre>
<p>修改面板密码，如要改成123456</p>
<pre><code>cd /www/server/panel &amp;&amp; python tools.py panel 123456</code></pre>
<p>查看宝塔日志</p>
<pre><code>cat /tmp/panelBoot.pl</code></pre>
<p>查看软件安装日志</p>
<pre><code>cat /tmp/panelExec.log</code></pre>
<p>站点配置文件位置</p>
<pre><code>/www/server/panel/vhost</code></pre>
<p>删除域名绑定面板</p>
<pre><code>rm -f /www/server/panel/data/domain.conf</code></pre>
<p>清理登陆限制</p>
<pre><code>rm -f /www/server/panel/data/*.login</code></pre>
<p>查看面板授权IP</p>
<pre><code>cat /www/server/panel/data/limitip.conf</code></pre>
<p>关闭访问限制</p>
<pre><code>rm -f /www/server/panel/data/limitip.conf</code></pre>
<p>查看许可域名</p>
<pre><code>cat /www/server/panel/data/domain.conf</code></pre>
<p>关闭面板SSL</p>
<pre><code>rm -f /www/server/panel/data/ssl.pl &amp;&amp; /etc/init.d/bt restart</code></pre>
<p>查看面板错误日志</p>
<pre><code>cat /tmp/panelBoot</code></pre>
<p>查看数据库错误日志</p>
<pre><code>cat /www/server/data/*.err</code></pre>
<p>站点配置文件目录(nginx)</p>
<pre><code>/www/server/panel/vhost/nginx</code></pre>
<p>站点配置文件目录(apache)</p>
<pre><code>/www/server/panel/vhost/apache</code></pre>
<p>站点默认目录</p>
<pre><code>/www/wwwroot</code></pre>
<p>数据库备份目录</p>
<pre><code>/www/backup/database</code></pre>
<p>站点备份目录</p>
<pre><code>/www/backup/site</code></pre>
<p>站点日志</p>
<pre><code>/www/wwwlogs</code></pre><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>命令，宝塔</tag>
      </tags>
  </entry>
  <entry>
    <title>2020寒假建站记录</title>
    <url>/posts/f0e4e3b5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>搭建以下网站的前提条件：</p>
<p>1, 一个服务器</p>
<p>2，一个域名（便宜的有1元一年，像我买的就是)</p>
<p>3, 大量的时间</p>
<p>（如果你是一个学生，并且可以FAN墙的话，可以免费的弄到上面的所有东西，不过非常麻烦，建议时间少并且宝贵的可以直接去腾讯云，或是阿里云购买，除非是像我那么闲的人才会到处白嫖）</p>
<hr>
<h6 id="第一个搭建的网站是："><a href="#第一个搭建的网站是：" class="headerlink" title="第一个搭建的网站是："></a>第一个搭建的网站是：</h6>
<p><a href="https://guhailong18.github.io/">https://guhailong18.github.io/</a></p>
<p>一个静态博客</p>
<p>利用Github的储存库，基于hexo搭建静态博客。</p>
<p>优点：方便使用，响应速度快，支持GIF等</p>
<p>缺点：部分功能缺失，无用户功能，评论系统单调乏味，深度美化难度大，需要学习CSS和html</p>
<p>（如果有会的希望能在评论区留下联系方式，教教我美化和视频插入参数的设置）</p>
<h6 id="第二个搭建的网站是："><a href="#第二个搭建的网站是：" class="headerlink" title="第二个搭建的网站是："></a>第二个搭建的网站是：</h6>
<p><a href="http://a.dream18.xyz" target="_blank" rel="noopener">http://a.dream18.xyz</a></p>
<p>这个网站真的弄了很久，</p>
<h6 id="第三个搭建的网站是："><a href="#第三个搭建的网站是：" class="headerlink" title="第三个搭建的网站是："></a>第三个搭建的网站是：</h6>
<p><a href="http://b.dream18.xyz" target="_blank" rel="noopener">http://b.dream18.xyz</a></p>
<p>一个私有云盘，方便与他人共享资源等，可以为网页提供视频服务，并且不限速</p>
<p>基于宝塔，AWS服务器，KobExporer</p>
<h6 id="第四个搭建的网站是："><a href="#第四个搭建的网站是：" class="headerlink" title="第四个搭建的网站是："></a>第四个搭建的网站是：</h6>
<p><a href="http://c.dream18.xyz" target="_blank" rel="noopener">http://c.dream18.xyz</a></p>
<p>一个重量级的博客</p>
<p>优点：功能齐全，调节方便，可在线编辑</p>
<p>缺点：过于臃肿，时常崩溃，哭了（应该是我的服务器的问题，一核1G的承受不住啊），服务器好的大佬建议使用这个，部分插件及主题要钱</p>
<p><img src="/posts/f0e4e3b5/10A4F57B.jpg" alt="10A4F57B"></p>
<p>基于宝塔，AWS服务器，WordPress框架</p>
<h6 id="第五个搭建的网站是："><a href="#第五个搭建的网站是：" class="headerlink" title="第五个搭建的网站是："></a>第五个搭建的网站是：</h6>
<p><a href="http://d.dream18.xyz" target="_blank" rel="noopener">http://d.dream18.xyz</a></p>
<p>（待建）</p>
<h6 id="第六个搭建的网站是："><a href="#第六个搭建的网站是：" class="headerlink" title="第六个搭建的网站是："></a>第六个搭建的网站是：</h6>
<p><a href="http://e.dream18.xyz" target="_blank" rel="noopener">http://e.dream18.xyz</a></p>
<p>（待建）</p>
<h6 id="第七个搭建的网站是："><a href="#第七个搭建的网站是：" class="headerlink" title="第七个搭建的网站是："></a>第七个搭建的网站是：</h6>
<p><a href="http://m.dream18.xyz" target="_blank" rel="noopener">http://m.dream18.xyz</a></p>
<p>一个微信开发及管理平台，可以方便的管理公众号以及小程序，并且可以创建一些自动回复或者聊天机器人等有趣的功能。</p>
<p>优点：使用方便，粉丝多的可以试一下，也有些有免费的功能</p>
<p>缺点：有些服务要钱，并且我公众号又没粉丝</p>
<p>基于宝塔，AWS服务器，微擎构建</p>
<h6 id="第八个搭建的网站是："><a href="#第八个搭建的网站是：" class="headerlink" title="第八个搭建的网站是："></a>第八个搭建的网站是：</h6>
<p><a href="http://dream18.xyz" target="_blank" rel="noopener">http://dream18.xyz</a></p>
<p>其实这个不算一个网站，是我设置的一个企业邮箱，可以有这个域名指向网易免费的企业邮箱</p>
<p>2020.01.24</p>
<h6 id="第九个搭建的网站是："><a href="#第九个搭建的网站是：" class="headerlink" title="第九个搭建的网站是："></a>第九个搭建的网站是：</h6>
<p>(PS：以上的网站并不是按时间搭建的，而是按字母和我的个人兴趣排的)</p>
<p>总结：现在搭建一个博客网站真的是一个十分轻松的事情（如果愿意花些钱的话），但是想做的比较好却没有那么容易，特别是美化博客的时候，有些简单的功能想实现真的有些麻烦，特别是我这种没怎么学过代码的人，只能看着别人的教程一步一步学，如果你和我一样，且运气不是很好的话，那么就会遇到一大堆报错，以后有时间我会把做的比较好的教程整理出来分享给大家，顺便做一些补充和说明，希望大家不要踩到我曾经踩过得坑。</p>
<hr>
<p>如果有小伙伴对以上那个网站搭建感兴趣的请在下方留言，如果我有时间的话，可以出一个搭建过程或是指导建议！</p>
<p>最后祝大家鼠年大吉！！！</p>
<p><img src="/posts/f0e4e3b5/10B7F0DB.gif" alt="10B7F0DB"></p>
<p>再来一张！！！</p>
<p><img src="/posts/f0e4e3b5/10B7B122.gif" alt="10B7B122"></p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>建站</tag>
        <tag>寒假</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome浏览器一个有意思的彩蛋</title>
    <url>/posts/a5735571/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>某一天再看公众号文章的时候突然发现，chrome浏览器竟然给用户设置了一个彩蛋（也可能还有很多我还没看到或被发现），一起看看吧！</p>
<p>打开谷歌浏览器，假如网线出现问题、无法正常访问网页时，就会出现以下提示：<strong>未连接到互联网，请重试…</strong></p>
<p><img src="/posts/a5735571/Snipaste_2020-01-20_19-25-59.png" alt="Snipaste_2020-01-20_19-25-59"></p>
<p>相信使用过chrome浏览器的用户大部分都看到过过这种图片，一般出现于断网的情况，但想必大部分人都不会想到这小小的恐龙竟然是一个小游戏！</p>
<p>处于这种状态下，我们按键盘的“<strong>↑</strong>”键，恐龙就会直接动起来，现在你就进入了“恐龙越障碍”的小游戏…</p>
<p>当然，联网状态下也能直接玩，通过谷歌浏览器访问以下网站即可。</p>
<p><strong>→</strong> chrome://dino/</p>
<p>（复制网址，通过浏览器打开）</p>
<p><img src="/posts/a5735571/1.gif" alt="1"></p>
<p>是不是挺有意思的呢，没网的时候玩这个游戏说不定可以给你带来一丝慰藉！</p>
<p>(σﾟ∀ﾟ)σ..:*☆哎哟不错哦</p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>彩蛋</tag>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>我们生活的世界到底是几维的？</title>
    <url>/posts/8902adc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>身为科普类作品，为了使受众面更广，所以远方客（我）会从最基本的概念开始，以确保大家都可以听懂，学到知识，不要嫌弃我话痨哦，那么我们就开始啦！</p>
<p>在<a href="https://baike.baidu.com/item/物理学/313183" target="_blank" rel="noopener">物理学</a>和<a href="https://baike.baidu.com/item/哲学/140608" target="_blank" rel="noopener">哲学</a>的领域内，指独立的时空坐标的数目</p>
<p>如果用较为传统的观念想，我们所处的空间是三维的，而如果加上时间的话，便是四维的。可能有人会提出一个疑问，为什么要加上时间这个维度呢？</p>
<p>因为从爱因斯坦的相对论来看，时间和空间是紧紧联系在一起的，可以说是你中有我，我中有你的状态。所以我们无法把空间单独拿出来而不考虑时间的影响。</p>
<p>而时间这个维度也比较特殊，是单方向的。我们正常人都会觉得这是非常正常的事情，仿佛理所当然就应该是这样的，就跟苹果成熟后就会掉在地上一样。但是如果把时间放在理论上看就完全不一样了，因为从理论上看，时间理应是双方向的。这使得无数的物理学家为之困惑，也提出了非常多的猜想来解决这个问题，比较著名的有</p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>科普</tag>
        <tag>物理</tag>
        <tag>文案</tag>
      </tags>
  </entry>
  <entry>
    <title>2020寒假学习记录（爬虫篇）</title>
    <url>/posts/ff1e4930/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>2020寒假学习记录（数学建模篇）</title>
    <url>/posts/7cee0e0f/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>
  <center>数据处理</center>
</h1>
<hr>
<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>
  <center>算法</center>
</h1>
<h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2>
<h3 id="分类方法"><a href="#分类方法" class="headerlink" title="分类方法"></a>分类方法</h3>
<h5 id="1-K-近邻分类"><a href="#1-K-近邻分类" class="headerlink" title="1.K-近邻分类"></a>1.K-近邻分类</h5>
<p>一种基于实例的，非参数的分类方法。</p>
<p>​ </p><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>2020寒假学习</tag>
        <tag>数模</tag>
      </tags>
  </entry>
  <entry>
    <title>2020寒假学习记录（MAD篇）</title>
    <url>/posts/8c706961/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-人物定格描边"><a href="#1-人物定格描边" class="headerlink" title="1.人物定格描边"></a>1.人物定格描边</h2><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>2020寒假学习</tag>
        <tag>MAD</tag>
      </tags>
  </entry>
  <entry>
    <title>读《人间失格》-手札有感</title>
    <url>/posts/a6a55fc/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="非常抱歉, 这个密码看着不太对, 请您再试试吧." data-whm="很抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码才能查看哦." /><label>您好, 这里需要密码才能查看哦.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="05e414f9dda1980413520871c6083fca9bad9022c89a1130d45e5bc8d3576c47">f2f5a9452dd8b166e2e261132d2a34e56a25d55b5cb940efef431ed7a9ffccf25d8505a1838ce3e1bd7aa1e1345de9ec0c4d3116c35d213fc1acfac45d0320a52d0639762ee038e02f2aaaebb772a1987091c6a6195c207e31041f63f85fa3133fb4ac96aa819336c1c28464e78f2e788e5e33217c360ed96d318a96ae5e4e9b3ae98793ce542861e8c01230b034f60ada3864cdb3890f36bb04501c4c9c962dac7711f4fb1c56e1136d263c462f016f5ba09ab66310875a2db723a65e02e509fd23cc0f5bc090d0af516dc0ab6226c46b99403bf2cc45c37efa6af8397d70bd8340ccfd4680c129935e87e1bc2dd832385744ce3cccf2a344725b00f77f9291024a102a8da882e2015bc24fa8894229fd960d2e831fed37fb5fb023672352735bc633255b65396eef4f83dc4200e76f87c08256195e548c3ae64140f1359694714e785ae299f4d7a693a144adc9077f3a817647063779437eb9dbaa31859fcf72011a612ff012f8b9be02a496d0e78700356b6544b6ce4740163c8d7d765863fca27f12916736b34f75c65d7add98f8bb708d5835c8587f02f7ca69f964bd7efbf785b16778778b4af808163cbe76eb8598ac05b6c01bfce8fb06a53e3d25d5f9e253b382c46c90fc0975b23323470b45a9ca80a037f199491a6d9640c92b6884e23a14014cd239c430bfd04c8a9c0b907f9a76b648038801e0ae6bc425d2bf6c412fc8ec60ed3f6e015c342ca668213754ce41a0270105ba7699bde680cc0c527f380ef4a4986e46fae807621368958d47eb676d054341686e702af2c34a99f772480267e24109cba8de63dca8570b639a9935859a14e2940ea52207764edaaa092d39471b8662d771786c5975608a25eb2d3c489258b4f9cbdc8307b2ef5a5804eb4916b527bde4d6e8a8167f563a6a58bf28f6cbf67ae90278bbe749e568ace03867a94d10d985a6c5a31912ffe8cf168a40f44d94d0bbc6256c56e0a98869a981abe043cd5ca445b5d0fea272195e0e8b86c419c69f590a4468fbf9e8df44d03bfbf0388cf58139f33f44d4e9b6b7c74f032870a74b3f19f4864c60173d111dcac90313eb86e8e4938f96e9bd662171aa7ddbd146ff7d6ae544b32a86f1bcd04252a3e8435c780bd1da5ce6320a3613f7b1d6d0ae1e2408fe1c275a41bb361f676c3f48a0e7eb096a5a7e520fc6e2ab34d6132b7f280376e5b3b6a6b7b831d31d93e7905d1e10675b4ebb9d795dbe2f9d84c72e00493f4195cfff63d6dd138a095c29079df3d4c9065728be0f7a2d400007484020b00a66c118c57b8be98302791837f46ddab83396e08bd9b62c7f1011efecd1ff8b5fd68215aa8b52993b73b07f43f4ec30a3d9d26166477c5f7de13eedf5fcd81e9b690975a0d4d6368c5087e6473297f4054fc9e81e74d9a81159d2d8bc96cb533867afb59c2f2125602e1d89c3c664ca0c5d41254a826ff76db6ee1902c18c1aed9a7e81ebb397bdfcf19ce72889499c703927571d18afc28ab0ede27a908225a08a309187bc2c1b6499770491a24cc24d542d8638edc23329b12d3833466242adc5834c3b69ce0a7aff5fa3ab61561282acc0118db3b8150ddc2bf117c1c394758dd6653da11de7351a7edc042fe76341603ea9b18da66fb13945a2cf34a21e59c8286a1b8963cc03653c2be91f97df1d599e990156fe6fec3f858acbd16a4a9bf56fe4179b77c766f17128de3f02a655cb8ac0fbc10bd7fcc7ea7f284fc220979a51b063e459c1a346e142cbb6fd2ba7c6b52c73f4389d3435b8158089aadb45fe96b0cbaedc37ffc919c6410c04dad827243b3aaa8d61844c33e392b7d98c2ef855610ca6a616dd737746c1a8d086b4221f1cab34c274c1a0ac0f95f0e34cc33de57f8489f59b25625bf1429f4f79441b153403355bd0f476da0faca7e811363a3b2dfd359e2e1cdc3a5557d8a62ddfc49331add2da09bd496351152e9cd9783c300e84a929da66cb8a74af4c7fce721a0024990eff20438c91e2665c756bbe066612a456cf6021559faf85c792f61b0109e5cb74fecee0db50568c104c63bb58039c7389eeb53d506456b632f6e04a153f7f26749b78e342f30e55e4b3f78cbf5fcce13db64be5b08ebe09323e9fd31579f52e075655f08fb59ef08f9177a16371de4a207c4b58e102c953517786e68282550520a23fff384b5a7d14dcefdb61a7b7e45b52b88eba2cc86d19c9df8ee244a48195524d137e2ce51c0809135a265fcac66a0a5076b30f4d07b57cb68d5807d2adaf9da46e690e278952d17aaf300d6dedea9c0890ca7e1539275205fd2caafdef6eb4e7ab7bce393b2ee0c833e5396b03a9ea0f03272314eef7594f8ebb18fc5c8124c1cd97c2dcf84738d3c242f860bf2ac1272d95770fb1ab1e5e7a864fd0f076fc00df3bd17f93c237c4c16143d9723e51e3ac8c69a2f99fde51572a764e5b1569fb30b8ebb10dd84ee7546553cb377cf25e36d9b2a17c97101052f2510d82b404e5dcd52c6bcbd593361994bd18f3b7059d0eb7910c750afd1b4c9e592791ccd66bd956c4434f3c8032f048a2287bbb2fed53f8e8afc2eaf7b79cc00612baebf0de61ec581d348e17ae5e498fe68de4846e860fc03aaf55b3daca58107474fe327f6d09c0296df85d408863706a931594222fc960cbc09deffefbe62d72c1983f8de60ef775cb7db024f7b47fe9bed7e0ebfea2e806499476be27351bb7e42a24242cd253bcd1ae36a7f3519b27fe930ea5d6570f1fb18b0ba27e376fa9f45856a313dc6b6664498f1a75992ee1593797888fa34487b27e9c398761a809ca57a92e19352bc8e076aa0d245bf835471ad81362003518913d0cd1af6e86763e1652ad2a15d5be2a1d704a184651f4bc0f46fee8ad8c40316d7e137b3292d913dc6282c1b5a803b4aeeb2851df9480bcaac1a958236d4ec7a164894ba3795b3683df021edf11864314a3574e56bb94ff21353cf57ead58c3e27e10daeddccd4f057328e308b81e99191a90c7c56cb074f1b7594f42561868d86a78c6c26c7ef447932f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>读书感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>表情包分享（1）</title>
    <url>/posts/ceee3096/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="第一期分享给大家的是《80年代宣传画系列》"><a href="#第一期分享给大家的是《80年代宣传画系列》" class="headerlink" title="第一期分享给大家的是《80年代宣传画系列》"></a>第一期分享给大家的是《80年代宣传画系列》</h1>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(1).jpg" alt="80年代宣传画 (1)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(2).jpg" alt="80年代宣传画 (2)"></p>
<a id="more"></a>

<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(3).jpg" alt="80年代宣传画 (3)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(4).jpg" alt="80年代宣传画 (4)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(5).jpg" alt="80年代宣传画 (5)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(31).jpg" alt="80年代宣传画 (31)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(32).jpg" alt="80年代宣传画 (32)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(33).jpg" alt="80年代宣传画 (33)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(34).jpg" alt="80年代宣传画 (34)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(35).jpg" alt="80年代宣传画 (35)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(36).jpg" alt="80年代宣传画 (36)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(37).jpg" alt="80年代宣传画 (37)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(38).jpg" alt="80年代宣传画 (38)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(39).jpg" alt="80年代宣传画 (39)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(40).jpg" alt="80年代宣传画 (40)"></p>
<p><img src="/posts/ceee3096/80%E5%B9%B4%E4%BB%A3%E5%AE%A3%E4%BC%A0%E7%94%BB%20(41).jpg" alt="80年代宣传画 (41)"></p>
<p>封面测试：</p>
<div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div>
<p>no url specified, no dplayer _(:3」∠)_</p>



<h6 id="需要的自取即可，欢迎在评论区给我留言哦！！"><a href="#需要的自取即可，欢迎在评论区给我留言哦！！" class="headerlink" title="需要的自取即可，欢迎在评论区给我留言哦！！"></a>需要的自取即可，欢迎在评论区给我留言哦！！</h6>
<hr><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>娱乐</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客——自我介绍</title>
    <url>/posts/6007b04d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是一个分享一些自己心得，爱好以及知识的博客，本人只是一名普通的大学生，不是啥大神。不用抱有太高的期待或是要求，如果能帮助到部分人或是给部分人带来些许快乐，实乃我无上的荣耀…..（此处运用了夸张的手法并省略两千字）</p>
<p>邮箱：<a href="mailto:1097629344@qq.com">1097629344@qq.com</a></p>
<p>欢迎大家与我交流！!!<img src="/posts/6007b04d/08.jpg"></p>

<div id="aplayer-fZigdGfJ" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="60198" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div>



<a id="more"></a>



<hr>
<div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div>
<script>
  (function() {
    var player = new DPlayer({
      "container": document.getElementById("dplayer1"),
      "video": {
        "url": "https://dl.sm9.top/Video/2018/KeyCastOW.mp4"
      }
    });
    window.dplayers || (window.dplayers = []);
    window.dplayers.push(player);
  })()
</script>

<hr>
<iframe src="//player.bilibili.com/player.html?aid=82968958&amp;cid=141941752&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" style="width:700px;height:550px;" allowfullscreen="true"> </iframe>
------



<iframe style="margin-left: 2px; margin-bottom:-5px;" frameborder="0" scrolling="0" width="100px" height="20px" src="https://ghbtns.com/github-btn.html?user=fandongtongxue&amp;repo=fandongtongxue.github.io&amp;type=star&amp;count=true"> </iframe><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>自述</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2>
<a id="more"></a>

<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3>
<pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3>
<pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3>
<pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3>
<pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<hr>
<div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div>
<script>
  (function() {
    var player = new DPlayer({
      "container": document.getElementById("dplayer0"),
      "autoplay": true,
      "hotkey": true,
      "preload": "metadata",
      "video": {
        "url": "http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4"
      }
    });
    window.dplayers || (window.dplayers = []);
    window.dplayers.push(player);
  })()
</script>
<hr><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
</search>
